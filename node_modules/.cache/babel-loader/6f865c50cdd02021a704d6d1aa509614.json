{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/index.js\";\nimport React from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar'; // import Typography from '@material-ui/core/Typography';\n\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid'; // import Paper from '@material-ui/core/Paper';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport './index.css'; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: '36ch',\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   inline: {\n//     display: 'inline',\n//   },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Community extends React.Component {\n  // {const classes = useStyles}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ForumList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ForumList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openNewPost: false,\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postFilter: \"\",\n      commenter: \"\",\n      commentContent: \"\",\n      posts: [{\n        author: 'Angus Wang',\n        title: 'welcome to communtiy',\n        content: 'this is the first community thread',\n        authorAvatar: null,\n        category: \"Announcement\",\n        comments: [{\n          commenter: \"Angus Wang\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"\n        }, {\n          commenter: \"Angus Wang2\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"\n        }]\n      }, {\n        author: 'boogy boy',\n        title: 'test thread',\n        content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ',\n        authorAvatar: null,\n        category: \"Opinion\",\n        comments: [{\n          commenter: \"Angus Wang3\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"\n        }, {\n          commenter: \"Dude with an attitude\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"\n        }]\n      }]\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        openNewPost: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openNewPost: false\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFilterInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        postFilter: value\n      });\n    };\n\n    this.addPost = () => {\n      const postList = this.state.posts;\n      const newPost = {\n        author: this.state.author,\n        title: this.state.title,\n        authorAvatar: null,\n        content: this.state.content,\n        category: this.state.category,\n        comments: []\n      };\n      postList.push(newPost);\n      this.setState({\n        posts: postList,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\"\n      });\n      this.handleClose();\n    };\n\n    this.changeCategory = _category => {\n      this.setState({\n        category: _category\n      });\n    };\n\n    this.postComment = targetPost => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          className: \"forumList\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-evenly\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                minWidth: 200\n              },\n              children: [\"         \", /*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Filter Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: this.handleFilterInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Announcement\",\n                  children: \"Announcement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Question\",\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Opinion\",\n                  children: \"Opinion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"newPostButton\",\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: this.handleClickOpen,\n              children: \"New Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          className: \"forumList\",\n          children: this.state.posts.map(thread => {\n            if (this.state.postFilter === \"\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this);\n            } else if (this.state.postFilter === thread.category) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openNewPost,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"New Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.author,\n            onChange: this.handleInputChange,\n            autoFocus: true,\n            size: \"small\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"author\",\n            label: \"Username\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"categoryTitle\",\n            children: \"Category: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            color: \"primary\",\n            \"aria-label\": \"outlined primary button group\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.changeCategory(\"Announcement\"),\n              children: \"Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.changeCategory(\"Question\"),\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.changeCategory(\"Opinion\"),\n              children: \"Opinion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.title,\n            onChange: this.handleInputChange,\n            size: \"small\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"title\",\n            label: \"Post Title\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.content,\n            onChange: this.handleInputChange,\n            multiline: true,\n            rows: \"5\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"content\",\n            label: \"Say something here...\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.addPost,\n            color: \"primary\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ForumListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openPost: false,\n      commenter: \"\",\n      comment: \"\"\n    };\n\n    this.openPost = () => {\n      this.setState({\n        openPost: true\n      });\n    };\n\n    this.closePost = () => {\n      this.setState({\n        openPost: false\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      avatar,\n      postTitle,\n      postAuthor,\n      postTextContent,\n      category,\n      comments,\n      postComment\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        button: \"true\",\n        onClick: this.openPost,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [postTitle, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"postAuthor\",\n              children: [\" :: \", postAuthor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openPost,\n        onClose: this.closePost,\n        \"aria-labelledby\": \"form-dialog-title\",\n        fullScreen: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.closePost,\n            color: \"primary\",\n            variant: \"outlined\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: category,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), \" :: \", postTitle, \" ::\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"categoryTitle\",\n            children: [\" \", postAuthor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            style: {\n              color: 'black'\n            },\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n            style: {\n              color: 'maroon'\n            },\n            children: \"Post a Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.commenter,\n            onChange: this.handleInputChange,\n            autoFocus: true,\n            size: \"small\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"commenter\",\n            label: \"Username\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.comment,\n            onChange: this.handleInputChange,\n            multiline: true,\n            rows: \"3\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"commentContent\",\n            label: \"Say something...\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => postComment(this),\n            children: \"Post!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            className: \"commentList\",\n            children: comments.map(comment => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Comment, {\n                  commenter: comment.commenter,\n                  commentContent: comment.commentContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Comment extends React.Component {\n  render() {\n    const {\n      commenter,\n      commentContent\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: commenter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: commentContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Community;","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/index.js"],"names":["React","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Chip","Button","ButtonGroup","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Container","Box","InputLabel","MenuItem","FormControl","Select","AppBar","Toolbar","Community","Component","render","ForumList","state","openNewPost","author","title","authorAvatar","content","category","postFilter","commenter","commentContent","posts","comments","handleClickOpen","setState","handleClose","handleInputChange","event","value","target","name","handleFilterInputChange","addPost","postList","newPost","push","changeCategory","_category","postComment","targetPost","minWidth","map","thread","ForumListItem","openPost","comment","closePost","avatar","postTitle","postAuthor","postTextContent","props","color","Comment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,OAAO,aAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAN,SAAwBzB,KAAK,CAAC0B,SAA9B,CAAwC;AACtC;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AATqC;;AAYxC,MAAMC,SAAN,SAAwB5B,KAAK,CAAC0B,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCG,KAFsC,GAE9B;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,YAAY,EAAE,EAJR;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,SAAS,EAAE,EARL;AASNC,MAAAA,cAAc,EAAE,EATV;AAUNC,MAAAA,KAAK,EAAE,CACL;AAACR,QAAAA,MAAM,EAAE,YAAT;AACCC,QAAAA,KAAK,EAAE,sBADR;AAECE,QAAAA,OAAO,EAAE,oCAFV;AAGCD,QAAAA,YAAY,EAAE,IAHf;AAICE,QAAAA,QAAQ,EAAE,cAJX;AAKCK,QAAAA,QAAQ,EAAE,CACT;AAACH,UAAAA,SAAS,EAAE,YAAZ;AACCC,UAAAA,cAAc,EAAE;AADjB,SADS,EAGT;AAACD,UAAAA,SAAS,EAAE,aAAZ;AACCC,UAAAA,cAAc,EAAE;AADjB,SAHS;AALX,OADK,EAaL;AAACP,QAAAA,MAAM,EAAE,WAAT;AACCC,QAAAA,KAAK,EAAE,aADR;AAECE,QAAAA,OAAO,EAAE,6RAFV;AAGCD,QAAAA,YAAY,EAAE,IAHf;AAICE,QAAAA,QAAQ,EAAE,SAJX;AAKCK,QAAAA,QAAQ,EAAE,CACT;AAACH,UAAAA,SAAS,EAAE,aAAZ;AACCC,UAAAA,cAAc,EAAE;AADjB,SADS,EAGT;AAACD,UAAAA,SAAS,EAAE,uBAAZ;AACCC,UAAAA,cAAc,EAAE;AADjB,SAHS;AALX,OAbK;AAVD,KAF8B;;AAAA,SAyCtCG,eAzCsC,GAyCpB,MAAM;AACtB,WAAKC,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KA7CqC;;AAAA,SA+CtCa,WA/CsC,GA+CxB,MAAM;AAClB,WAAKD,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAnDqC;;AAAA,SAqDtCc,iBArDsC,GAqDjBC,KAAD,IAAW;AAC7B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;AAEA,WAAKN,QAAL,CAAc;AACZ,SAACM,IAAD,GAAQF;AADI,OAAd;AAGD,KA5DqC;;AAAA,SA8DtCG,uBA9DsC,GA8DXJ,KAAD,IAAW;AACnC,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAEA,WAAKJ,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAEU;AADA,OAAd;AAGD,KApEqC;;AAAA,SAsEtCI,OAtEsC,GAsE5B,MAAM;AACd,YAAMC,QAAQ,GAAG,KAAKtB,KAAL,CAAWU,KAA5B;AAEA,YAAMa,OAAO,GAAG;AACdrB,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADL;AAEdC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFJ;AAGdC,QAAAA,YAAY,EAAE,IAHA;AAIdC,QAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OAJN;AAKdC,QAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM,QALP;AAMdK,QAAAA,QAAQ,EAAE;AANI,OAAhB;AASAW,MAAAA,QAAQ,CAACE,IAAT,CAAcD,OAAd;AAEA,WAAKV,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEY,QADK;AAGZpB,QAAAA,MAAM,EAAE,EAHI;AAIZC,QAAAA,KAAK,EAAE,EAJK;AAKZC,QAAAA,YAAY,EAAE,EALF;AAMZC,QAAAA,OAAO,EAAE,EANG;AAOZC,QAAAA,QAAQ,EAAE;AAPE,OAAd;AAUA,WAAKQ,WAAL;AACD,KA/FqC;;AAAA,SAiGtCW,cAjGsC,GAiGpBC,SAAD,IAAe;AAC9B,WAAKb,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAEoB;AADE,OAAd;AAGD,KArGqC;;AAAA,SAuGtCC,WAvGsC,GAuGvBC,UAAD,IAAgB,CAE7B,CAzGqC;AAAA;;AA2GtC9B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,iCAEE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAC,cAAxB;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE;AAAC+B,gBAAAA,QAAQ,EAAE;AAAX,eAApB;AAAA,mDACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,MAAD;AAAQ,gBAAA,QAAQ,EAAG,KAAKT,uBAAxB;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,eAAlB;AAAkC,cAAA,KAAK,EAAC,SAAxC;AAAkD,cAAA,OAAO,EAAC,WAA1D;AAAsE,cAAA,OAAO,EAAG,KAAKR,eAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE;AAAA;AAAA;AAAA;AAAA,gBApBF,eAsBE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBACG,KAAKZ,KAAL,CAAWU,KAAX,CAAiBoB,GAAjB,CAAsBC,MAAD,IAAY;AAChC,gBAAI,KAAK/B,KAAL,CAAWO,UAAX,KAA0B,EAA9B,EAAkC;AAChC,kCACE;AAAA,wCACE,QAAC,aAAD;AAAe,kBAAA,SAAS,EAAGwB,MAAM,CAAC5B,KAAlC;AACc,kBAAA,UAAU,EAAG4B,MAAM,CAAC7B,MADlC;AAEc,kBAAA,eAAe,EAAG6B,MAAM,CAAC1B,OAFvC;AAGc,kBAAA,MAAM,EAAG0B,MAAM,CAAC3B,YAH9B;AAIc,kBAAA,QAAQ,EAAG2B,MAAM,CAACzB,QAJhC;AAKc,kBAAA,QAAQ,EAAGyB,MAAM,CAACpB,QALhC;AAMc,kBAAA,WAAW,EAAG,KAAKgB;AANjC;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,OAAjB;AAAyB,kBAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAYD,aAbD,MAcK,IAAI,KAAK3B,KAAL,CAAWO,UAAX,KAA0BwB,MAAM,CAACzB,QAArC,EAA+C;AAClD,kCACE;AAAA,wCACE,QAAC,aAAD;AAAe,kBAAA,SAAS,EAAGyB,MAAM,CAAC5B,KAAlC;AACc,kBAAA,UAAU,EAAG4B,MAAM,CAAC7B,MADlC;AAEc,kBAAA,eAAe,EAAG6B,MAAM,CAAC1B,OAFvC;AAGc,kBAAA,MAAM,EAAG0B,MAAM,CAAC3B,YAH9B;AAIc,kBAAA,QAAQ,EAAG2B,MAAM,CAACzB,QAJhC;AAKc,kBAAA,QAAQ,EAAGyB,MAAM,CAACpB,QALhC;AAMc,kBAAA,WAAW,EAAG,KAAKgB;AANjC;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,OAAjB;AAAyB,kBAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAYD;AACF,WA7BA;AADH;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0DE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAG,KAAK3B,KAAL,CAAWC,WAA1B;AAAwC,QAAA,OAAO,EAAG,KAAKa,WAAvD;AAAqE,2BAAgB,mBAArF;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAG,KAAKd,KAAL,CAAWE,MADrB;AAEE,YAAA,QAAQ,EAAG,KAAKa,iBAFlB;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,MAAM,EAAC,OANT;AAOE,YAAA,IAAI,EAAC,QAPP;AAQE,YAAA,KAAK,EAAC,UARR;AASE,YAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE,QAAC,WAAD;AAAa,YAAA,KAAK,EAAC,SAAnB;AAA6B,0BAAW,+BAAxC;AAAwE,YAAA,SAAS,MAAjF;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAM,KAAKU,cAAL,CAAoB,cAApB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAM,KAAKA,cAAL,CAAoB,UAApB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAM,KAAKA,cAAL,CAAoB,SAApB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAsBE,QAAC,SAAD;AACE,YAAA,KAAK,EAAG,KAAKzB,KAAL,CAAWG,KADrB;AAEE,YAAA,QAAQ,EAAG,KAAKY,iBAFlB;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,MAAM,EAAC,OALT;AAME,YAAA,IAAI,EAAC,OANP;AAOE,YAAA,KAAK,EAAC,YAPR;AAQE,YAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAiCE,QAAC,SAAD;AACE,YAAA,KAAK,EAAG,KAAKf,KAAL,CAAWK,OADrB;AAEE,YAAA,QAAQ,EAAG,KAAKU,iBAFlB;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,IAAI,EAAC,GAJP;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,MAAM,EAAC,OANT;AAOE,YAAA,IAAI,EAAC,SAPP;AAQE,YAAA,KAAK,EAAC,uBARR;AASE,YAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA,kBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAgDE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAG,KAAKD,WAAvB;AAAqC,YAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAG,KAAKO,OAAvB;AAAiC,YAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsHD;;AAlOqC;;AAqOxC,MAAMW,aAAN,SAA4B7D,KAAK,CAAC0B,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAE1CG,KAF0C,GAElC;AACNiC,MAAAA,QAAQ,EAAE,KADJ;AAENzB,MAAAA,SAAS,EAAE,EAFL;AAGN0B,MAAAA,OAAO,EAAE;AAHH,KAFkC;;AAAA,SAQ1CD,QAR0C,GAQ/B,MAAM;AACf,WAAKpB,QAAL,CAAc;AACZoB,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KAZyC;;AAAA,SAc1CE,SAd0C,GAc9B,MAAM;AAChB,WAAKtB,QAAL,CAAc;AACZoB,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KAlByC;;AAAA,SAoB1ClB,iBApB0C,GAoBrBC,KAAD,IAAW;AAC7B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;AAEA,WAAKN,QAAL,CAAc;AACZ,SAACM,IAAD,GAAQF;AADI,OAAd;AAGD,KA3ByC;AAAA;;AA6B1CnB,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEsC,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA,UAArB;AAAiCC,MAAAA,eAAjC;AAAkDjC,MAAAA,QAAlD;AAA4DK,MAAAA,QAA5D;AAAsEgB,MAAAA;AAAtE,QAAsF,KAAKa,KAAjG;AAEA,wBACE;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAC,YAArB;AAAkC,QAAA,MAAM,EAAC,MAAzC;AAAgD,QAAA,OAAO,EAAG,KAAKP,QAA/D;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA,sBAAUG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AACE,UAAA,OAAO,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,uBACIC,SADJ,eAEE;AAAM,cAAA,SAAS,EAAC,YAAhB;AAAA,iCAAmCC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAOE,UAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,sBACIC;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAiBE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAGjC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAG,KAAKN,KAAL,CAAWiC,QAA1B;AAAqC,QAAA,OAAO,EAAG,KAAKE,SAApD;AAAgE,2BAAgB,mBAAhF;AAAoG,QAAA,UAAU,MAA9G;AAAA,gCAEE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAG,KAAKA,SAAvB;AAAmC,YAAA,KAAK,EAAC,SAAzC;AAAmD,YAAA,OAAO,EAAC,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,mBAAhB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAG7B,QAAd;AAAyB,YAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADF,UAC+C+B,SAD/C,sBAEE;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,4BAAmCC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAYE,QAAC,aAAD;AAAA,kCACE,QAAC,iBAAD;AAAmB,YAAA,KAAK,EAAE;AAACG,cAAAA,KAAK,EAAE;AAAR,aAA1B;AAAA,sBACIF;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,iBAAD;AAAmB,YAAA,KAAK,EAAE;AAACE,cAAAA,KAAK,EAAE;AAAR,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,SAAD;AACE,YAAA,KAAK,EAAG,KAAKzC,KAAL,CAAWQ,SADrB;AAEE,YAAA,QAAQ,EAAG,KAAKO,iBAFlB;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,MAAM,EAAC,OANT;AAOE,YAAA,IAAI,EAAC,WAPP;AAQE,YAAA,KAAK,EAAC,UARR;AASE,YAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA,kBAPF,eAkBE,QAAC,SAAD;AACE,YAAA,KAAK,EAAG,KAAKf,KAAL,CAAWkC,OADrB;AAEE,YAAA,QAAQ,EAAG,KAAKnB,iBAFlB;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,IAAI,EAAC,GAJP;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,MAAM,EAAC,OANT;AAOE,YAAA,IAAI,EAAC,gBAPP;AAQE,YAAA,KAAK,EAAC,kBARR;AASE,YAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA6BE;AAAA;AAAA;AAAA;AAAA,kBA7BF,eA8BE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,KAAK,EAAC,SAAjC;AAA2C,YAAA,OAAO,EAAG,MAAMY,WAAW,CAAC,IAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BF,eAiCE;AAAA;AAAA;AAAA;AAAA,kBAjCF,eAkCE;AAAA;AAAA;AAAA;AAAA,kBAlCF,eAmCE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAnCF,eAqCE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,sBACGhB,QAAQ,CAACmB,GAAT,CAAcI,OAAD,IAAa;AACvB,kCACE;AAAA,wCACE,QAAC,OAAD;AAAS,kBAAA,SAAS,EAAGA,OAAO,CAAC1B,SAA7B;AACS,kBAAA,cAAc,EAAG0B,OAAO,CAACzB;AADlC;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,OAAjB;AAAyB,kBAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAOD,aARF;AADH;AAAA;AAAA;AAAA;AAAA,kBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyFD;;AA1HyC;;AA6H5C,MAAMiC,OAAN,SAAsBvE,KAAK,CAAC0B,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEU,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAgC,KAAK+B,KAA3C;AAEA,wBACE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAC,YAArB;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AACE,UAAA,OAAO,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,sBACIhC;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAME,UAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,sBACIC;AADJ;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAzBmC;;AA8BtC,eAAeb,SAAf","sourcesContent":["import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n// import Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport './index.css';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     maxWidth: '36ch',\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   inline: {\n//     display: 'inline',\n//   },\n// }));\n\nclass Community extends React.Component {\n  // {const classes = useStyles}\n\n  render() {\n    return (\n      <div>\n        <ForumList />\n      </div>\n    )\n  }\n}\n\nclass ForumList extends React.Component {\n\n  state = {\n    openNewPost: false,\n    author: \"\",\n    title: \"\",\n    authorAvatar: \"\",\n    content: \"\",\n    category: \"\",\n    postFilter: \"\",\n    commenter: \"\",\n    commentContent: \"\",\n    posts: [\n      {author: 'Angus Wang', \n       title: 'welcome to communtiy', \n       content: 'this is the first community thread', \n       authorAvatar: null,\n       category: \"Announcement\",\n       comments: [\n        {commenter: \"Angus Wang\",\n         commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"},\n        {commenter: \"Angus Wang2\",\n         commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"}\n       ]\n      },\n      {author: 'boogy boy', \n       title: 'test thread', \n       content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ', \n       authorAvatar: null,\n       category: \"Opinion\",\n       comments: [\n        {commenter: \"Angus Wang3\",\n         commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"},\n        {commenter: \"Dude with an attitude\",\n         commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"}\n       ]\n      }\n    ]\n  }\n\n\n  handleClickOpen = () => {\n    this.setState({\n      openNewPost: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      openNewPost: false\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const name = event.target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFilterInputChange = (event) => {\n    const value = event.target.value\n\n    this.setState({\n      postFilter: value\n    })\n  }\n\n  addPost = () => {\n    const postList = this.state.posts\n\n    const newPost = {\n      author: this.state.author,\n      title: this.state.title,\n      authorAvatar: null,\n      content: this.state.content,\n      category: this.state.category,\n      comments: []\n    }\n\n    postList.push(newPost)\n\n    this.setState({\n      posts: postList,\n\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\"\n    })\n\n    this.handleClose()\n  }\n\n  changeCategory = (_category) => {\n    this.setState({\n      category: _category\n    })\n  }\n\n  postComment = (targetPost) => {\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <Container maxWidth=\"xl\">\n          <List className=\"forumList\">\n            \n            <Grid container justify=\"space-evenly\">\n              <FormControl style={{minWidth: 200}}>         {/*Warning: inline styling!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/}\n                <InputLabel>Filter Posts</InputLabel>\n                <Select onChange={ this.handleFilterInputChange }>\n                  <MenuItem value=\"\">None</MenuItem>\n                  <MenuItem value=\"Announcement\">Announcement</MenuItem>\n                  <MenuItem value=\"Question\">Question</MenuItem>\n                  <MenuItem value=\"Opinion\">Opinion</MenuItem>\n                </Select>\n              </FormControl>\n              <Button className=\"newPostButton\" color=\"primary\" variant=\"contained\" onClick={ this.handleClickOpen }>\n                New Post\n              </Button>\n            </Grid>\n            \n          </List>\n\n          <br></br>\n\n          <List className=\"forumList\">\n            {this.state.posts.map((thread) => {\n              if (this.state.postFilter === \"\") {\n                return (\n                  <div>\n                    <ForumListItem postTitle={ thread.title }\n                                  postAuthor={ thread.author }\n                                  postTextContent={ thread.content }\n                                  avatar={ thread.authorAvatar }\n                                  category={ thread.category }\n                                  comments={ thread.comments }\n                                  postComment={ this.postComment }/>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </div>\n                )\n              }\n              else if (this.state.postFilter === thread.category) {\n                return (\n                  <div>\n                    <ForumListItem postTitle={ thread.title }\n                                  postAuthor={ thread.author }\n                                  postTextContent={ thread.content }\n                                  avatar={ thread.authorAvatar }\n                                  category={ thread.category }\n                                  comments={ thread.comments }\n                                  postComment={ this.postComment }/>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </div>\n                )\n              }\n            })}\n          </List>\n        </Container>\n        \n\n        <Dialog open={ this.state.openNewPost } onClose={ this.handleClose } aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">New Post:</DialogTitle>\n          <DialogContent>\n            <TextField\n              value={ this.state.author }\n              onChange={ this.handleInputChange }\n              autoFocus\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"author\"\n              label=\"Username\"\n              fullWidth\n            />\n\n            <span className=\"categoryTitle\">Category: </span>\n            <br></br>\n            <br></br>\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" fullWidth>\n              <Button onClick={ () => this.changeCategory(\"Announcement\") }>Announcement</Button>\n              <Button onClick={ () => this.changeCategory(\"Question\") }>Question</Button>\n              <Button onClick={ () => this.changeCategory(\"Opinion\") }>Opinion</Button>\n            </ButtonGroup>\n\n            <TextField\n              value={ this.state.title }\n              onChange={ this.handleInputChange }\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"title\"\n              label=\"Post Title\"\n              fullWidth\n            />\n            \n            <TextField\n              value={ this.state.content }\n              onChange={ this.handleInputChange }\n              multiline\n              rows=\"5\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"content\"\n              label=\"Say something here...\"\n              fullWidth\n            />\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.handleClose } color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={ this.addPost } color=\"primary\">\n              Post\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nclass ForumListItem extends React.Component {\n\n  state = {\n    openPost: false,\n    commenter: \"\",\n    comment: \"\"\n  }\n\n  openPost = () => {\n    this.setState({\n      openPost: true\n    })\n  }\n\n  closePost = () => {\n    this.setState({\n      openPost: false\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const name = event.target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n\n    const { avatar, postTitle, postAuthor, postTextContent, category, comments, postComment } = this.props\n\n    return (\n      <div>\n        <ListItem alignItems=\"flex-start\" button=\"true\" onClick={ this.openPost }>\n          <ListItemAvatar>\n            <Avatar>{ avatar }</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                { postTitle }\n                <span className=\"postAuthor\"> :: { postAuthor }</span>\n              </React.Fragment>\n            }\n            secondary={\n              <React.Fragment>\n                { postTextContent }\n              </React.Fragment>\n            }\n          />\n          <Chip label={ category }/>\n        </ListItem>\n\n        <Dialog open={ this.state.openPost } onClose={ this.closePost } aria-labelledby=\"form-dialog-title\" fullScreen>\n          \n          <DialogActions>\n            <Button onClick={ this.closePost } color=\"primary\" variant=\"outlined\">\n              Close\n            </Button>\n          </DialogActions>\n          \n          <DialogTitle id=\"form-dialog-title\">\n            <Chip label={ category } size=\"small\"/> :: { postTitle } :: \n            <span className=\"categoryTitle\"> { postAuthor }</span>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText style={{color: 'black'}}>\n              { postTextContent }\n            </DialogContentText>\n            <Divider variant=\"fullWidth\" />\n            <br></br>\n            <DialogContentText style={{color: 'maroon'}}>Post a Comment:</DialogContentText>\n            <TextField\n              value={ this.state.commenter }\n              onChange={ this.handleInputChange }\n              autoFocus\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"commenter\"\n              label=\"Username\"\n              fullWidth\n            />\n            <TextField\n              value={ this.state.comment }\n              onChange={ this.handleInputChange }\n              multiline\n              rows=\"3\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"commentContent\"\n              label=\"Say something...\"\n              fullWidth\n            />\n            <br></br>\n            <Button variant=\"outlined\" color=\"primary\" onClick={ () => postComment(this) }>\n              Post!\n            </Button>\n            <br></br>\n            <br></br>\n            <Divider variant=\"fullWidth\" />\n\n            <List className=\"commentList\">\n              {comments.map((comment) => {\n                  return (\n                    <div>\n                      <Comment commenter={ comment.commenter }\n                               commentContent={ comment.commentContent }/>\n                      <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                  )\n                }\n              )}\n            </List>\n            \n          </DialogContent>\n          \n        </Dialog>\n      </div>\n    )\n  }\n}\n\nclass Comment extends React.Component {\n  render() {\n    const { commenter, commentContent } = this.props\n\n    return(\n      <div>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar></Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                { commenter }\n              </React.Fragment>\n            }\n            secondary={\n              <React.Fragment>\n                { commentContent }\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Community;\n"]},"metadata":{},"sourceType":"module"}