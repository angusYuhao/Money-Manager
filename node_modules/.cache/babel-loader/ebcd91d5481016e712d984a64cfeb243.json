{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Signup/signup.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, RadioGroup, FormControlLabel, FormControl, InputLabel, MenuItem, Select, Radio, AppBar, Toolbar, Typography, Button, TextField, Grid, createMuiTheme, InputAdornment, Paper, ThemeProvider } from '@material-ui/core';\nimport { deepPurple, grey } from '@material-ui/core/colors';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1,\n    cursor: 'pointer',\n    marginRight: '70vw'\n  },\n  new: {\n    float: 'right',\n    marginRight: 10\n  },\n  grid: {\n    direction: 'row',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: 10,\n    borderColor: deepPurple[800]\n  },\n  avatar: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.getContrastText(deepPurple[800]),\n    backgroundColor: deepPurple[500]\n  },\n  text1: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3)\n  },\n  subtitle: {\n    marginLeft: theme.spacing(3),\n    color: grey[500]\n  },\n  form: {\n    margin: theme.spacing(3)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250\n  },\n  signInButton: {\n    float: 'right',\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1)\n  },\n  backHome: {\n    float: 'right',\n    marginLeft: 40\n  },\n  radio: {\n    marginRight: theme.spacing(3)\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userLevel: \"Regular User\",\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      birthday: \"\",\n      gender: \"\",\n      occupation: \"\",\n      salary: \"\",\n      email: \"\",\n      createdPassword: \"\",\n      confirmPassword: \"\",\n      passwordLengthError: false,\n      passwordConfirmError: false\n    };\n\n    this.handleInputChange = event => {\n      console.log(event); // get the value we type in \n\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      console.log(value); // state is updated and value is also updated in JSX\n      // the square bracket dynamically changes the name \n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkLength = event => {\n      // get the value we type in \n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      console.log(name);\n      console.log(value);\n      this.setState({\n        [name]: value\n      });\n\n      if (value.length >= 8) {\n        this.state.passwordLengthError = false;\n        console.log(\"good password\");\n      } else {\n        this.state.passwordLengthError = true;\n        console.log(\"The minimum number of characters for password is 8!\");\n      }\n    };\n\n    this.handleConfirmPassword = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      console.log(value);\n      this.setState({\n        [name]: value\n      });\n\n      if (value !== this.state.createdPassword) {\n        this.state.passwordConfirmError = true;\n        console.log(\"password did not match\");\n      } else {\n        this.state.passwordConfirmError = false;\n        console.log(\"password match\");\n      }\n    };\n\n    this.submitValidation = event => {\n      event.preventDefault();\n      console.log(\"inside validation!\");\n      this.props.history.push('/spendings');\n      return;\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"sticky\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              style: {\n                textDecoration: 'none',\n                color: 'black'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.title,\n                children: \"Money Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                className: classes.backHome,\n                children: \"Back to Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            elevation: 3,\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.text1,\n              children: \"Welcome to Money Manager!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              className: classes.subtitle,\n              children: \"Please fill out the rest of the information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.submitValidation,\n              className: classes.form,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                spacing: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  variant: \"outlined\",\n                  className: classes.formControl,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"user-label\",\n                    children: \"Sign up as:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"user-label\",\n                    id: \"user\",\n                    value: this.state.userLevel,\n                    name: \"userLevel\",\n                    onChange: this.handleInputChange,\n                    label: \"Sign up as:\",\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Regular User\",\n                      children: \"Regular user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Financial Advisor\",\n                      children: \"Financial advisor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), this.state.userLevel === \"Regular User\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.firstName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"First Name\",\n                      name: \"firstName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.lastName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Last Name\",\n                      name: \"lastName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.userName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"User Name\",\n                      name: \"userName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: this.state.birthday,\n                      onChange: this.handleInputChange,\n                      id: \"date\",\n                      label: \"Birthday\",\n                      type: \"date\",\n                      name: \"birthday\",\n                      variant: \"outlined\",\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"gender\",\n                  value: this.state.gender,\n                  onChange: this.handleInputChange,\n                  name: \"gender\",\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"female\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 63\n                    }, this),\n                    label: \"Female\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"male\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 61\n                    }, this),\n                    label: \"Male\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"other\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 62\n                    }, this),\n                    label: \"Other\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.occupation,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Occupation\",\n                      name: \"occupation\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: this.state.salary,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Monthly salary ($)\",\n                      name: \"salary\",\n                      variant: \"outlined\",\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"start\",\n                          children: \"$\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 51\n                        }, this)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.email,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Email@example.com\",\n                      name: \"email\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), this.state.passwordLengthError ? /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      error: true,\n                      helperText: \"The minimum number of characters is 8!\",\n                      value: this.state.createdPassword,\n                      onChange: this.checkLength,\n                      id: \"outlined-error\",\n                      label: \"Error\",\n                      type: \"password\",\n                      name: \"createdPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.createdPassword,\n                      onChange: this.checkLength,\n                      id: \"outlined-required\",\n                      label: \"Create password\",\n                      type: \"password\",\n                      name: \"createdPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 23\n                  }, this), this.state.passwordConfirmError ? /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: true,\n                      fullWidth: true,\n                      helperText: \"The password does not match!\",\n                      value: this.state.confirmPassword,\n                      onChange: this.handleConfirmPassword,\n                      id: \"outlined-error\",\n                      label: \"Error\",\n                      type: \"password\",\n                      name: \"confirmPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      value: this.state.confirmPassword,\n                      onChange: this.handleConfirmPassword,\n                      id: \"outlined-required\",\n                      label: \"Confirm password\",\n                      type: \"password\",\n                      name: \"confirmPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.firstName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"First Name\",\n                      name: \"firstName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.lastName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Last Name\",\n                      name: \"lastName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.userName,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"User Name\",\n                      name: \"userName\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: this.state.birthday,\n                      onChange: this.handleInputChange,\n                      id: \"date\",\n                      label: \"Birthday\",\n                      type: \"date\",\n                      name: \"date\",\n                      variant: \"outlined\",\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"gender\",\n                  value: this.state.gender,\n                  onChange: this.handleInputChange,\n                  name: \"gender\",\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"female\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 63\n                    }, this),\n                    label: \"Female\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"male\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 61\n                    }, this),\n                    label: \"Male\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"other\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 62\n                    }, this),\n                    label: \"Other\",\n                    className: classes.radio\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      value: this.state.email,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Email@example.com\",\n                      name: \"email\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this), this.state.passwordLengthError ? /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: true,\n                      helperText: \"The minimum number of characters is 8!\",\n                      value: this.state.createdPassword,\n                      onChange: this.checkLength,\n                      id: \"outlined-error\",\n                      label: \"Error\",\n                      type: \"password\",\n                      name: \"createdPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.createdPassword,\n                      onChange: this.checkLength,\n                      id: \"outlined-required\",\n                      label: \"Create password\",\n                      type: \"password\",\n                      name: \"createdPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 23\n                  }, this), this.state.passwordConfirmError ? /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: true,\n                      helperText: \"The password does not match!\",\n                      value: this.state.confirmPassword,\n                      onChange: this.handleConfirmPassword,\n                      id: \"outlined-error\",\n                      label: \"Error\",\n                      type: \"password\",\n                      name: \"confirmPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.confirmPassword,\n                      onChange: this.handleConfirmPassword,\n                      id: \"outlined-required\",\n                      label: \"Confirm password\",\n                      type: \"password\",\n                      name: \"confirmPassword\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  spacing: 1,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      value: this.state.adminPasscode,\n                      onChange: this.handleInputChange,\n                      id: \"outlined-required\",\n                      label: \"Admin Passcode\",\n                      name: \"adminPasscode\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                className: classes.signInButton,\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withRouter(withStyles(useStyles)(SignUp));","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Signup/signup.js"],"names":["React","Link","withStyles","RadioGroup","FormControlLabel","FormControl","InputLabel","MenuItem","Select","Radio","AppBar","Toolbar","Typography","Button","TextField","Grid","createMuiTheme","InputAdornment","Paper","ThemeProvider","deepPurple","grey","withRouter","useStyles","theme","root","flexGrow","title","cursor","marginRight","new","float","grid","direction","justifyContent","paper","marginTop","spacing","display","flexDirection","borderRadius","borderColor","avatar","color","palette","getContrastText","backgroundColor","text1","marginLeft","subtitle","form","margin","formControl","minWidth","signInButton","backHome","radio","primary","main","secondary","typography","fontFamily","join","SignUp","Component","state","userLevel","firstName","lastName","userName","birthday","gender","occupation","salary","email","createdPassword","confirmPassword","passwordLengthError","passwordConfirmError","handleInputChange","event","console","log","target","value","name","setState","checkLength","length","handleConfirmPassword","submitValidation","preventDefault","props","history","push","render","classes","textDecoration","shrink","startAdornment","adminPasscode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {  \n  withStyles,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Radio,\n  AppBar, \n  Toolbar, \n  Typography,\n  Button,\n  TextField,\n  Grid,\n  createMuiTheme,\n  InputAdornment,\n  Paper,\n  ThemeProvider} from '@material-ui/core';\nimport { deepPurple, grey } from '@material-ui/core/colors';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    cursor: 'pointer',\n    marginRight: '70vw',\n  },\n  new: {\n    float: 'right',\n    marginRight: 10,\n  },\n  grid: {\n    direction: 'row',\n    justifyContent: 'center',\n  },\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',  \n    borderRadius: 10,\n    borderColor: deepPurple[800],\n  },\n  avatar: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.getContrastText(deepPurple[800]),\n    backgroundColor: deepPurple[500],\n  },\n  text1: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n  },\n  subtitle: {\n    marginLeft: theme.spacing(3),\n    color: grey[500],\n  },\n  form: {\n    margin: theme.spacing(3),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250,\n  },\n  signInButton: {\n    float: 'right',\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n  },\n  backHome: {\n    float: 'right',\n    marginLeft: 40,\n  },\n  radio: {\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\nclass SignUp extends React.Component {\n\n  state = {\n    userLevel: \"Regular User\",\n    firstName: \"\",\n    lastName: \"\",\n    userName: \"\",\n    birthday: \"\",\n    gender: \"\",\n    occupation: \"\",\n    salary: \"\",\n    email: \"\",\n    createdPassword: \"\",\n    confirmPassword: \"\",\n    passwordLengthError: false,\n    passwordConfirmError: false, \n  };\n\n  handleInputChange = (event) => {\n    console.log(event)\n\n    // get the value we type in \n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(value);\n\n    // state is updated and value is also updated in JSX\n    // the square bracket dynamically changes the name \n    this.setState({\n      [name]: value\n    })\n  };\n\n  checkLength = (event) => {\n    // get the value we type in \n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name);\n    console.log(value);\n\n    this.setState({\n      [name]: value\n    })\n\n    if(value.length >= 8) {\n      this.state.passwordLengthError = false;\n      console.log(\"good password\")\n    } else {\n      this.state.passwordLengthError = true;\n      console.log(\"The minimum number of characters for password is 8!\")\n    }\n\n  }\n\n  handleConfirmPassword = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    \n    console.log(value);\n\n    this.setState({\n      [name]: value\n    })\n\n    if(value !== this.state.createdPassword) {\n      this.state.passwordConfirmError = true;\n      console.log(\"password did not match\");\n    } else {\n      this.state.passwordConfirmError = false;\n      console.log(\"password match\")\n    }\n  }\n\n  submitValidation = (event) => {\n    event.preventDefault();\n    console.log(\"inside validation!\")\n    \n    this.props.history.push('/spendings');\n    return;\n    \n  }\n\n  render() {\n    \n    const { classes } = this.props;\n\n    return (\n\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"sticky\" color=\"secondary\">\n            <Toolbar>\n              <Link to={'/'} style={{ textDecoration: 'none', color: 'black' }}>\n                <Typography variant=\"h6\" className={classes.title}>\n                  Money Manager\n                </Typography>\n              </Link>\n              <Link to={'/'}>\n                <Button color=\"primary\" variant=\"contained\" className={classes.backHome}>\n                  Back to Home\n                </Button>\n              </Link>\n            </Toolbar>\n          </AppBar>\n\n          <Grid container className={classes.grid} >\n            <Paper variant=\"outlined\" elevation={3} className={classes.paper}>\n              <Typography variant=\"h5\" className={classes.text1}>\n                Welcome to Money Manager!\n              </Typography>\n              <Typography variant=\"subtitle2\" className={classes.subtitle}>\n                Please fill out the rest of the information\n              </Typography>\n\n              <form onSubmit={ this.submitValidation } className={classes.form}>\n\n                <Grid container direction=\"row\" spacing={1}>\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"user-label\">Sign up as:</InputLabel>\n                    <Select labelId=\"user-label\" \n                            id=\"user\"\n                            value={this.state.userLevel}\n                            name=\"userLevel\"\n                            onChange={this.handleInputChange}\n                            label=\"Sign up as:\"\n                    >\n                      <MenuItem value={\"Regular User\"}>Regular user</MenuItem>\n                      <MenuItem value={\"Financial Advisor\"}>Financial advisor</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                { this.state.userLevel === \"Regular User\" ? \n                <div>\n\n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                value={ this.state.firstName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"First Name\" \n                                name=\"firstName\"\n                                variant=\"outlined\" \n                                />\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required\n                                value={ this.state.lastName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Last Name\" \n                                name=\"lastName\"\n                                variant=\"outlined\" \n                                />\n                    </FormControl>\n                  </Grid>\n\n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required\n                                value={ this.state.userName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"User Name\" \n                                name=\"userName\"\n                                variant=\"outlined\" \n                                />\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField \n                                value={ this.state.birthday } \n                                onChange={ this.handleInputChange }\n                                id=\"date\" \n                                label=\"Birthday\" \n                                type=\"date\"\n                                name=\"birthday\"\n                                variant=\"outlined\" \n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                />\n                    </FormControl>\n                  </Grid>\n                  \n                  <RadioGroup aria-label=\"gender\" value={ this.state.gender } onChange={ this.handleInputChange } name=\"gender\" row >\n                    <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Female\" className={classes.radio}/>\n                    <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Male\" className={classes.radio}/>\n                    <FormControlLabel value=\"other\" control={<Radio color=\"primary\" />} label=\"Other\" className={classes.radio}/>\n                  </RadioGroup>\n                  \n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                value={ this.state.occupation } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Occupation\" \n                                name=\"occupation\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField value={ this.state.salary } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Monthly salary ($)\" \n                                name=\"salary\"\n                                variant=\"outlined\" \n                                InputProps={{\n                                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                                }}\n                                />\n                      </FormControl>\n                  </Grid>\n\n                  <Grid container direction=\"column\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                value={ this.state.email } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Email@example.com\" \n                                name=\"email\"\n                                variant=\"outlined\" \n                                />\n                    </FormControl>\n                    \n                    { this.state.passwordLengthError ? \n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField\n                                  fullWidth\n                                  error\n                                  helperText=\"The minimum number of characters is 8!\"\n                                  value={ this.state.createdPassword } \n                                  onChange={ this.checkLength }\n                                  id=\"outlined-error\" \n                                  label=\"Error\" \n                                  type=\"password\"\n                                  name=\"createdPassword\"\n                                  variant=\"outlined\" \n                                  />\n                      </FormControl>\n                      :\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField required \n                                value={ this.state.createdPassword } \n                                onChange={ this.checkLength }\n                                id=\"outlined-required\" \n                                label=\"Create password\" \n                                type=\"password\"\n                                name=\"createdPassword\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                    }\n                    { this.state.passwordConfirmError ? \n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField error\n                                  fullWidth\n                                  helperText=\"The password does not match!\"\n                                  value={ this.state.confirmPassword } \n                                  onChange={ this.handleConfirmPassword }\n                                  id=\"outlined-error\" \n                                  label=\"Error\" \n                                  type=\"password\"\n                                  name=\"confirmPassword\"\n                                  variant=\"outlined\" \n                                  />\n                      </FormControl>\n                      :\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField required \n                                fullWidth\n                                value={ this.state.confirmPassword } \n                                onChange={ this.handleConfirmPassword }\n                                id=\"outlined-required\" \n                                label=\"Confirm password\" \n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                variant=\"outlined\" \n                              />\n                      </FormControl>\n                    }\n                  </Grid>\n\n                </div>\n                :\n                <div>\n\n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                value={ this.state.firstName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"First Name\" \n                                name=\"firstName\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required\n                                value={ this.state.lastName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Last Name\" \n                                name=\"lastName\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                  </Grid>\n                  \n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required\n                                value={ this.state.userName } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"User Name\" \n                                name=\"userName\"\n                                variant=\"outlined\" \n                                />\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField \n                                value={ this.state.birthday } \n                                onChange={ this.handleInputChange }\n                                id=\"date\" \n                                label=\"Birthday\" \n                                type=\"date\"\n                                name=\"date\"\n                                variant=\"outlined\" \n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                />\n                    </FormControl>\n                  </Grid>\n                  \n                  <RadioGroup aria-label=\"gender\" value={ this.state.gender } onChange={ this.handleInputChange } name=\"gender\" row >\n                    <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Female\" className={classes.radio}/>\n                    <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Male\" className={classes.radio}/>\n                    <FormControlLabel value=\"other\" control={<Radio color=\"primary\" />} label=\"Other\" className={classes.radio}/>\n                  </RadioGroup>\n\n                  <Grid container direction=\"column\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                fullWidth\n                                value={ this.state.email } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Email@example.com\" \n                                name=\"email\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                    \n                    { this.state.passwordLengthError ? \n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField error\n                                  helperText=\"The minimum number of characters is 8!\"\n                                  value={ this.state.createdPassword } \n                                  onChange={ this.checkLength }\n                                  id=\"outlined-error\" \n                                  label=\"Error\" \n                                  type=\"password\"\n                                  name=\"createdPassword\"\n                                  variant=\"outlined\" \n                                />\n                      </FormControl>\n                      :\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField required \n                                  value={ this.state.createdPassword } \n                                  onChange={ this.checkLength }\n                                  id=\"outlined-required\" \n                                  label=\"Create password\" \n                                  type=\"password\"\n                                  name=\"createdPassword\"\n                                  variant=\"outlined\" \n                                />\n                      </FormControl>\n                    }\n                    { this.state.passwordConfirmError ? \n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField error\n                                  helperText=\"The password does not match!\"\n                                  value={ this.state.confirmPassword } \n                                  onChange={ this.handleConfirmPassword }\n                                  id=\"outlined-error\" \n                                  label=\"Error\" \n                                  type=\"password\"\n                                  name=\"confirmPassword\"\n                                  variant=\"outlined\" \n                                  />\n                      </FormControl>\n                      :\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <TextField required \n                                value={ this.state.confirmPassword } \n                                onChange={ this.handleConfirmPassword }\n                                id=\"outlined-required\" \n                                label=\"Confirm password\" \n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                variant=\"outlined\" \n                                />\n                      </FormControl>\n                    }\n                  </Grid>\n\n                  <Grid container direction=\"row\" spacing={1}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                      <TextField required \n                                value={ this.state.adminPasscode } \n                                onChange={ this.handleInputChange }\n                                id=\"outlined-required\" \n                                label=\"Admin Passcode\" \n                                name=\"adminPasscode\"\n                                variant=\"outlined\" \n                                /> \n                    </FormControl>\n                  </Grid>\n                </div>\n                }\n                \n                <Button variant=\"contained\" \n                        color=\"primary\" \n                        type=\"submit\" \n                        className={classes.signInButton}>\n                  Sign up\n                </Button>\n                \n\n              </form>\n            </Paper>\n          </Grid>\n        </div>\n      </ThemeProvider>\n\n    )\n\n  }\n\n}\n\nexport default withRouter((withStyles(useStyles)(SignUp)));"]},"metadata":{},"sourceType":"module"}