{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react';\nimport Input from './Input';\nimport StockList from './StockList'; // import Canvas from './canvasExample'\n\nimport PieChart from './PieChart';\nimport BarChart from './BarChart';\nimport TableComp from '../Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Investments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //new values for tables\n      stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book cost\", \"Gain/Loss\", \"Percentage of portfolio\"],\n      stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n      stockList_categories: [],\n      stocklist_data: [{\n        \"Name\": \"FB\",\n        \"Quantity\": 20,\n        \"Price\": 1.0,\n        \"Average Cost\": 32.5,\n        \"Market Value\": 1,\n        \"Book cost\": 100,\n        \"Gain/Loss\": 100,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"GOOGL\",\n        \"Quantity\": 3,\n        \"Price\": 1.0,\n        \"Average Cost\": 1523,\n        \"Market Value\": 1,\n        \"Book cost\": 37,\n        \"Gain/Loss\": 200,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"PDD\",\n        \"Quantity\": 8,\n        \"Price\": 1.0,\n        \"Average Cost\": 170,\n        \"Market Value\": 1,\n        \"Book cost\": 34,\n        \"Gain/Loss\": 20,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"GME\",\n        \"Quantity\": 4,\n        \"Price\": 1.0,\n        \"Average Cost\": 340,\n        \"Market Value\": 1,\n        \"Book cost\": 78,\n        \"Gain/Loss\": -89,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"MSFT\",\n        \"Quantity\": 4,\n        \"Price\": 1.0,\n        \"Average Cost\": 230,\n        \"Market Value\": 1,\n        \"Book cost\": 45,\n        \"Gain/Loss\": -201,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"BABA\",\n        \"Quantity\": 20,\n        \"Price\": 1.0,\n        \"Average Cost\": 220,\n        \"Market Value\": 1,\n        \"Book cost\": 46,\n        \"Gain/Loss\": 30,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"V\",\n        \"Quantity\": 20,\n        \"Price\": 1.0,\n        \"Average Cost\": 220,\n        \"Market Value\": 1,\n        \"Book cost\": 50,\n        \"Gain/Loss\": 67,\n        \"Percentage of portfolio\": 100\n      }, {\n        \"Name\": \"SHOP\",\n        \"Quantity\": 20,\n        \"Price\": 1.0,\n        \"Average Cost\": 220,\n        \"Market Value\": 1,\n        \"Book cost\": 87,\n        \"Gain/Loss\": 3,\n        \"Percentage of portfolio\": 100\n      }],\n      //old values for tables\n      pieChartSize: 900,\n      pieChartRadius: 200,\n      totalAmountInvested: 100,\n      ticker: 0,\n      quantity: 0,\n      price: 0,\n      avgCost: 0,\n      mktValue: 0,\n      bookCost: 0,\n      gainLoss: 0,\n      percentageOfPortfolio: 0,\n      stockList: [{\n        name: \"FB\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 32.5,\n        mktValue: 1,\n        bookCost: 100,\n        gainLoss: 100,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GOOGL\",\n        quantity: 3,\n        price: 1.0,\n        avgCost: 1523,\n        mktValue: 1,\n        bookCost: 37,\n        gainLoss: 200,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"PDD\",\n        quantity: 8,\n        price: 1.0,\n        avgCost: 170,\n        mktValue: 1,\n        bookCost: 34,\n        gainLoss: 20,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GME\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 340,\n        mktValue: 1,\n        bookCost: 78,\n        gainLoss: -89,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"MSFT\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 230,\n        mktValue: 1,\n        bookCost: 45,\n        gainLoss: -201,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"BABA\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 46,\n        gainLoss: 30,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"V\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 50,\n        gainLoss: 67,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"SHOP\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 87,\n        gainLoss: 3,\n        percentageOfPortfolio: 100\n      }],\n      sortBy: \"Market Value\",\n      sortDes: {\n        \"Name\": false,\n        \"Quantity\": false,\n        \"Market Value\": false,\n        \"Gain/Loss\": false,\n        \"Percentage of portfolio\": false\n      },\n      openDrawer: false\n    };\n\n    this.sortStocks = () => {\n      this.state.stocklist_data.sort(this.sortObj);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.addStock = newStock => {\n      this.state.stocklist_data.unshift(newStock);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.editStock = (oldStock, newStock) => {\n      const index = this.state.stocklist_data.findIndex(t => t === oldStock);\n      this.state.stocklist_data[index] = newStock;\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.deleteStock = transaction => {\n      const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction);\n      this.setState({\n        stocklist_data: keepTransactions\n      });\n    };\n\n    this.addCategory = newCategory => {\n      if (!this.state.transactions_categories.includes(newCategory)) this.state.transactions_categories.push(newCategory);\n      this.setState({\n        transactions_categories: this.state.transactions_categories\n      });\n    };\n\n    this.deleteCategory = category => {\n      const keepCategories = this.state.transactions_categories.filter(c => c !== category);\n      this.setState({\n        transactions_categories: keepCategories\n      });\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      console.log(this.state.bookCost);\n      console.log(this.state.totalAmountInvested);\n      let a = Number(this.state.quantity) * Number(this.state.price);\n      console.log(Number(this.totalAmountInvested) + Number(a));\n      const stock = {\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: Number(this.state.quantity) * Number(this.state.price),\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: Number(this.state.bookCost) / (Number(this.state.bookCost) + Number(this.state.totalAmountInvested)) * 100,\n        totalAmountInvested: Number(this.totalAmountInvested) + Number(this.bookCost)\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(Number(stock.totalAmountInvested));\n      console.log(currList);\n\n      for (let i = 0; i < this.state.stockList.length; i++) {\n        let allStocks = [...this.state.stockList]; // 2. Make a shallow copy of the item you want to mutate\n\n        let currentStock = { ...allStocks[i]\n        }; // 3. Replace the property you're intested in\n\n        console.log(Number(currentStock.bookCost));\n        console.log(Number(currentStock.totalAmountInvested));\n        currentStock.percentageOfPortfolio = Number(currentStock.bookCost) / Number(currentStock.totalAmountInvested); // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n        allStocks[i] = currentStock; // 5. Set the state to our new copy\n\n        this.setState({\n          allStocks\n        }); // console.log(this.state.stockList[i].percentageOfPortfolio)\n        // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n        // console.log(this.state.stockList[i].percentageOfPortfolio)\n      }\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n    };\n\n    this.deleteStock = stock => {\n      //make var because not mutating this \n      console.log(\"Delete\");\n      const filteredStock = this.state.stockList.filter(s => {\n        return s !== stock; //the one's we don't want to remove\n      });\n      this.setState({\n        stockList: filteredStock\n      });\n    };\n\n    this.editStock = (stock, valueToEdit) => {\n      console.log(\"Editing stock\");\n      console.log(stock);\n      console.log(\"Value\");\n      console.log(valueToEdit);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      width: \"1200\",\n      height: \"1200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          stockList: this.state.stockList,\n          handleInputStock: this.handleInputStock,\n          handleInputChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StockList, {\n          stockList: this.state.stockList,\n          deleteStock: this.deleteStock,\n          editStock: this.editStock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          listToDisplay: this.state.stockList,\n          pieChartSize: this.state.pieChartSize,\n          pieChartRadius: this.state.pieChartRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stocklist Table\",\n        children: /*#__PURE__*/_jsxDEV(TableComp, {\n          width: \"1200\",\n          height: \"1200\" // use the TableContainer class to style the table itself \n          ,\n          classes: {\n            TableContainer: 'TableContainer'\n          },\n          headings: this.state.stockList_headings,\n          data: this.state.stocklist_data,\n          options: this.state.stockList_options,\n          categories: this.state.stockList_categories,\n          addRow: this.addStock,\n          editRow: this.editStock,\n          removeRow: this.deleteStock,\n          addCategory: this.addCategory,\n          removeCategory: this.deleteCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","Input","StockList","PieChart","BarChart","TableComp","Investments","Component","state","stockList_headings","stockList_options","stockList_categories","stocklist_data","pieChartSize","pieChartRadius","totalAmountInvested","ticker","quantity","price","avgCost","mktValue","bookCost","gainLoss","percentageOfPortfolio","stockList","name","sortBy","sortDes","openDrawer","sortStocks","sort","sortObj","setState","addStock","newStock","unshift","editStock","oldStock","index","findIndex","t","deleteStock","transaction","keepTransactions","filter","addCategory","newCategory","transactions_categories","includes","push","deleteCategory","category","keepCategories","c","handleInputStock","console","log","a","Number","stock","currList","i","length","allStocks","currentStock","handleInputChange","event","target","value","filteredStock","s","valueToEdit","render","TableContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport StockList from './StockList'\n// import Canvas from './canvasExample'\nimport PieChart from './PieChart'\nimport BarChart from './BarChart'\nimport TableComp from '../Table'\n\n\n\nclass Investments extends React.Component {\n\n  state = {\n    //new values for tables\n    stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book cost\", \"Gain/Loss\", \"Percentage of portfolio\"],\n    stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n    stockList_categories: [],\n    \n    stocklist_data: [{\"Name\": \"FB\", \"Quantity\": 20, \"Price\": 1.0, \"Average Cost\": 32.5,  \"Market Value\": 1, \"Book cost\": 100, \"Gain/Loss\":100, \"Percentage of portfolio\":100 },\n    {\"Name\": \"GOOGL\", \"Quantity\": 3, \"Price\": 1.0, \"Average Cost\": 1523,  \"Market Value\": 1, \"Book cost\": 37, \"Gain/Loss\":200, \"Percentage of portfolio\":100 },\n    {\"Name\": \"PDD\", \"Quantity\": 8, \"Price\": 1.0, \"Average Cost\": 170,  \"Market Value\": 1, \"Book cost\": 34, \"Gain/Loss\":20, \"Percentage of portfolio\":100 },\n    {\"Name\": \"GME\", \"Quantity\": 4, \"Price\": 1.0, \"Average Cost\": 340,  \"Market Value\": 1, \"Book cost\": 78, \"Gain/Loss\":-89, \"Percentage of portfolio\":100 },\n    {\"Name\": \"MSFT\", \"Quantity\": 4, \"Price\": 1.0, \"Average Cost\": 230,  \"Market Value\": 1, \"Book cost\": 45, \"Gain/Loss\":-201, \"Percentage of portfolio\":100 },\n    {\"Name\": \"BABA\", \"Quantity\": 20, \"Price\": 1.0, \"Average Cost\": 220,  \"Market Value\": 1, \"Book cost\": 46, \"Gain/Loss\":30, \"Percentage of portfolio\":100 },\n    {\"Name\": \"V\", \"Quantity\": 20, \"Price\": 1.0, \"Average Cost\": 220,  \"Market Value\": 1, \"Book cost\": 50, \"Gain/Loss\":67, \"Percentage of portfolio\":100 },\n    {\"Name\": \"SHOP\", \"Quantity\": 20, \"Price\": 1.0, \"Average Cost\": 220,  \"Market Value\": 1, \"Book cost\": 87, \"Gain/Loss\":3, \"Percentage of portfolio\":100 }],\n    \n    \n    //old values for tables\n    pieChartSize: 900,\n    pieChartRadius: 200,\n    totalAmountInvested: 100,\n    ticker: 0,\n    quantity: 0,\n    price: 0,\n    avgCost: 0,\n    mktValue: 0,\n    bookCost: 0,\n    gainLoss: 0,\n    percentageOfPortfolio:0,\n    stockList: [{name: \"FB\", quantity: 20, price: 1.0, avgCost: 32.5, mktValue: 1, bookCost: 100, gainLoss:100, percentageOfPortfolio:100 },\n    {name: \"GOOGL\", quantity: 3, price: 1.0, avgCost: 1523, mktValue: 1, bookCost: 37, gainLoss:200, percentageOfPortfolio:100 },\n    {name: \"PDD\", quantity: 8, price: 1.0, avgCost: 170, mktValue: 1, bookCost: 34, gainLoss:20, percentageOfPortfolio:100 },\n    {name: \"GME\", quantity: 4, price: 1.0, avgCost: 340, mktValue: 1, bookCost: 78, gainLoss:-89, percentageOfPortfolio:100 },\n    {name: \"MSFT\", quantity: 4, price: 1.0, avgCost: 230, mktValue: 1, bookCost: 45, gainLoss:-201, percentageOfPortfolio:100 },\n    {name: \"BABA\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 46, gainLoss:30, percentageOfPortfolio:100 },\n    {name: \"V\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 50, gainLoss:67, percentageOfPortfolio:100 },\n    {name: \"SHOP\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 87, gainLoss:3, percentageOfPortfolio:100 }],\n    sortBy: \"Market Value\",\n    sortDes: {\n      \"Name\": false,\n      \"Quantity\": false,\n      \"Market Value\": false,\n      \"Gain/Loss\": false,\n      \"Percentage of portfolio\": false,\n    },\n    openDrawer: false\n  }\n\n  // componentDidUpdate(undefined, prevState) {\n  //   // only update the account balance if any transaction has been modified\n  //   if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance()\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     canvasRef: useCanvas()\n  //   };\n  // }\n\n\n  // sorting the transactions based on the currently selected element \n  sortStocks = () => {\n    this.state.stocklist_data.sort(this.sortObj)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // add newTransaction to the beginning of the transactions_data array \n  addStock = (newStock) => {\n    this.state.stocklist_data.unshift(newStock)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // finds the index of the oldTransaction data and replace it with the newTransaction data\n  editStock = (oldStock, newStock) => {\n    const index = this.state.stocklist_data.findIndex(t => t === oldStock)\n    this.state.stocklist_data[index] = newStock\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // deletes transaction from transactions_data array \n  deleteStock = (transaction) => {\n    const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction)\n    this.setState({ stocklist_data: keepTransactions })\n  }\n\n  // adds a user defined category \n  addCategory = (newCategory) => {\n    if (!this.state.transactions_categories.includes(newCategory))\n      this.state.transactions_categories.push(newCategory)\n    this.setState({ transactions_categories: this.state.transactions_categories })\n  }\n\n  // deletes a user defined category (the default cannot be deleted)\n  deleteCategory = (category) => {\n    const keepCategories = this.state.transactions_categories.filter(c => c !== category)\n    this.setState({ transactions_categories: keepCategories })\n  }\n\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    console.log(this.state.bookCost)\n    console.log(this.state.totalAmountInvested)\n    let a = Number(this.state.quantity)* Number(this.state.price)\n    console.log(Number(this.totalAmountInvested)+Number(a))\n    const stock = {\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: Number(this.state.quantity)* Number(this.state.price),\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:(Number(this.state.bookCost)/(Number(this.state.bookCost)+Number(this.state.totalAmountInvested)))*100,\n      totalAmountInvested: Number(this.totalAmountInvested)+Number(this.bookCost)\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n\n    console.log(Number(stock.totalAmountInvested))\n\n\n    console.log(currList)\n    for(let i = 0; i < this.state.stockList.length; i++){\n      let allStocks = [...this.state.stockList];\n      // 2. Make a shallow copy of the item you want to mutate\n      let currentStock = {...allStocks[i]};\n      // 3. Replace the property you're intested in\n      console.log(Number(currentStock.bookCost))\n      console.log(Number(currentStock.totalAmountInvested))\n      currentStock.percentageOfPortfolio = Number(currentStock.bookCost)/Number(currentStock.totalAmountInvested);\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n      allStocks[i] = currentStock;\n      // 5. Set the state to our new copy\n      this.setState({allStocks});\n\n\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n      // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n    }\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n\n  }\n\n\n    //student is the object to reference\n  deleteStock = (stock) => {\n    //make var because not mutating this \n    console.log(\"Delete\")\n    const filteredStock = this.state.stockList.filter((s) => {\n      return s !== stock  //the one's we don't want to remove\n    })\n\n    this.setState({\n      stockList: filteredStock\n    })\n  }\n\n  editStock = (stock, valueToEdit) => {\n\n    console.log(\"Editing stock\")\n    console.log(stock)\n    console.log(\"Value\")\n    console.log(valueToEdit)\n    \n  }\n\n  render() {\n    return (\n\n      <div width = \"1200\" height = \"1200\">\n      <div>\n        <Input stockList={this.state.stockList} \n        handleInputStock = {this.handleInputStock} \n        handleInputChange = {this.handleInputChange}\n        />\n        <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock} editStock = {this.editStock}/>\n        \n    \n        <PieChart listToDisplay = {this.state.stockList} pieChartSize = {this.state.pieChartSize} pieChartRadius = {this.state.pieChartRadius}/>\n      {/* <BarChart listToDisplay = {this.state.stockList}/> */}\n      \n      </div>\n\n      <div className=\"Stocklist Table\" >\n\n        <TableComp width = \"1200\" height = \"1200\"\n          \n          // use the TableContainer class to style the table itself \n          classes={{ TableContainer: 'TableContainer' }}\n          headings={this.state.stockList_headings}\n          data={this.state.stocklist_data}\n          options={this.state.stockList_options}\n          categories={this.state.stockList_categories}\n          addRow={this.addStock}\n          editRow={this.editStock}\n          removeRow={this.deleteStock}\n          addCategory={this.addCategory}\n          removeCategory={this.deleteCategory}\n        />\n        </div>\n      </div>\n\n\n      \n      \n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}