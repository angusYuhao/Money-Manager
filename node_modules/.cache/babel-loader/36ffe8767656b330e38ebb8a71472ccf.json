{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport { adaptV4Theme } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch'\n  }\n}));\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      menuPosition: null,\n      initialInvestment: 0,\n      interestRate: 0,\n      yrsToGrow: 0,\n      compound: 0,\n      amount: 0\n    };\n  }\n\n  textFieldOnChangeHandler(e, headings, index) {\n    this.state.update[headings[index]] = e.target.value;\n    this.setState({\n      update: this.state.update\n    }); // if nothing is in the cell, put null error \n\n    if (e.target.value == \"\" || e.target.value === null) this.state.error[index] = null;else {\n      switch (this.props.options[index]) {\n        case \"Number\":\n        case \"Percentage\":\n          // error if input not a number, or less than 0 \n          if (!isNaN(e.target.value) && parseFloat(e.target.value) >= 0) this.state.error[index] = false;else this.state.error[index] = true;\n          break;\n\n        case \"Any\":\n          // I think description can be anything? \n          this.state.error[index] = false;\n          break;\n\n        case \"Select\":\n          this.state.error[index] = false;\n          break;\n\n        default:\n          throw \"Please specify a valid option.\";\n      }\n    }\n    this.setState({\n      error: this.state.error\n    });\n  }\n\n  displayCompoundTypes(e) {\n    this.setState({\n      menuPosition: e.currentTarget\n    });\n  }\n\n  hideCompoundTypes() {\n    this.setState({\n      menuPosition: null\n    });\n  }\n\n  handleInitInvestment(e) {\n    console.log(e.target.value);\n    this.setState({\n      initialInvestment: e.target.value\n    });\n  }\n\n  handleInterestRate(e) {\n    console.log(e.target.value);\n    this.setState({\n      interestRate: e.target.value\n    });\n  }\n\n  handleYrsToGrow(e) {\n    console.log(e.target.value);\n    this.setState({\n      yrsToGrow: e.target.value\n    });\n  }\n\n  clickedMonthly() {\n    this.setState({\n      compound: 12\n    });\n  }\n\n  clickedAnnually() {\n    this.setState({\n      compound: 1\n    });\n  }\n\n  clickedQuarterly() {\n    this.setState({\n      compound: 4\n    });\n  }\n\n  clickedSemiAnnually() {\n    this.setState({\n      compound: 2\n    });\n  }\n\n  calculateAmount() {\n    let insideBrackets = this.state.interestRate / 100 / this.state.compound + 1;\n    console.log(insideBrackets);\n    let appliedPower = Math.pow(insideBrackets, this.state.compound * this.state.yrsToGrow);\n    console.log(appliedPower);\n    let finalAmount = appliedPower * this.state.initialInvestment;\n    console.log(finalAmount);\n    this.setState({\n      amount: finalAmount.toFixed(2)\n    });\n  }\n\n  render() {\n    const {\n      compoundTypes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"CalculatorCard\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: \"Investment Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Intial investment($):\",\n            defaultValue: \"0\",\n            margin: \"normal\",\n            onChange: e => this.handleInitInvestment(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Interest rate(%):\",\n            defaultValue: \"0\",\n            margin: \"normal\",\n            onChange: e => this.handleInterestRate(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Years to grow(years):\",\n            defaultValue: \"1\",\n            margin: \"normal\",\n            onChange: e => this.handleYrsToGrow(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            \"aria-label\": \"add\",\n            onClick: e => this.displayCompoundTypes(e),\n            children: [\"Compounding interval\", /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"long-menu\",\n            anchorEl: this.state.menuPosition,\n            open: Boolean(this.state.menuPosition),\n            onClose: () => this.hideCompoundTypes(),\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => this.clickedMonthly(),\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => this.clickedQuarterly(),\n                children: \"Quarterly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => this.clickedSemiAnnually(),\n                children: \"Semi-annually\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => this.clickedAnnually(),\n                children: \"Yearly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            \"aria-label\": \"add\",\n            onClick: () => this.calculateAmount(),\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js"],"names":["React","makeStyles","TextField","Card","CardActions","CardContent","Button","Menu","MenuItem","IconButton","MoreVertIcon","InputLabel","FormControl","FormHelperText","Input","Typography","AddCircleIcon","Icon","adaptV4Theme","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Calculator","Component","state","menuPosition","initialInvestment","interestRate","yrsToGrow","compound","amount","textFieldOnChangeHandler","e","headings","index","update","target","value","setState","error","props","options","isNaN","parseFloat","displayCompoundTypes","currentTarget","hideCompoundTypes","handleInitInvestment","console","log","handleInterestRate","handleYrsToGrow","clickedMonthly","clickedAnnually","clickedQuarterly","clickedSemiAnnually","calculateAmount","insideBrackets","appliedPower","Math","pow","finalAmount","toFixed","render","compoundTypes","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport { adaptV4Theme } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n}));\n\n\nclass Calculator extends React.Component{\n    \n    state = {\n        menuPosition: null,\n        initialInvestment: 0,\n        interestRate: 0,\n        yrsToGrow: 0,\n        compound: 0,\n        amount: 0,\n    }\n\n \n      \n    textFieldOnChangeHandler(e, headings, index) {\n\n        this.state.update[headings[index]] = e.target.value\n        this.setState({ update: this.state.update })\n\n        // if nothing is in the cell, put null error \n        if (e.target.value == \"\" || e.target.value === null) this.state.error[index] = null\n\n        else {\n            switch (this.props.options[index]) {\n\n                case \"Number\":\n                case \"Percentage\":\n                    // error if input not a number, or less than 0 \n                    if (!isNaN(e.target.value) && parseFloat(e.target.value) >= 0) this.state.error[index] = false\n                    else this.state.error[index] = true\n                    break\n                case \"Any\":\n                    // I think description can be anything? \n                    this.state.error[index] = false\n                    break\n                case \"Select\":\n                    this.state.error[index] = false\n                    break\n                default:\n                    throw (\"Please specify a valid option.\")\n\n            }\n        }\n\n        this.setState({ error: this.state.error })\n    }\n\n\n    displayCompoundTypes(e) {\n        this.setState({ menuPosition: e.currentTarget })\n    }\n    \n    hideCompoundTypes() {\n        this.setState({ menuPosition: null })\n    }\n    \n    handleInitInvestment(e){\n        console.log(e.target.value)\n        this.setState({\n            initialInvestment: e.target.value\n        })\n    }\n\n    handleInterestRate(e){\n        console.log(e.target.value)\n        this.setState({\n            interestRate: e.target.value\n        })\n    }\n    handleYrsToGrow(e){\n        console.log(e.target.value)\n        this.setState({\n            yrsToGrow: e.target.value\n        })\n    }\n    \n    clickedMonthly(){\n        this.setState({\n            compound: 12\n        })\n    }\n\n    clickedAnnually(){\n        this.setState({\n            compound: 1\n        })\n    }\n\n    clickedQuarterly(){\n        this.setState({\n            compound: 4\n        })\n    }\n\n    clickedSemiAnnually(){\n        this.setState({\n            compound: 2\n        })\n    }\n\n    calculateAmount(){\n        let insideBrackets = ((this.state.interestRate/100)/(this.state.compound)) + 1;\n        console.log(insideBrackets);\n        let appliedPower = Math.pow(insideBrackets,this.state.compound * this.state.yrsToGrow);\n        console.log(appliedPower);\n        let finalAmount = appliedPower* this.state.initialInvestment;\n        console.log(finalAmount)\n        this.setState({\n            amount: finalAmount.toFixed(2)\n        })\n    }\n\n    render(){\n        const {compoundTypes} = this.props;\n        \n        return(\n        <Card className = \"CalculatorCard\" variant=\"outlined\" color = \"secondary\"> \n            <CardContent>\n                <Typography variant=\"h3\" component=\"h2\">\n                    Investment Calculator\n                </Typography>\n                <br/>\n                <form noValidate autoComplete=\"off\">\n                    <TextField id=\"standard-basic\" label = \"Intial investment($):\" defaultValue = \"0\" \n                     margin=\"normal\"  onChange = {(e) => this.handleInitInvestment(e)}/>\n                    <br/>\n                    <TextField id=\"standard-basic\" label=\"Interest rate(%):\" defaultValue = \"0\" \n                    margin=\"normal\" onChange = {(e) => this.handleInterestRate(e)}/>\n                    {/* <TextField id=\"standard-basic\" label=\"Compounding interval:\" defaultValue = \"Monthly\" margin=\"normal\"/> */}\n                    <br/>\n                    <TextField id=\"standard-basic\" label=\"Years to grow(years):\" defaultValue = \"1\" \n                    margin=\"normal\" onChange = {(e) => this.handleYrsToGrow(e)}/>\n                    <br/>   \n                    <Button variant=\"outlined\" aria-label=\"add\" onClick={(e) => this.displayCompoundTypes(e)}>\n                        \n                        Compounding interval\n                        <AddCircleIcon/>\n                    </Button>\n                      <Menu\n                        id=\"long-menu\"\n                        anchorEl={this.state.menuPosition}\n                        open={Boolean(this.state.menuPosition)}\n                        onClose={() => this.hideCompoundTypes()}\n                      >\n\n             \n                        <MenuItem >\n                            <MenuItem onClick={()=>this.clickedMonthly()}>Monthly</MenuItem>\n                            <MenuItem onClick={()=>this.clickedQuarterly()}>Quarterly</MenuItem>\n                            <MenuItem onClick={()=>this.clickedSemiAnnually()}>Semi-annually</MenuItem>\n                            <MenuItem onClick={()=>this.clickedAnnually()}>Yearly</MenuItem>\n\n                        </MenuItem>\n\n                      </Menu>\n                    <br/>\n                    <Button variant=\"outlined\" aria-label=\"add\" onClick={() => this.calculateAmount()}>\n                        Calculate\n                    </Button>\n                    <TextField\n                        value={this.state.amount}\n                    />\n                    \n\n                </form>\n            </CardContent>\n\n        </Card>\n        )\n\n    }\n\n\n}\n\n\nexport default Calculator ;"]},"metadata":{},"sourceType":"module"}