{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react';\nimport Input from './Input';\nimport StockList from './StockList'; // import Canvas from './canvasExample'\n\nimport PieChart from './PieChart';\nimport BarChart from './BarChart';\nimport TableComp from '../Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Investments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book cost\", \"Gain/Loss\", \"Percentage of portfolio\"],\n      stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n      stockList_categories: [\"Stocks\", \"Mutual funds\", \"Bonds\"],\n      pieChartSize: 900,\n      pieChartRadius: 200,\n      totalAmountInvested: 100,\n      ticker: 0,\n      quantity: 0,\n      price: 0,\n      avgCost: 0,\n      mktValue: 0,\n      bookCost: 0,\n      gainLoss: 0,\n      percentageOfPortfolio: 0,\n      stocklist_data: [{\n        name: \"FB\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 32.5,\n        mktValue: 1,\n        bookCost: 100,\n        gainLoss: 100,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GOOGL\",\n        quantity: 3,\n        price: 1.0,\n        avgCost: 1523,\n        mktValue: 1,\n        bookCost: 37,\n        gainLoss: 200,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"PDD\",\n        quantity: 8,\n        price: 1.0,\n        avgCost: 170,\n        mktValue: 1,\n        bookCost: 34,\n        gainLoss: 20,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GME\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 340,\n        mktValue: 1,\n        bookCost: 78,\n        gainLoss: -89,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"MSFT\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 230,\n        mktValue: 1,\n        bookCost: 45,\n        gainLoss: -201,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"BABA\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 46,\n        gainLoss: 30,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"V\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 50,\n        gainLoss: 67,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"SHOP\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 87,\n        gainLoss: 3,\n        percentageOfPortfolio: 100\n      }],\n      stockList: [{\n        name: \"FB\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 32.5,\n        mktValue: 1,\n        bookCost: 100,\n        gainLoss: 100,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GOOGL\",\n        quantity: 3,\n        price: 1.0,\n        avgCost: 1523,\n        mktValue: 1,\n        bookCost: 37,\n        gainLoss: 200,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"PDD\",\n        quantity: 8,\n        price: 1.0,\n        avgCost: 170,\n        mktValue: 1,\n        bookCost: 34,\n        gainLoss: 20,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GME\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 340,\n        mktValue: 1,\n        bookCost: 78,\n        gainLoss: -89,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"MSFT\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 230,\n        mktValue: 1,\n        bookCost: 45,\n        gainLoss: -201,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"BABA\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 46,\n        gainLoss: 30,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"V\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 50,\n        gainLoss: 67,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"SHOP\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 87,\n        gainLoss: 3,\n        percentageOfPortfolio: 100\n      }],\n      sortBy: \"Market Value\",\n      sortDes: {\n        \"Name\": false,\n        \"Quantity\": false,\n        \"Market Value\": false,\n        \"Gain/Loss\": false,\n        \"Percentage of portfolio\": false\n      },\n      openDrawer: false\n    };\n\n    this.sortStocks = () => {\n      this.state.stocklist_data.sort(this.sortObj);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.addStock = newStock => {\n      this.state.stocklist_data.unshift(newStock);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.editStock = (oldStock, newStock) => {\n      const index = this.state.stocklist_data.findIndex(t => t === oldStock);\n      this.state.stocklist_data[index] = newStock;\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.deleteStock = transaction => {\n      const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction);\n      this.setState({\n        stocklist_data: keepTransactions\n      });\n    };\n\n    this.addCategory = newCategory => {\n      if (!this.state.transactions_categories.includes(newCategory)) this.state.transactions_categories.push(newCategory);\n      this.setState({\n        transactions_categories: this.state.transactions_categories\n      });\n    };\n\n    this.deleteCategory = category => {\n      const keepCategories = this.state.transactions_categories.filter(c => c !== category);\n      this.setState({\n        transactions_categories: keepCategories\n      });\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      console.log(this.state.bookCost);\n      console.log(this.state.totalAmountInvested);\n      let a = Number(this.state.quantity) * Number(this.state.price);\n      console.log(Number(this.totalAmountInvested) + Number(a));\n      const stock = {\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: Number(this.state.quantity) * Number(this.state.price),\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: Number(this.state.bookCost) / (Number(this.state.bookCost) + Number(this.state.totalAmountInvested)) * 100,\n        totalAmountInvested: Number(this.totalAmountInvested) + Number(this.bookCost)\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(Number(stock.totalAmountInvested));\n      console.log(currList);\n\n      for (let i = 0; i < this.state.stockList.length; i++) {\n        let allStocks = [...this.state.stockList]; // 2. Make a shallow copy of the item you want to mutate\n\n        let currentStock = { ...allStocks[i]\n        }; // 3. Replace the property you're intested in\n\n        console.log(Number(currentStock.bookCost));\n        console.log(Number(currentStock.totalAmountInvested));\n        currentStock.percentageOfPortfolio = Number(currentStock.bookCost) / Number(currentStock.totalAmountInvested); // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n        allStocks[i] = currentStock; // 5. Set the state to our new copy\n\n        this.setState({\n          allStocks\n        }); // console.log(this.state.stockList[i].percentageOfPortfolio)\n        // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n        // console.log(this.state.stockList[i].percentageOfPortfolio)\n      }\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n    };\n\n    this.deleteStock = stock => {\n      //make var because not mutating this \n      console.log(\"Delete\");\n      const filteredStock = this.state.stockList.filter(s => {\n        return s !== stock; //the one's we don't want to remove\n      });\n      this.setState({\n        stockList: filteredStock\n      });\n    };\n\n    this.editStock = (stock, valueToEdit) => {\n      console.log(\"Editing stock\");\n      console.log(stock);\n      console.log(\"Value\");\n      console.log(valueToEdit);\n    };\n  }\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance();\n  } // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     canvasRef: useCanvas()\n  //   };\n  // }\n  // sorting the transactions based on the currently selected element \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        stockList: this.state.stockList,\n        handleInputStock: this.handleInputStock,\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StockList, {\n        stockList: this.state.stockList,\n        deleteStock: this.deleteStock,\n        editStock: this.editStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        listToDisplay: this.state.stockList,\n        pieChartSize: this.state.pieChartSize,\n        pieChartRadius: this.state.pieChartRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stocklist Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n        , {\n          classes: {\n            TableContainer: 'TableContainer'\n          },\n          headings: this.state.stockList_headings,\n          data: this.state.stocklist_data,\n          options: this.state.stockList_options,\n          categories: this.state.stockList_categories,\n          addRow: this.addStock,\n          editRow: this.editStock,\n          removeRow: this.deleteStock,\n          addCategory: this.addCategory,\n          removeCategory: this.deleteCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n        , {\n          classes: {\n            TableContainer: 'TableContainer'\n          },\n          headings: this.state.stockList_headings,\n          data: this.state.stocklist_data,\n          options: this.state.stockList_options,\n          categories: this.state.stockList_categories,\n          addRow: this.addTransaction,\n          editRow: this.editTransaction,\n          removeRow: this.deleteTransaction,\n          addCategory: this.addCategory,\n          removeCategory: this.deleteCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","Input","StockList","PieChart","BarChart","TableComp","Investments","Component","state","stockList_headings","stockList_options","stockList_categories","pieChartSize","pieChartRadius","totalAmountInvested","ticker","quantity","price","avgCost","mktValue","bookCost","gainLoss","percentageOfPortfolio","stocklist_data","name","stockList","sortBy","sortDes","openDrawer","sortStocks","sort","sortObj","setState","addStock","newStock","unshift","editStock","oldStock","index","findIndex","t","deleteStock","transaction","keepTransactions","filter","addCategory","newCategory","transactions_categories","includes","push","deleteCategory","category","keepCategories","c","handleInputStock","console","log","a","Number","stock","currList","i","length","allStocks","currentStock","handleInputChange","event","target","value","filteredStock","s","valueToEdit","componentDidUpdate","undefined","prevState","transactions_data","sumAccountBalance","render","TableContainer","addTransaction","editTransaction","deleteTransaction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport StockList from './StockList'\n// import Canvas from './canvasExample'\nimport PieChart from './PieChart'\nimport BarChart from './BarChart'\nimport TableComp from '../Table'\n\n\n\nclass Investments extends React.Component {\n\n  state = {\n    stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book cost\", \"Gain/Loss\", \"Percentage of portfolio\"],\n    stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n    stockList_categories: [\"Stocks\", \"Mutual funds\", \"Bonds\"],\n    pieChartSize: 900,\n    pieChartRadius: 200,\n    totalAmountInvested: 100,\n    ticker: 0,\n    quantity: 0,\n    price: 0,\n    avgCost: 0,\n    mktValue: 0,\n    bookCost: 0,\n    gainLoss: 0,\n    percentageOfPortfolio:0,\n    stocklist_data: [{name: \"FB\", quantity: 20, price: 1.0, avgCost: 32.5, mktValue: 1, bookCost: 100, gainLoss:100, percentageOfPortfolio:100 },\n    {name: \"GOOGL\", quantity: 3, price: 1.0, avgCost: 1523, mktValue: 1, bookCost: 37, gainLoss:200, percentageOfPortfolio:100 },\n    {name: \"PDD\", quantity: 8, price: 1.0, avgCost: 170, mktValue: 1, bookCost: 34, gainLoss:20, percentageOfPortfolio:100 },\n    {name: \"GME\", quantity: 4, price: 1.0, avgCost: 340, mktValue: 1, bookCost: 78, gainLoss:-89, percentageOfPortfolio:100 },\n    {name: \"MSFT\", quantity: 4, price: 1.0, avgCost: 230, mktValue: 1, bookCost: 45, gainLoss:-201, percentageOfPortfolio:100 },\n    {name: \"BABA\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 46, gainLoss:30, percentageOfPortfolio:100 },\n    {name: \"V\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 50, gainLoss:67, percentageOfPortfolio:100 },\n    {name: \"SHOP\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 87, gainLoss:3, percentageOfPortfolio:100 }],\n    \n    \n    \n    \n    stockList: [{name: \"FB\", quantity: 20, price: 1.0, avgCost: 32.5, mktValue: 1, bookCost: 100, gainLoss:100, percentageOfPortfolio:100 },\n    {name: \"GOOGL\", quantity: 3, price: 1.0, avgCost: 1523, mktValue: 1, bookCost: 37, gainLoss:200, percentageOfPortfolio:100 },\n    {name: \"PDD\", quantity: 8, price: 1.0, avgCost: 170, mktValue: 1, bookCost: 34, gainLoss:20, percentageOfPortfolio:100 },\n    {name: \"GME\", quantity: 4, price: 1.0, avgCost: 340, mktValue: 1, bookCost: 78, gainLoss:-89, percentageOfPortfolio:100 },\n    {name: \"MSFT\", quantity: 4, price: 1.0, avgCost: 230, mktValue: 1, bookCost: 45, gainLoss:-201, percentageOfPortfolio:100 },\n    {name: \"BABA\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 46, gainLoss:30, percentageOfPortfolio:100 },\n    {name: \"V\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 50, gainLoss:67, percentageOfPortfolio:100 },\n    {name: \"SHOP\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 87, gainLoss:3, percentageOfPortfolio:100 }],\n    sortBy: \"Market Value\",\n    sortDes: {\n      \"Name\": false,\n      \"Quantity\": false,\n      \"Market Value\": false,\n      \"Gain/Loss\": false,\n      \"Percentage of portfolio\": false,\n    },\n    openDrawer: false\n  }\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance()\n  }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     canvasRef: useCanvas()\n  //   };\n  // }\n\n\n  // sorting the transactions based on the currently selected element \n  sortStocks = () => {\n    this.state.stocklist_data.sort(this.sortObj)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // add newTransaction to the beginning of the transactions_data array \n  addStock = (newStock) => {\n    this.state.stocklist_data.unshift(newStock)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // finds the index of the oldTransaction data and replace it with the newTransaction data\n  editStock = (oldStock, newStock) => {\n    const index = this.state.stocklist_data.findIndex(t => t === oldStock)\n    this.state.stocklist_data[index] = newStock\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // deletes transaction from transactions_data array \n  deleteStock = (transaction) => {\n    const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction)\n    this.setState({ stocklist_data: keepTransactions })\n  }\n\n  // adds a user defined category \n  addCategory = (newCategory) => {\n    if (!this.state.transactions_categories.includes(newCategory))\n      this.state.transactions_categories.push(newCategory)\n    this.setState({ transactions_categories: this.state.transactions_categories })\n  }\n\n  // deletes a user defined category (the default cannot be deleted)\n  deleteCategory = (category) => {\n    const keepCategories = this.state.transactions_categories.filter(c => c !== category)\n    this.setState({ transactions_categories: keepCategories })\n  }\n\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    console.log(this.state.bookCost)\n    console.log(this.state.totalAmountInvested)\n    let a =Number(this.state.quantity)* Number(this.state.price)\n    console.log(Number(this.totalAmountInvested)+Number(a))\n    const stock = {\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: Number(this.state.quantity)* Number(this.state.price),\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:(Number(this.state.bookCost)/(Number(this.state.bookCost)+Number(this.state.totalAmountInvested)))*100,\n      totalAmountInvested: Number(this.totalAmountInvested)+Number(this.bookCost)\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n\n    console.log(Number(stock.totalAmountInvested))\n\n\n    console.log(currList)\n    for(let i = 0; i < this.state.stockList.length; i++){\n      let allStocks = [...this.state.stockList];\n      // 2. Make a shallow copy of the item you want to mutate\n      let currentStock = {...allStocks[i]};\n      // 3. Replace the property you're intested in\n      console.log(Number(currentStock.bookCost))\n      console.log(Number(currentStock.totalAmountInvested))\n      currentStock.percentageOfPortfolio = Number(currentStock.bookCost)/Number(currentStock.totalAmountInvested);\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n      allStocks[i] = currentStock;\n      // 5. Set the state to our new copy\n      this.setState({allStocks});\n\n\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n      // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n    }\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n\n  }\n\n\n    //student is the object to reference\n  deleteStock = (stock) => {\n    //make var because not mutating this \n    console.log(\"Delete\")\n    const filteredStock = this.state.stockList.filter((s) => {\n      return s !== stock  //the one's we don't want to remove\n    })\n\n    this.setState({\n      stockList: filteredStock\n    })\n  }\n\n  editStock = (stock, valueToEdit) => {\n\n    console.log(\"Editing stock\")\n    console.log(stock)\n    console.log(\"Value\")\n    console.log(valueToEdit)\n    \n  }\n\n  render() {\n    return (\n\n      <div>\n \n      <Input stockList={this.state.stockList} \n      handleInputStock = {this.handleInputStock} \n      handleInputChange = {this.handleInputChange}\n      />\n      <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock} editStock = {this.editStock}/>\n      \n   \n      <PieChart listToDisplay = {this.state.stockList} pieChartSize = {this.state.pieChartSize} pieChartRadius = {this.state.pieChartRadius}/>\n      {/* <BarChart listToDisplay = {this.state.stockList}/> */}\n      \n      \n      <div className=\"Stocklist Table\">\n\n        <TableComp\n          // use the TableContainer class to style the table itself \n          classes={{ TableContainer: 'TableContainer' }}\n          headings={this.state.stockList_headings}\n          data={this.state.stocklist_data}\n          options={this.state.stockList_options}\n          categories={this.state.stockList_categories}\n          addRow={this.addStock}\n          editRow={this.editStock}\n          removeRow={this.deleteStock}\n          addCategory={this.addCategory}\n          removeCategory={this.deleteCategory}\n        />\n\n\n        <TableComp\n                // use the TableContainer class to style the table itself \n                classes={{ TableContainer: 'TableContainer' }}\n                headings={this.state.stockList_headings}\n                data={this.state.stocklist_data}\n                options={this.state.stockList_options}\n                categories={this.state.stockList_categories}\n                addRow={this.addTransaction}\n                editRow={this.editTransaction}\n                removeRow={this.deleteTransaction}\n                addCategory={this.addCategory}\n                removeCategory={this.deleteCategory}\n              />\n        </div>\n      </div>\n\n\n      \n      \n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}