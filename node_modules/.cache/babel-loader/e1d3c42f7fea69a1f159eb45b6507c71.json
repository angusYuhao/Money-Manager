{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/forumList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple, grey } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ForumListItem from \"./forumListItem.js\";\nimport { ArrowRight } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'; // define styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: 10\n  },\n  forumTopBar: {\n    backgroundColor: deepPurple[50],\n    borderRadius: 5,\n    spacing: '100'\n  },\n  forumTopChunk: {\n    margin: 10\n  },\n  addPostPanel: {\n    backgroundColor: '#f0f0f0'\n  },\n  filter: {\n    minWidth: 200\n  },\n  forumBarButton: {\n    padding: 10,\n    marginLeft: 10,\n    marginRight: 0\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass ForumList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openNewPost: false,\n      openManagePost: false,\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postFilter: \"\",\n      sortOrder: \"\",\n      commenter: \"\",\n      commentContent: \"\",\n      tempFAInfo: [{\n        FAName: \"Angus Wang\",\n        FAIntro: \"I am Angus Wang. I am here to guide you to treasures you'll never find yourself. Bow down to me you mere mortal\",\n        FAFields: [\"Stocks\", \"Budget Planning\", \"Life Hacks\"],\n        FAPoints: 123\n      }, {\n        FAName: \"Angela Merkel\",\n        FAIntro: \"I am Angela Merkel, the chancellor of Germany. Bow down to me you mere mortal\",\n        FAFields: [\"Politics\", \"Nation Building\"],\n        FAPoints: 456\n      }, {\n        FAName: \"dragonslayer420\",\n        FAIntro: \"I am dragonslayer420, the slayer of 420 dragons. I am here to teach you the way of dragonslaying. Bow down to me you mere mortal\",\n        FAFields: [\"Dragon Slaying\"],\n        FAPoints: 789\n      }],\n      userInfo: {\n        username: \"\",\n        usertype: \"\",\n        userUpvotedPosts: [],\n        userDownvotedPosts: [],\n        userFollows: []\n      },\n      posts: [{\n        author: 'Angus Wang',\n        authorUsertype: \"FA\",\n        title: 'welcome to communtiy',\n        content: 'this is the first community thread',\n        authorAvatar: null,\n        category: \"Announcement\",\n        postID: 1,\n        numUpvotes: 5,\n        numDownvotes: 1,\n        comments: [{\n          commenter: \"Angus Wang\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"\n        }, {\n          commenter: \"Angus Wang2\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"\n        }]\n      }, {\n        author: 'boogy boy',\n        authorUsertype: \"RU\",\n        title: 'test thread',\n        content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ',\n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 2,\n        numUpvotes: 4,\n        numDownvotes: 2,\n        comments: [{\n          commenter: \"Angus Wang3\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"\n        }, {\n          commenter: \"Dude with an attitude\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"\n        }]\n      }]\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        openNewPost: true\n      });\n    };\n\n    this.handleClickManage = () => {\n      this.setState({\n        openManagePost: true\n      });\n    };\n\n    this.handleClickManageDone = () => {\n      this.setState({\n        openManagePost: false\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openNewPost: false,\n        openManagePost: false,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postID: null\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFilterInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        postFilter: value\n      });\n    };\n\n    this.handleSortInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        sortOrder: value\n      }, () => this.sortPosts(value));\n    };\n\n    this.sortPosts = order => {\n      const posts = this.state.posts;\n\n      switch (order) {\n        case \"Oldest\":\n          posts.sort((a, b) => a.postID > b.postID ? 1 : -1);\n          break;\n\n        case \"Newest\":\n          posts.sort((a, b) => a.postID < b.postID ? 1 : -1);\n          break;\n\n        case \"MostUpvotes\":\n          posts.sort((a, b) => a.numUpvotes < b.numUpvotes ? 1 : -1);\n          break;\n\n        case \"BestRated\":\n          posts.sort((a, b) => a.numUpvotes - a.numDownvotes < b.numUpvotes - b.numDownvotes ? 1 : -1);\n      }\n\n      this.setState({\n        posts: posts\n      });\n    };\n\n    this.addPost = username => {\n      const postList = this.state.posts;\n      const maxValue = Math.max.apply(Math, postList.map(function (p) {\n        return p.postID;\n      }));\n      const newID = postList.length === 0 ? 1 : maxValue + 1;\n      const newPost = {\n        author: username,\n        authorUsertype: this.state.userInfo.usertype,\n        title: this.state.title,\n        authorAvatar: null,\n        content: this.state.content,\n        category: this.state.category,\n        postID: newID,\n        numUpvotes: 0,\n        numDownvotes: 0,\n        comments: []\n      };\n      postList.push(newPost);\n      this.setState({\n        posts: postList,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postID: null\n      });\n      this.handleClose();\n      this.sortPosts(this.state.sortOrder);\n    };\n\n    this.changeCategory = _category => {\n      this.setState({\n        category: _category\n      });\n    };\n\n    this.postComment = target => {\n      const targetPostID = target.postID;\n      console.log(targetPostID);\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      const targetPostComments = targetPost[0].comments;\n      const newComment = {\n        commenter: this.props.username,\n        commentContent: target.comment\n      };\n      targetPostComments.push(newComment);\n      targetPost[0].comments = targetPostComments;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n    };\n\n    this.deletePosts = target => {\n      console.log(\"deleting post\");\n      const targetPostID = target.postID;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      console.log(\"posts length: \", otherPosts.length);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n\n      if (index !== -1) {\n        userInfo.userUpvotedPosts.splice(index, 1);\n        this.setState({\n          userInfo: userInfo\n        });\n      }\n    };\n\n    this.addUpvote = target => {\n      console.log(\"adding upvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userUpvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusUpvote = target => {\n      console.log(\"subtracting upvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.addDownvote = target => {\n      console.log(\"adding downvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userDownvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusDownvote = target => {\n      console.log(\"subtracting downvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userDownvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      username: this.props.username,\n      usertype: \"RU\" // later include the upvotes and downvotes of the user\n\n    });\n  }\n\n  render() {\n    const {\n      username\n    } = this.props;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.forumTopChunk,\n          children: [/*#__PURE__*/_jsxDEV(CardActions, {\n            className: classes.forumTopBar,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.filter,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Filter Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: this.handleFilterInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Announcement\",\n                  children: \"Announcement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Question\",\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Opinion\",\n                  children: \"Opinion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.filter,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Sort By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: this.handleSortInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Oldest\",\n                  children: \"Oldest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Newest\",\n                  children: \"Newest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"MostUpvotes\",\n                  children: \"Most Upvotes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"BestRated\",\n                  children: \"Best Rated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              Container: true,\n              justify: \"flex-end\",\n              children: [this.state.openManagePost === true || this.state.openNewPost === true ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add Post\",\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: this.handleClickOpen,\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add Post\",\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: this.handleClickOpen,\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this), this.state.openManagePost ? /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forumBarButton,\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: this.handleClickManageDone,\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forumBarButton,\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: this.handleClickManage,\n                children: \"Manage Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), this.state.openNewPost ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.title,\n                onChange: this.handleInputChange,\n                size: \"small\",\n                variant: \"outlined\",\n                margin: \"dense\",\n                name: \"title\",\n                label: \"Post Title\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                color: \"primary\",\n                \"aria-label\": \"outlined primary button group\",\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Announcement\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Announcement\"),\n                  children: \"Announcement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Question\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Question\"),\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Opinion\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Opinion\"),\n                  children: \"Opinion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.content,\n                onChange: this.handleInputChange,\n                multiline: true,\n                rows: \"5\",\n                variant: \"outlined\",\n                margin: \"dense\",\n                name: \"content\",\n                label: \"Say something here...\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.addPost(username),\n                color: \"primary\",\n                disabled: this.state.title !== \"\" && this.state.content !== \"\" && this.state.category !== \"\" ? false : true,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          className: classes.forumList,\n          children: this.state.posts.map(thread => {\n            if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postAuthorUsertype: thread.authorUsertype,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postID: thread.postID,\n                  openManagePost: this.state.openManagePost ? true : false,\n                  numUpvotes: thread.numUpvotes,\n                  numDownvotes: thread.numDownvotes,\n                  userInfo: this.state.userInfo,\n                  addUpvote: this.addUpvote,\n                  minusUpvote: this.minusUpvote,\n                  addDownvote: this.addDownvote,\n                  minusDownvote: this.minusDownvote,\n                  deletePosts: this.deletePosts,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 25\n                }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 93\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 23\n              }, this);\n            } else if (this.state.openManagePost ? this.state.postFilter === thread.category && thread.author === username : this.state.postFilter === thread.category) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postAuthorUsertype: thread.authorUsertype,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postID: thread.postID,\n                  openManagePost: this.state.openManagePost ? true : false,\n                  numUpvotes: thread.numUpvotes,\n                  numDownvotes: thread.numDownvotes,\n                  userInfo: this.state.userInfo,\n                  addUpvote: this.addUpvote,\n                  minusUpvote: this.minusUpvote,\n                  addDownvote: this.addDownvote,\n                  minusDownvote: this.minusDownvote,\n                  deletePosts: this.deletePosts,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 25\n                }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 93\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 23\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(ForumList);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/forumList.js"],"names":["React","PropTypes","Box","List","Divider","Button","ButtonGroup","TextField","Grid","Container","InputLabel","MenuItem","FormControl","Select","Card","CardActionArea","CardActions","CardContent","Typography","Fab","Tooltip","createMuiTheme","ThemeProvider","deepPurple","grey","withStyles","ForumListItem","ArrowRight","IconButton","AddCircleIcon","AddIcon","RemoveCircleIcon","styles","theme","forumList","backgroundColor","borderRadius","margin","forumTopBar","spacing","forumTopChunk","addPostPanel","filter","minWidth","forumBarButton","padding","marginLeft","marginRight","palette","primary","main","secondary","typography","fontFamily","join","ForumList","Component","state","openNewPost","openManagePost","author","title","authorAvatar","content","category","postFilter","sortOrder","commenter","commentContent","tempFAInfo","FAName","FAIntro","FAFields","FAPoints","userInfo","username","usertype","userUpvotedPosts","userDownvotedPosts","userFollows","posts","authorUsertype","postID","numUpvotes","numDownvotes","comments","handleClickOpen","setState","handleClickManage","handleClickManageDone","handleClose","handleInputChange","event","value","target","name","handleFilterInputChange","handleSortInputChange","sortPosts","order","sort","a","b","addPost","postList","maxValue","Math","max","apply","map","p","newID","length","newPost","push","changeCategory","_category","postComment","targetPostID","console","log","targetPostIndex","findIndex","post","targetPost","targetPostComments","newComment","props","comment","otherPosts","splice","deletePosts","index","indexOf","addUpvote","minusUpvote","addDownvote","minusDownvote","componentDidMount","render","classes","thread"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple, grey } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport ForumListItem from \"./forumListItem.js\"\nimport { ArrowRight } from '@material-ui/icons';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\n// define styles\nconst styles =  theme => ({\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: 10,\n  },\n  forumTopBar: {\n    backgroundColor: deepPurple[50],\n    borderRadius: 5,\n    spacing: '100',\n  },\n  forumTopChunk: {\n    margin: 10,\n  },\n  addPostPanel: {\n    backgroundColor: '#f0f0f0',\n  },\n  filter: {\n    minWidth: 200,\n  },\n  forumBarButton: {\n    padding: 10,\n    marginLeft: 10,\n    marginRight: 0,\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\nclass ForumList extends React.Component {\n\n  state = {\n    openNewPost: false,\n    openManagePost: false,\n    author: \"\",\n    title: \"\",\n    authorAvatar: \"\",\n    content: \"\",\n    category: \"\",\n    postFilter: \"\",\n    sortOrder: \"\",\n    commenter: \"\",\n    commentContent: \"\",\n    tempFAInfo: [\n      {FAName: \"Angus Wang\",\n        FAIntro: \"I am Angus Wang. I am here to guide you to treasures you'll never find yourself. Bow down to me you mere mortal\",\n        FAFields: [\"Stocks\", \"Budget Planning\", \"Life Hacks\"],\n        FAPoints: 123,\n      },\n      {FAName: \"Angela Merkel\",\n        FAIntro: \"I am Angela Merkel, the chancellor of Germany. Bow down to me you mere mortal\",\n        FAFields: [\"Politics\", \"Nation Building\"],\n        FAPoints: 456,\n      },\n      {FAName: \"dragonslayer420\",\n        FAIntro: \"I am dragonslayer420, the slayer of 420 dragons. I am here to teach you the way of dragonslaying. Bow down to me you mere mortal\",\n        FAFields: [\"Dragon Slaying\"],\n        FAPoints: 789,\n      }\n    ],\n    userInfo: {\n      username: \"\",\n      usertype: \"\",\n      userUpvotedPosts: [],\n      userDownvotedPosts: [],\n      userFollows: [],\n    },\n    posts: [\n      {author: 'Angus Wang', \n        authorUsertype: \"FA\",\n        title: 'welcome to communtiy', \n        content: 'this is the first community thread', \n        authorAvatar: null,\n        category: \"Announcement\",\n        postID: 1,\n        numUpvotes: 5,\n        numDownvotes: 1,\n        comments: [\n        {commenter: \"Angus Wang\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"},\n        {commenter: \"Angus Wang2\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"}\n        ]\n      },\n      {author: 'boogy boy', \n        authorUsertype: \"RU\",\n        title: 'test thread', \n        content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ', \n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 2,\n        numUpvotes: 4,\n        numDownvotes: 2,\n        comments: [\n        {commenter: \"Angus Wang3\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"},\n        {commenter: \"Dude with an attitude\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"}\n        ]\n      }\n    ]\n  }\n\n  componentDidMount() {\n    this.setState({\n      username: this.props.username,\n      usertype: \"RU\",\n      // later include the upvotes and downvotes of the user\n    })\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      openNewPost: true\n    })\n  }\n\n  handleClickManage = () => {\n    this.setState({\n      openManagePost: true\n    })\n  }\n\n  handleClickManageDone = () => {\n    this.setState({\n      openManagePost: false\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      openNewPost: false,\n      openManagePost: false,\n\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postID: null\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const name = event.target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFilterInputChange = (event) => {\n    const value = event.target.value\n\n    this.setState({\n      postFilter: value\n    })\n  }\n\n  handleSortInputChange = (event) => {\n    const value = event.target.value\n    this.setState({ sortOrder: value }, () => this.sortPosts(value))\n  }\n\n  sortPosts = (order) => {\n    const posts = this.state.posts\n\n    switch(order) {\n      case \"Oldest\":\n        posts.sort((a, b) => a.postID > b.postID ? 1 : -1)\n        break;\n      case \"Newest\":\n        posts.sort((a, b) => a.postID < b.postID ? 1 : -1)\n        break;\n      case \"MostUpvotes\":\n        posts.sort((a, b) => a.numUpvotes < b.numUpvotes ? 1 : -1)\n        break;\n      case \"BestRated\":\n        posts.sort((a, b) => a.numUpvotes-a.numDownvotes < b.numUpvotes-b.numDownvotes ? 1 : -1)\n    }\n\n    this.setState({ posts: posts })\n  }\n\n  addPost = (username) => {\n    const postList = this.state.posts\n    const maxValue = Math.max.apply(Math, postList.map(function(p) { return p.postID; }))\n    const newID = (postList.length === 0) ? 1 : maxValue + 1\n\n    const newPost = {\n      author: username,\n      authorUsertype: this.state.userInfo.usertype,\n      title: this.state.title,\n      authorAvatar: null,\n      content: this.state.content,\n      category: this.state.category,\n      postID: newID,\n      numUpvotes: 0,\n      numDownvotes: 0,\n      comments: []\n    }\n\n    postList.push(newPost)\n\n    this.setState({\n      posts: postList,\n\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postID: null\n    })\n\n    this.handleClose()\n    this.sortPosts(this.state.sortOrder)\n  }\n\n  changeCategory = (_category) => {\n    this.setState({\n      category: _category\n    })\n  }\n\n  postComment = (target) => {\n    const targetPostID = target.postID\n    console.log(targetPostID)\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    \n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    const targetPostComments = targetPost[0].comments\n\n    const newComment = {\n      commenter: this.props.username,\n      commentContent: target.comment\n    }\n\n    targetPostComments.push(newComment)\n    targetPost[0].comments = targetPostComments\n    \n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n\n    this.setState({ posts: otherPosts })\n  }\n\n  deletePosts = (target) => {\n    console.log(\"deleting post\")\n    const targetPostID = target.postID\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    console.log(\"posts length: \", otherPosts.length)\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.state.userInfo\n    const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n    if (index !== -1) {\n      userInfo.userUpvotedPosts.splice(index, 1)\n      this.setState({ userInfo: userInfo })\n    }\n  }\n\n  addUpvote = (target) => {\n    console.log(\"adding upvotes\")\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.state.userInfo\n    userInfo.userUpvotedPosts.push(targetPostID)\n    this.setState({ userInfo: userInfo })\n  }\n\n  minusUpvote = (target) => {\n    console.log(\"subtracting upvotes\")\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.state.userInfo\n    const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n    if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1)\n    this.setState({ userInfo: userInfo })\n  }\n\n  addDownvote = (target) => {\n    console.log(\"adding downvotes\")\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.state.userInfo\n    userInfo.userDownvotedPosts.push(targetPostID)\n    this.setState({ userInfo: userInfo })\n  }\n\n  minusDownvote = (target) => {\n    console.log(\"subtracting downvotes\")\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.state.userInfo\n    const index = userInfo.userDownvotedPosts.indexOf(targetPostID)\n    if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1)\n    this.setState({ userInfo: userInfo })\n  }\n\n  render() {\n\n    const { username } = this.props\n    const { classes } = this.props\n\n    return (\n        <div>\n          <Container maxWidth=\"xl\">\n            <Card className={ classes.forumTopChunk }>\n              <CardActions className={ classes.forumTopBar }>\n                <FormControl className={ classes.filter }> \n                  <InputLabel>Filter Posts</InputLabel>\n                  <Select onChange={ this.handleFilterInputChange }>\n                    <MenuItem value=\"\">None</MenuItem>\n                    <MenuItem value=\"Announcement\">Announcement</MenuItem>\n                    <MenuItem value=\"Question\">Question</MenuItem>\n                    <MenuItem value=\"Opinion\">Opinion</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <FormControl className={ classes.filter }>\n                  <InputLabel>Sort By</InputLabel>\n                  <Select onChange={ this.handleSortInputChange }>\n                    <MenuItem value=\"Oldest\">Oldest</MenuItem>\n                    <MenuItem value=\"Newest\">Newest</MenuItem>\n                    <MenuItem value=\"MostUpvotes\">Most Upvotes</MenuItem>\n                    <MenuItem value=\"BestRated\">Best Rated</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Grid Container justify=\"flex-end\">\n                  { this.state.openManagePost === true || this.state.openNewPost === true ? \n                    <Tooltip title=\"Add Post\">\n                      <Fab color=\"primary\" size=\"small\" onClick={ this.handleClickOpen } disabled>\n                        <AddIcon fontSize=\"large\"/>\n                      </Fab>\n                    </Tooltip>\n                    :\n                    <Tooltip title=\"Add Post\">\n                      <Fab color=\"primary\" size=\"small\" onClick={ this.handleClickOpen }>\n                        <AddIcon fontSize=\"large\"/>\n                      </Fab>\n                    </Tooltip>\n                  }\n                  { this.state.openManagePost ? \n                    <Button className={ classes.forumBarButton } color=\"primary\" variant=\"contained\" onClick={ this.handleClickManageDone }>\n                    Done\n                    </Button> : \n                    <Button className={ classes.forumBarButton } color=\"primary\" variant=\"contained\" onClick={ this.handleClickManage }>\n                    Manage Posts\n                    </Button> \n                  }\n                </Grid>\n                \n              </CardActions>\n              \n              { this.state.openNewPost ? \n              <React.Fragment>\n                <CardContent>\n                  <TextField\n                    value={ this.state.title }\n                    onChange={ this.handleInputChange }\n                    size=\"small\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    name=\"title\"\n                    label=\"Post Title\"\n                    fullWidth\n                  />\n                  <br></br>\n                  <br></br>\n                  <Typography>Category:</Typography>\n                  <br></br>\n                  \n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" fullWidth>\n                    <Button variant={ this.state.category === \"Announcement\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Announcement\") }>Announcement</Button>\n                    <Button variant={ this.state.category === \"Question\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Question\") }>Question</Button>\n                    <Button variant={ this.state.category === \"Opinion\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Opinion\") }>Opinion</Button>\n                  </ButtonGroup>\n                  <br></br>\n                  <br></br>\n                  <TextField\n                    value={ this.state.content }\n                    onChange={ this.handleInputChange }\n                    multiline\n                    rows=\"5\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    name=\"content\"\n                    label=\"Say something here...\"\n                    fullWidth\n                  />\n                </CardContent>\n\n                <CardActions>\n                  <Button onClick={ this.handleClose } color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={ () => this.addPost(username) } color=\"primary\" disabled={ this.state.title !== \"\" && this.state.content !== \"\" && this.state.category !== \"\" ? false : true}>\n                    Post\n                  </Button>\n                </CardActions>\n              </React.Fragment>\n              : null }\n              \n            </Card>\n              \n            <List className={ classes.forumList }>\n              { this.state.posts.map((thread) => {\n                  if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n                    return (\n                      <div>\n                        <ForumListItem postTitle={ thread.title }\n                                      postAuthor={ thread.author }\n                                      postAuthorUsertype={ thread.authorUsertype}\n                                      postTextContent={ thread.content }\n                                      avatar={ thread.authorAvatar }\n                                      category={ thread.category }\n                                      comments={ thread.comments }\n                                      postID={ thread.postID }\n                                      openManagePost={ this.state.openManagePost ? true : false }\n                                      numUpvotes={ thread.numUpvotes }\n                                      numDownvotes={ thread.numDownvotes }\n                                      userInfo={ this.state.userInfo }\n                                      addUpvote={ this.addUpvote }\n                                      minusUpvote={ this.minusUpvote }\n                                      addDownvote={ this.addDownvote }\n                                      minusDownvote={ this.minusDownvote }\n                                      deletePosts={ this.deletePosts }\n                                      postComment={ this.postComment }/>\n                        { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                      </div>\n                    )\n                  }\n                  else if (this.state.openManagePost ? this.state.postFilter === thread.category && thread.author === username : this.state.postFilter === thread.category) {\n                    return (\n                      <div>\n                        <ForumListItem postTitle={ thread.title }\n                                      postAuthor={ thread.author }\n                                      postAuthorUsertype={ thread.authorUsertype}\n                                      postTextContent={ thread.content }\n                                      avatar={ thread.authorAvatar }\n                                      category={ thread.category }\n                                      comments={ thread.comments }\n                                      postID={ thread.postID }\n                                      openManagePost={ this.state.openManagePost ? true : false }\n                                      numUpvotes={ thread.numUpvotes }\n                                      numDownvotes={ thread.numDownvotes }\n                                      userInfo={ this.state.userInfo }\n                                      addUpvote={ this.addUpvote }\n                                      minusUpvote={ this.minusUpvote }\n                                      addDownvote={ this.addDownvote }\n                                      minusDownvote={ this.minusDownvote }\n                                      deletePosts={ this.deletePosts }\n                                      postComment={ this.postComment }/>\n                        { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                      </div>\n                    )\n                  }\n                })\n              }\n            </List>\n          </Container>\n        </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ForumList);"]},"metadata":{},"sourceType":"module"}