{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react';\nimport Input from './Input';\nimport StockList from './StockList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Investments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalAmountInvested: 100,\n      ticker: 0,\n      quantity: 0,\n      price: 0,\n      avgCost: 0,\n      mktValue: 0,\n      bookCost: 0,\n      gainLoss: 0,\n      percentageOfPortfolio: 0,\n      stockList: [{\n        name: \"abc\",\n        quantity: 1,\n        price: 1.0,\n        avgCost: 1.0,\n        mktValue: 1,\n        bookCost: 100,\n        gainLoss: 0,\n        percentageOfPortfolio: 100\n      }]\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      console.log(this.state.bookCost);\n      console.log(\"this.state.totalAmountInvested\");\n      console.log(this.state.totalAmountInvested);\n      const stock = {\n        totalAmountInvested: this.state.totalAmountInvested,\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: this.state.bookCost,\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: this.state.bookCost / (this.state.bookCost + this.state.totalAmountInvested) * 100,\n        totalAmountInvested: this.totalAmountInvested + this.bookCost\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(currList);\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n      console.log(value);\n    };\n\n    this.deleteStock = stock => {\n      //make var because not mutating this \n      console.log(\"Delete\");\n      const filteredStock = this.state.stockList.filter(s => {\n        return s !== stock; //the one's we don't want to remove\n      });\n      this.setState({\n        stockList: filteredStock\n      });\n    };\n\n    this.editStock = (stock, valueToEdit) => {\n      console.log(\"Editing stock\");\n      console.log(stock);\n      console.log(\"Value\");\n      console.log(valueToEdit);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        stockList: this.state.stockList,\n        handleInputStock: this.handleInputStock,\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StockList, {\n        stockList: this.state.stockList,\n        deleteStock: this.deleteStock,\n        editStock: this.editStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","Input","StockList","Investments","Component","state","totalAmountInvested","ticker","quantity","price","avgCost","mktValue","bookCost","gainLoss","percentageOfPortfolio","stockList","name","handleInputStock","console","log","stock","currList","push","setState","handleInputChange","event","target","value","deleteStock","filteredStock","filter","s","editStock","valueToEdit","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport StockList from './StockList'\n\nclass Investments extends React.Component {\n\n  state = {\n    totalAmountInvested: 100,\n    ticker: 0,\n    quantity: 0,\n    price: 0,\n    avgCost: 0,\n    mktValue: 0,\n    bookCost: 0,\n    gainLoss: 0,\n    percentageOfPortfolio:0,\n    stockList: [{name: \"abc\", quantity: 1, price: 1.0, avgCost: 1.0, mktValue: 1, bookCost: 100, gainLoss:0, percentageOfPortfolio:100 }],\n  }\n\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    console.log(this.state.bookCost)\n    console.log(\"this.state.totalAmountInvested\")\n\n    console.log(this.state.totalAmountInvested)\n    const stock = {\n      totalAmountInvested: this.state.totalAmountInvested,\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: this.state.bookCost,\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:(this.state.bookCost/(this.state.bookCost+this.state.totalAmountInvested))*100,\n      totalAmountInvested: this.totalAmountInvested+this.bookCost\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n    console.log(currList)\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n    console.log(value);\n  }\n\n\n    //student is the object to reference\n  deleteStock = (stock) => {\n    //make var because not mutating this \n    console.log(\"Delete\")\n    const filteredStock = this.state.stockList.filter((s) => {\n      return s !== stock  //the one's we don't want to remove\n    })\n\n    this.setState({\n      stockList: filteredStock\n    })\n  }\n\n  editStock = (stock, valueToEdit) => {\n\n    console.log(\"Editing stock\")\n    console.log(stock)\n    console.log(\"Value\")\n    console.log(valueToEdit)\n    \n  }\n\n  render() {\n    return (\n\n      <div>\n      <Input stockList={this.state.stockList} \n      handleInputStock = {this.handleInputStock} \n      handleInputChange = {this.handleInputChange}\n      />\n      <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock} editStock = {this.editStock}/>\n      </div>\n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}