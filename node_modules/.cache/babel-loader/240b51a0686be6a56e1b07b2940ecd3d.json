{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      menuPosition: null,\n      initialInvestment: 0,\n      interestRate: 0,\n      yrsToGrow: 0,\n      compound: 0,\n      amount: 0\n    };\n\n    this.toggleDrawer = () => {\n      this.state.openDrawer = !this.state.openDrawer;\n      this.setState({\n        openDrawer: this.state.openDrawer\n      });\n    };\n  }\n\n  textFieldOnChangeHandler(e, headings, index) {\n    this.state.update[headings[index]] = e.target.value;\n    this.setState({\n      update: this.state.update\n    }); // if nothing is in the cell, put null error \n\n    if (e.target.value == \"\" || e.target.value === null) this.state.error[index] = null;else {\n      switch (this.props.options[index]) {\n        case \"Number\":\n        case \"Percentage\":\n          // error if input not a number, or less than 0 \n          if (!isNaN(e.target.value) && parseFloat(e.target.value) >= 0) this.state.error[index] = false;else this.state.error[index] = true;\n          break;\n\n        case \"Any\":\n          // I think description can be anything? \n          this.state.error[index] = false;\n          break;\n\n        case \"Select\":\n          this.state.error[index] = false;\n          break;\n\n        default:\n          throw \"Please specify a valid option.\";\n      }\n    }\n    this.setState({\n      error: this.state.error\n    });\n  } // handleClick = (event) => {\n  //     setAnchorEl(event.currentTarget);\n  // };\n\n\n  // handleClose = () => {\n  //     setAnchorEl(null);\n  // };\n  displayCompoundTypes(e) {\n    this.setState({\n      menuPosition: e.currentTarget\n    });\n  }\n\n  hideCompoundTypes() {\n    this.setState({\n      menuPosition: null\n    });\n  }\n\n  handleInitInvestment(e) {\n    console.log(e.target.value);\n    this.setState({\n      initialInvestment: e.target.value\n    });\n  }\n\n  handleInterestRate(e) {\n    console.log(e.target.value);\n    this.setState({\n      interestRate: e.target.value\n    });\n  }\n\n  handleYrsToGrow(e) {\n    console.log(e.target.value);\n    this.setState({\n      yrsToGrow: e.target.value\n    });\n  }\n\n  clickedMonthly(event) {\n    this.setState({\n      compound: 12\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedAnnually(event) {\n    this.setState({\n      compound: 1\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedQuarterly(event) {\n    this.setState({\n      compound: 4\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedSemiAnnually(event) {\n    this.setState({\n      compound: 2\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  calculateAmount() {\n    let insideBrackets = this.state.interestRate / 100 / this.state.compound + 1;\n    console.log(insideBrackets);\n    let appliedPower = Math.pow(insideBrackets, this.state.compound * this.state.yrsToGrow);\n    console.log(appliedPower);\n    let finalAmount = appliedPower * this.state.initialInvestment;\n    console.log(finalAmount);\n    this.setState({\n      amount: finalAmount.toFixed(2)\n    });\n  }\n\n  render() {\n    const {\n      compoundTypes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"CalculatorCard\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            component: \"h2\",\n            children: \"Investment Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Intial investment($):\",\n              defaultValue: \"0\",\n              margin: \"normal\",\n              onChange: e => this.handleInitInvestment(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Interest rate(%):\",\n              defaultValue: \"0\",\n              margin: \"normal\",\n              onChange: e => this.handleInterestRate(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Years to grow(yrs):\",\n              defaultValue: \"1\",\n              margin: \"normal\",\n              onChange: e => this.handleYrsToGrow(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              \"aria-label\": \"add\",\n              onClick: e => this.displayCompoundTypes(e),\n              children: [\"Compounding interval\", /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"long-menu\",\n              anchorEl: this.state.menuPosition,\n              open: Boolean(this.state.menuPosition),\n              onClose: () => this.hideCompoundTypes(),\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: e => this.clickedMonthly(e),\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: e => this.clickedQuarterly(e),\n                  children: \"Quarterly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: e => this.clickedSemiAnnually(e),\n                  children: \"Semi-annually\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: e => this.clickedAnnually(e),\n                  children: \"Annually\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              \"aria-label\": \"add\",\n              onClick: () => this.calculateAmount(),\n              children: \"Calculate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              InputProps: {\n                readOnly: true\n              },\n              label: \"Results($)\",\n              value: this.state.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js"],"names":["React","makeStyles","TextField","Card","CardContent","Button","Menu","MenuItem","Typography","AddCircleIcon","ThemeProvider","theme","createMuiTheme","palette","primary","main","deepPurple","secondary","typography","fontFamily","join","Calculator","Component","state","menuPosition","initialInvestment","interestRate","yrsToGrow","compound","amount","toggleDrawer","openDrawer","setState","textFieldOnChangeHandler","e","headings","index","update","target","value","error","props","options","isNaN","parseFloat","displayCompoundTypes","currentTarget","hideCompoundTypes","handleInitInvestment","console","log","handleInterestRate","handleYrsToGrow","clickedMonthly","event","anchorEl","clickedAnnually","clickedQuarterly","clickedSemiAnnually","calculateAmount","insideBrackets","appliedPower","Math","pow","finalAmount","toFixed","render","compoundTypes","Boolean","readOnly"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAGA,MAAMC,KAAK,GAAGC,cAAc,CAAC;AACzBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAEC,UAAU,CAAC,GAAD;AADX,KADJ;AAILC,IAAAA,SAAS,EAAE;AACPF,MAAAA,IAAI,EAAEC,UAAU,CAAC,GAAD;AADT;AAJN,GADgB;AASzBE,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,CACR,SADQ,EAER,YAFQ,EAGVC,IAHU,CAGL,GAHK;AADJ;AATa,CAAD,CAA5B;;AAkBA,MAAMC,UAAN,SAAyBrB,KAAK,CAACsB,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,iBAAiB,EAAE,CAFf;AAGJC,MAAAA,YAAY,EAAE,CAHV;AAIJC,MAAAA,SAAS,EAAE,CAJP;AAKJC,MAAAA,QAAQ,EAAE,CALN;AAMJC,MAAAA,MAAM,EAAE;AANJ,KAF4B;;AAAA,SAgDpCC,YAhDoC,GAgDrB,MAAM;AACjB,WAAKP,KAAL,CAAWQ,UAAX,GAAwB,CAAC,KAAKR,KAAL,CAAWQ,UAApC;AACA,WAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAE,KAAKR,KAAL,CAAWQ;AAAzB,OAAd;AACH,KAnDmC;AAAA;;AAWpCE,EAAAA,wBAAwB,CAACC,CAAD,EAAIC,QAAJ,EAAcC,KAAd,EAAqB;AAEzC,SAAKb,KAAL,CAAWc,MAAX,CAAkBF,QAAQ,CAACC,KAAD,CAA1B,IAAqCF,CAAC,CAACI,MAAF,CAASC,KAA9C;AACA,SAAKP,QAAL,CAAc;AAAEK,MAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWc;AAArB,KAAd,EAHyC,CAKzC;;AACA,QAAIH,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB,EAAlB,IAAwBL,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,IAA/C,EAAqD,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBJ,KAAjB,IAA0B,IAA1B,CAArD,KAEK;AACD,cAAQ,KAAKK,KAAL,CAAWC,OAAX,CAAmBN,KAAnB,CAAR;AAEI,aAAK,QAAL;AACA,aAAK,YAAL;AACI;AACA,cAAI,CAACO,KAAK,CAACT,CAAC,CAACI,MAAF,CAASC,KAAV,CAAN,IAA0BK,UAAU,CAACV,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV,IAA8B,CAA5D,EAA+D,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBJ,KAAjB,IAA0B,KAA1B,CAA/D,KACK,KAAKb,KAAL,CAAWiB,KAAX,CAAiBJ,KAAjB,IAA0B,IAA1B;AACL;;AACJ,aAAK,KAAL;AACI;AACA,eAAKb,KAAL,CAAWiB,KAAX,CAAiBJ,KAAjB,IAA0B,KAA1B;AACA;;AACJ,aAAK,QAAL;AACI,eAAKb,KAAL,CAAWiB,KAAX,CAAiBJ,KAAjB,IAA0B,KAA1B;AACA;;AACJ;AACI,gBAAO,gCAAP;AAhBR;AAmBH;AAED,SAAKJ,QAAL,CAAc;AAAEQ,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB;AAApB,KAAd;AACH,GA1CmC,CA4CpC;AACA;AACA;;;AAMA;AACA;AACA;AAEAK,EAAAA,oBAAoB,CAACX,CAAD,EAAI;AACpB,SAAKF,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAEU,CAAC,CAACY;AAAlB,KAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACH;;AAEDwB,EAAAA,oBAAoB,CAACd,CAAD,EAAG;AACnBe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACI,MAAF,CAASC,KAArB;AACA,SAAKP,QAAL,CAAc;AACVP,MAAAA,iBAAiB,EAAES,CAAC,CAACI,MAAF,CAASC;AADlB,KAAd;AAGH;;AAEDY,EAAAA,kBAAkB,CAACjB,CAAD,EAAG;AACjBe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACI,MAAF,CAASC,KAArB;AACA,SAAKP,QAAL,CAAc;AACVN,MAAAA,YAAY,EAAEQ,CAAC,CAACI,MAAF,CAASC;AADb,KAAd;AAGH;;AACDa,EAAAA,eAAe,CAAClB,CAAD,EAAG;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACI,MAAF,CAASC,KAArB;AACA,SAAKP,QAAL,CAAc;AACVL,MAAAA,SAAS,EAAEO,CAAC,CAACI,MAAF,CAASC;AADV,KAAd;AAGH;;AAEDc,EAAAA,cAAc,CAACC,KAAD,EAAO;AACjB,SAAKtB,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGA,SAAK2B,QAAL,GAAgB,IAAhB;AACA,SAAKhC,KAAL,CAAWC,YAAX,GAA0B,IAA1B;AACH;;AAEDgC,EAAAA,eAAe,CAACF,KAAD,EAAO;AAClB,SAAKtB,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGA,SAAK2B,QAAL,GAAgB,IAAhB;AACA,SAAKhC,KAAL,CAAWC,YAAX,GAA0B,IAA1B;AACH;;AAEDiC,EAAAA,gBAAgB,CAACH,KAAD,EAAO;AACnB,SAAKtB,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGA,SAAK2B,QAAL,GAAgB,IAAhB;AACA,SAAKhC,KAAL,CAAWC,YAAX,GAA0B,IAA1B;AACH;;AAEDkC,EAAAA,mBAAmB,CAACJ,KAAD,EAAO;AACtB,SAAKtB,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGA,SAAK2B,QAAL,GAAgB,IAAhB;AACA,SAAKhC,KAAL,CAAWC,YAAX,GAA0B,IAA1B;AACH;;AAEDmC,EAAAA,eAAe,GAAE;AACb,QAAIC,cAAc,GAAK,KAAKrC,KAAL,CAAWG,YAAX,GAAwB,GAAzB,GAA+B,KAAKH,KAAL,CAAWK,QAA3C,GAAwD,CAA7E;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYU,cAAZ;AACA,QAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASH,cAAT,EAAwB,KAAKrC,KAAL,CAAWK,QAAX,GAAsB,KAAKL,KAAL,CAAWI,SAAzD,CAAnB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYW,YAAZ;AACA,QAAIG,WAAW,GAAGH,YAAY,GAAE,KAAKtC,KAAL,CAAWE,iBAA3C;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYc,WAAZ;AACA,SAAKhC,QAAL,CAAc;AACVH,MAAAA,MAAM,EAAEmC,WAAW,CAACC,OAAZ,CAAoB,CAApB;AADE,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAkB,KAAK1B,KAA7B;AACA,wBACA,QAAC,aAAD;AAAe,MAAA,KAAK,EAAG9B,KAAvB;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAG,gBAAlB;AAAmC,QAAA,OAAO,EAAC,UAA3C;AAAsD,QAAA,KAAK,EAAG,WAA9D;AAAA,+BACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAM,YAAA,UAAU,MAAhB;AAAiB,YAAA,YAAY,EAAC,KAA9B;AAAA,oCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,gBAAd;AAA+B,cAAA,KAAK,EAAG,uBAAvC;AAA+D,cAAA,YAAY,EAAG,GAA9E;AACC,cAAA,MAAM,EAAC,QADR;AACkB,cAAA,QAAQ,EAAKuB,CAAD,IAAO,KAAKc,oBAAL,CAA0Bd,CAA1B;AADrC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,gBAAd;AAA+B,cAAA,KAAK,EAAC,mBAArC;AAAyD,cAAA,YAAY,EAAG,GAAxE;AACA,cAAA,MAAM,EAAC,QADP;AACgB,cAAA,QAAQ,EAAKA,CAAD,IAAO,KAAKiB,kBAAL,CAAwBjB,CAAxB;AADnC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAMI;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,gBAAd;AAA+B,cAAA,KAAK,EAAC,qBAArC;AAA2D,cAAA,YAAY,EAAG,GAA1E;AACA,cAAA,MAAM,EAAC,QADP;AACgB,cAAA,QAAQ,EAAKA,CAAD,IAAO,KAAKkB,eAAL,CAAqBlB,CAArB;AADnC;AAAA;AAAA;AAAA;AAAA,oBAPJ,eASI;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,4BAAW,KAAtC;AAA4C,cAAA,OAAO,EAAGA,CAAD,IAAO,KAAKW,oBAAL,CAA0BX,CAA1B,CAA5D;AAAA,8DAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAeQ,QAAC,IAAD;AACI,cAAA,EAAE,EAAC,WADP;AAEI,cAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,YAFzB;AAGI,cAAA,IAAI,EAAE4C,OAAO,CAAC,KAAK7C,KAAL,CAAWC,YAAZ,CAHjB;AAII,cAAA,OAAO,EAAE,MAAM,KAAKuB,iBAAL,EAJnB;AAAA,qCAMA,QAAC,QAAD;AAAA,wCACI,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAGb,CAAD,IAAK,KAAKmB,cAAL,CAAoBnB,CAApB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAGA,CAAD,IAAK,KAAKuB,gBAAL,CAAsBvB,CAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAGA,CAAD,IAAK,KAAKwB,mBAAL,CAAyBxB,CAAzB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAGA,CAAD,IAAK,KAAKsB,eAAL,CAAqBtB,CAArB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,oBAfR,eA4BI;AAAA;AAAA;AAAA;AAAA,oBA5BJ,eA6BI;AAAA;AAAA;AAAA;AAAA,oBA7BJ,eA8BI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,4BAAW,KAAtC;AAA4C,cAAA,OAAO,EAAE,MAAM,KAAKyB,eAAL,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BJ,eAiCI;AAAA;AAAA;AAAA;AAAA,oBAjCJ,eAkCI;AAAA;AAAA;AAAA;AAAA,oBAlCJ,eAmCI,QAAC,SAAD;AAAW,cAAA,UAAU,EAAE;AAACU,gBAAAA,QAAQ,EAAE;AAAX,eAAvB;AAA0C,cAAA,KAAK,EAAG,YAAlD;AACI,cAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWM;AADtB;AAAA;AAAA;AAAA;AAAA,oBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAmDH;;AArLmC;;AAyLxC,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: deepPurple[800],\n        },\n        secondary: {\n            main: deepPurple[100],\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Poppins',\n            'sans-serif',\n        ].join(','),\n    },\n  });\n\n\nclass Calculator extends React.Component{\n    \n    state = {\n        menuPosition: null,\n        initialInvestment: 0,\n        interestRate: 0,\n        yrsToGrow: 0,\n        compound: 0,\n        amount: 0,\n    }\n\n    textFieldOnChangeHandler(e, headings, index) {\n\n        this.state.update[headings[index]] = e.target.value\n        this.setState({ update: this.state.update })\n\n        // if nothing is in the cell, put null error \n        if (e.target.value == \"\" || e.target.value === null) this.state.error[index] = null\n\n        else {\n            switch (this.props.options[index]) {\n\n                case \"Number\":\n                case \"Percentage\":\n                    // error if input not a number, or less than 0 \n                    if (!isNaN(e.target.value) && parseFloat(e.target.value) >= 0) this.state.error[index] = false\n                    else this.state.error[index] = true\n                    break\n                case \"Any\":\n                    // I think description can be anything? \n                    this.state.error[index] = false\n                    break\n                case \"Select\":\n                    this.state.error[index] = false\n                    break\n                default:\n                    throw (\"Please specify a valid option.\")\n\n            }\n        }\n\n        this.setState({ error: this.state.error })\n    }\n\n    // handleClick = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    toggleDrawer = () => {\n        this.state.openDrawer = !this.state.openDrawer\n        this.setState({ openDrawer: this.state.openDrawer })\n    }\n    // handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    displayCompoundTypes(e) {\n        this.setState({ menuPosition: e.currentTarget })\n    }\n    \n    hideCompoundTypes() {\n        this.setState({ menuPosition: null })\n    }\n    \n    handleInitInvestment(e){\n        console.log(e.target.value)\n        this.setState({\n            initialInvestment: e.target.value\n        })\n    }\n\n    handleInterestRate(e){\n        console.log(e.target.value)\n        this.setState({\n            interestRate: e.target.value\n        })\n    }\n    handleYrsToGrow(e){\n        console.log(e.target.value)\n        this.setState({\n            yrsToGrow: e.target.value\n        })\n    }\n    \n    clickedMonthly(event){\n        this.setState({\n            compound: 12\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedAnnually(event){\n        this.setState({\n            compound: 1\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedQuarterly(event){\n        this.setState({\n            compound: 4\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedSemiAnnually(event){\n        this.setState({\n            compound: 2\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    calculateAmount(){\n        let insideBrackets = ((this.state.interestRate/100)/(this.state.compound)) + 1;\n        console.log(insideBrackets);\n        let appliedPower = Math.pow(insideBrackets,this.state.compound * this.state.yrsToGrow);\n        console.log(appliedPower);\n        let finalAmount = appliedPower* this.state.initialInvestment;\n        console.log(finalAmount)\n        this.setState({\n            amount: finalAmount.toFixed(2)\n        })\n    }\n\n    render(){\n        const {compoundTypes} = this.props;\n        return(\n        <ThemeProvider theme={ theme }>\n        <Card className = \"CalculatorCard\" variant=\"outlined\" color = \"secondary\"> \n            <CardContent>\n                <Typography variant=\"h3\" component=\"h2\">\n                    Investment Calculator\n                </Typography>\n                <br/>\n                <form noValidate autoComplete=\"off\">\n                    <TextField id=\"standard-basic\" label = \"Intial investment($):\" defaultValue = \"0\" \n                     margin=\"normal\"  onChange = {(e) => this.handleInitInvestment(e)}/>\n                    <br/>\n                    <TextField id=\"standard-basic\" label=\"Interest rate(%):\" defaultValue = \"0\" \n                    margin=\"normal\" onChange = {(e) => this.handleInterestRate(e)}/>\n                    <br/>\n                    <TextField id=\"standard-basic\" label=\"Years to grow(yrs):\" defaultValue = \"1\" \n                    margin=\"normal\" onChange = {(e) => this.handleYrsToGrow(e)}/>\n                    <br/>\n                    <br/>\n                    <Button variant=\"outlined\" aria-label=\"add\" onClick={(e) => this.displayCompoundTypes(e)}>\n                        Compounding interval\n                        <AddCircleIcon/>\n                    </Button>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={this.state.menuPosition}\n                            open={Boolean(this.state.menuPosition)}\n                            onClose={() => this.hideCompoundTypes()}\n                        >\n                        <MenuItem >\n                            <MenuItem onClick={(e)=>this.clickedMonthly(e)}>Monthly</MenuItem>\n                            <MenuItem onClick={(e)=>this.clickedQuarterly(e)}>Quarterly</MenuItem>\n                            <MenuItem onClick={(e)=>this.clickedSemiAnnually(e)}>Semi-annually</MenuItem>\n                            <MenuItem onClick={(e)=>this.clickedAnnually(e)}>Annually</MenuItem>\n                        </MenuItem>\n                    </Menu>\n                    <br/>\n                    <br/>\n                    <Button variant=\"outlined\" aria-label=\"add\" onClick={() => this.calculateAmount()}>\n                        Calculate\n                    </Button>\n                    <br/>\n                    <br/>\n                    <TextField InputProps={{readOnly: true,}} label = \"Results($)\"\n                        value={this.state.amount}\n                    />\n                </form>\n            </CardContent>\n        </Card>\n        </ThemeProvider>\n        )\n    }\n}\n\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}