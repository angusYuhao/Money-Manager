{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/index.js\";\nimport React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Redirect } from 'react-router';\nimport ForumList from \"./forumList.js\";\nimport Sidebar from \"./sidebar.js\";\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'; // styles definiton\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  sidebar: {\n    flexShrink: 0\n  },\n  sidebarButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 100,\n    left: 30,\n    margin: '0 auto'\n  }\n}); // theme definition\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n}); // class definition\n\nclass Community extends React.Component {\n  // ===state===\n  // tempFAInfo: stores information about registered Financial Advisor, this will be fetched from a database\n  // userInfo: stores information about the current user, this is constructed when the class is mounted\n  // openSidebar: flag for opening the side bar\n  // sidebarToggle: determines which side bar option is selected\n  // constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempFAInfo: [{\n        FAName: \"Angus Wang\",\n        FAIntro: \"I am Angus Wang. I am here to guide you to treasures you'll never find yourself.\",\n        FAFields: [\"Stocks\", \"Budget Planning\", \"Life Hacks\"],\n        FAPoints: 123\n      }, {\n        FAName: \"Angela Merkel\",\n        FAIntro: \"I am Angela Merkel, the chancellor of Germany. I post stuff about the EU on here sometimes.\",\n        FAFields: [\"Politics\", \"Nation Building\"],\n        FAPoints: 456\n      }, {\n        FAName: \"Bill Gates\",\n        FAIntro: \"I am Bill Gates. I won't say much here because my name says it all\",\n        FAFields: [\"Programming\", \"Company Building\"],\n        FAPoints: 789\n      }],\n      userInfo: {\n        username: \"\",\n        usertype: \"\",\n        userUpvotedPosts: [],\n        userDownvotedPosts: [],\n        userSavedPosts: [],\n        userFollows: []\n      },\n      openSidebar: false,\n      sidebarToggle: \"Home\"\n    };\n\n    this.openSidebar = () => {\n      this.setState({\n        openSidebar: true\n      });\n    };\n\n    this.closeSidebar = () => {\n      this.setState({\n        openSidebar: false\n      });\n    };\n\n    this.handleSidebarToggle = toggle => {\n      this.setState({\n        sidebarToggle: toggle\n      });\n    };\n\n    this.userInfoUpdater = this.userInfoUpdater.bind(this);\n  } // construct the userInfo state variable (info is passed as a prop)\n\n\n  componentDidMount() {\n    let usertype = \"\";\n    if (this.props.usertype === \"Financial Advisor\") usertype = \"FA\";else usertype = \"RU\";\n    const newUserInfo = {\n      username: this.props.username,\n      usertype: usertype,\n      userUpvotedPosts: [],\n      userDownvotedPosts: [],\n      userSavedPosts: [],\n      userFollows: []\n    };\n    this.setState({\n      userInfo: newUserInfo\n    });\n  } // called in children components to update the userInfo state in this component\n\n\n  userInfoUpdater(newUserInfo) {\n    this.setState({\n      userInfo: newUserInfo\n    });\n  } // called to open the side bar\n\n\n  // render function\n  render() {\n    // pass in relevant information as props\n    const {\n      classes,\n      username,\n      usertype,\n      loggedIn\n    } = this.props;\n    return loggedIn ? /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        classNmae: classes.sidebar,\n        openSidebar: this.openSidebar,\n        closeSidebar: this.closeSidebar,\n        handleSidebarToggle: this.handleSidebarToggle,\n        open: this.state.openSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"More Page Options\",\n        className: classes.sidebarButton,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          size: \"medium\",\n          onClick: this.openSidebar,\n          children: /*#__PURE__*/_jsxDEV(MenuOpenIcon, {\n            fontSize: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(ForumList, {\n          userInfo: this.state.userInfo,\n          FAInfo: this.state.tempFAInfo,\n          sidebarToggle: this.state.sidebarToggle,\n          userInfoUpdater: this.userInfoUpdater\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 26\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Community);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/index.js"],"names":["React","createMuiTheme","ThemeProvider","deepPurple","withStyles","Redirect","ForumList","Sidebar","Grid","Fab","Tooltip","MenuOpenIcon","useStyles","theme","root","display","content","flexGrow","padding","spacing","sidebar","flexShrink","sidebarButton","position","zIndex","top","left","margin","palette","primary","main","secondary","typography","fontFamily","join","Community","Component","constructor","props","state","tempFAInfo","FAName","FAIntro","FAFields","FAPoints","userInfo","username","usertype","userUpvotedPosts","userDownvotedPosts","userSavedPosts","userFollows","openSidebar","sidebarToggle","setState","closeSidebar","handleSidebarToggle","toggle","userInfoUpdater","bind","componentDidMount","newUserInfo","render","classes","loggedIn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Redirect } from 'react-router';\n\nimport ForumList from \"./forumList.js\"\nimport Sidebar from \"./sidebar.js\"\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\n\n// styles definiton\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebar: {\n    flexShrink: 0,\n  },\n  sidebarButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 100,\n    left: 30,\n    margin: '0 auto',\n  }\n});\n\n// theme definition\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\n// class definition\nclass Community extends React.Component {\n\n  // ===state===\n  // tempFAInfo: stores information about registered Financial Advisor, this will be fetched from a database\n  // userInfo: stores information about the current user, this is constructed when the class is mounted\n  // openSidebar: flag for opening the side bar\n  // sidebarToggle: determines which side bar option is selected\n  state = {\n    tempFAInfo: [\n      {FAName: \"Angus Wang\",\n        FAIntro: \"I am Angus Wang. I am here to guide you to treasures you'll never find yourself.\",\n        FAFields: [\"Stocks\", \"Budget Planning\", \"Life Hacks\"],\n        FAPoints: 123,\n      },\n      {FAName: \"Angela Merkel\",\n        FAIntro: \"I am Angela Merkel, the chancellor of Germany. I post stuff about the EU on here sometimes.\",\n        FAFields: [\"Politics\", \"Nation Building\"],\n        FAPoints: 456,\n      },\n      {FAName: \"Bill Gates\",\n        FAIntro: \"I am Bill Gates. I won't say much here because my name says it all\",\n        FAFields: [\"Programming\", \"Company Building\"],\n        FAPoints: 789,\n      }\n    ],\n    userInfo: {\n      username: \"\",\n      usertype: \"\",\n      userUpvotedPosts: [],\n      userDownvotedPosts: [],\n      userSavedPosts: [],\n      userFollows: [],\n    },\n    openSidebar: false,\n    sidebarToggle: \"Home\",\n  }\n\n  // constructor\n  constructor(props) {\n    super(props)\n\n    this.userInfoUpdater = this.userInfoUpdater.bind(this)\n  }\n\n  // construct the userInfo state variable (info is passed as a prop)\n  componentDidMount() {\n\n    let usertype = \"\"\n    if (this.props.usertype === \"Financial Advisor\") usertype = \"FA\"\n    else usertype = \"RU\"\n\n    const newUserInfo = {\n      username: this.props.username,\n      usertype: usertype,\n      userUpvotedPosts: [],\n      userDownvotedPosts: [],\n      userSavedPosts: [],\n      userFollows: [],\n    }\n\n    this.setState({ userInfo: newUserInfo })\n  }\n\n  // called in children components to update the userInfo state in this component\n  userInfoUpdater(newUserInfo) {\n\n    this.setState({ userInfo: newUserInfo })\n  }\n\n  // called to open the side bar\n  openSidebar = () => {\n\n    this.setState({ openSidebar: true })\n  }\n\n  // called to close the side bar\n  closeSidebar = () => {\n\n    this.setState({ openSidebar: false })\n  }\n\n  // called when the user makes a selection in the side bar\n  handleSidebarToggle = (toggle) => {\n\n    this.setState({ sidebarToggle: toggle })\n  }\n\n  // render function\n  render() {\n\n    // pass in relevant information as props\n    const { classes, username, usertype, loggedIn } = this.props\n\n    return (\n\n      loggedIn ? \n      <ThemeProvider theme={ theme } className={ classes.root }>\n\n        {/* {side bar component} */}\n        <Sidebar classNmae={ classes.sidebar }\n                  openSidebar={ this.openSidebar }\n                  closeSidebar={ this.closeSidebar }\n                  handleSidebarToggle={ this.handleSidebarToggle }\n                  open={ this.state.openSidebar }/>\n        \n        {/* {button to open side bar} */}\n        <Tooltip title=\"More Page Options\" className={ classes.sidebarButton }>\n          <Fab color=\"primary\" size=\"medium\" onClick={ this.openSidebar }>\n            <MenuOpenIcon fontSize=\"default\" />\n          </Fab>\n        </Tooltip>\n\n        {/* {main forum header and list} */}\n        <Grid container className={ classes.content }>\n          <ForumList userInfo={ this.state.userInfo }\n                    FAInfo={ this.state.tempFAInfo }\n                    sidebarToggle={ this.state.sidebarToggle }\n                    userInfoUpdater={ this.userInfoUpdater }/>\n        </Grid>\n\n      </ThemeProvider> : <Redirect to=\"/login\" />\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Community);\n"]},"metadata":{},"sourceType":"module"}