{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/team06/src/components/Profile/forumListItemOld.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple, grey, green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Comment from \"./../Community/comment.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  closePostButton: {\n    backgroundColor: deepPurple[500] // borderRadius: 5,\n\n  },\n  blackText: {\n    color: '#000000'\n  },\n  redText: {\n    color: '#dd0000'\n  },\n  upvoteText: {\n    color: '#aaaaaa'\n  },\n  checkCircle: {\n    color: green[500]\n  },\n  financialAdvisorTag: {\n    color: '#ffffff',\n    backgroundColor: green[500]\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass ForumListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postID: null,\n      openPost: false,\n      comment: \"\",\n      upvoted: false,\n      downvoted: false,\n      spaces: \"     \"\n    };\n\n    this.openPost = () => {\n      this.setState({\n        openPost: true\n      }, () => this.prepareOpenPost());\n    };\n\n    this.prepareOpenPost = () => {\n      const userInfo = this.props.userInfo;\n      userInfo.userUpvotedPosts.includes(this.state.postID) ? this.setState({\n        upvoted: true\n      }) : this.setState({\n        upvoted: false\n      });\n      userInfo.userDownvotedPosts.includes(this.state.postID) ? this.setState({\n        downvoted: true\n      }) : this.setState({\n        downvoted: false\n      });\n    };\n\n    this.closePost = () => {\n      this.setState({\n        openPost: false\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handlePostComment = () => {\n      this.props.postComment(this.state);\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.toggleUpvote = () => {\n      // clean up downvote\n      if (this.state.downvoted === true) {\n        this.setState({\n          downvoted: false\n        });\n        this.props.minusDownvote(this.state);\n      }\n\n      if (this.state.upvoted === false) {\n        this.setState({\n          upvoted: true\n        });\n        this.props.addUpvote(this.state);\n      } else {\n        this.setState({\n          upvoted: false\n        });\n        this.props.minusUpvote(this.state);\n      }\n    };\n\n    this.toggleDownvote = () => {\n      // clean up upvote\n      if (this.state.upvoted === true) {\n        this.setState({\n          upvoted: false\n        });\n        this.props.minusUpvote(this.state);\n      }\n\n      if (this.state.downvoted === false) {\n        this.setState({\n          downvoted: true\n        });\n        this.props.addDownvote(this.state);\n      } else {\n        this.setState({\n          downvoted: false\n        });\n        this.props.minusDownvote(this.state);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      postID: this.props.postID\n    }, () => this.prepareOpenPost(), () => this.forceUpdate());\n  }\n\n  componentDidUpdate() {\n    if (this.state.postID !== this.props.postID) this.setState({\n      postID: this.props.postID\n    }, () => this.prepareOpenPost());\n  }\n\n  render() {\n    const {\n      classes,\n      avatar,\n      postTitle,\n      postAuthor,\n      postTextContent,\n      category,\n      comments,\n      postComment,\n      deletePosts,\n      openManagePost,\n      numUpvotes,\n      numDownvotes,\n      postAuthorUsertype\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        button: \"true\",\n        onClick: openManagePost ? null : this.openPost,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [postTitle, \" :: \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", postAuthor, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                className: classes.checkCircle,\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n                color: this.state.upvoted ? \"primary\" : '#dddddd',\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.upvoteText,\n              children: [numUpvotes, \" : \", numDownvotes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ThumbDownAltIcon, {\n                color: this.state.downvoted ? \"primary\" : '#dddddd',\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), openManagePost ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.openPost,\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 32\n        }, this) : null, openManagePost ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => deletePosts(this.state),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 32\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openPost,\n        onClose: this.closePost,\n        \"aria-labelledby\": \"form-dialog-title\",\n        fullScreen: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n          className: classes.closePostButton,\n          children: [postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(Button, {\n            disabled: true,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: this.handleOpenFAInfo,\n            children: \"View Financial Advisor Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              color: \"secondary\",\n              size: \"small\",\n              onClick: this.closePost,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: category,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), \" :: \", postTitle, \" ::\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", postAuthor, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.financialAdvisorTag,\n            label: \"Financial Advisor\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(IconButton, {\n            color: this.state.upvoted ? \"primary\" : \"secondary\",\n            component: \"span\",\n            onClick: this.toggleUpvote,\n            children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numUpvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: this.state.downvoted ? \"primary\" : \"secondary\",\n            component: \"span\",\n            onClick: this.toggleDownvote,\n            children: /*#__PURE__*/_jsxDEV(ThumbDownAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numDownvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            className: classes.blackText,\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n            className: classes.blackText,\n            children: \"Post a Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.comment,\n            onChange: this.handleInputChange,\n            multiline: true,\n            rows: \"3\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"comment\",\n            label: \"Say something...\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: this.handlePostComment,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: comments.map(comment => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Comment, {\n                  commenter: comment.commenter,\n                  commentContent: comment.commentContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(ForumListItem);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/team06/src/components/Profile/forumListItemOld.js"],"names":["React","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Chip","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","Grid","Tooltip","Typography","Fab","createMuiTheme","ThemeProvider","deepPurple","grey","green","withStyles","ThumbUpAltIcon","ThumbDownAltIcon","CloseIcon","CheckCircleIcon","Comment","styles","theme","closePostButton","backgroundColor","blackText","color","redText","upvoteText","checkCircle","financialAdvisorTag","palette","primary","main","secondary","typography","fontFamily","join","ForumListItem","Component","state","postID","openPost","comment","upvoted","downvoted","spaces","setState","prepareOpenPost","userInfo","props","userUpvotedPosts","includes","userDownvotedPosts","closePost","handleInputChange","event","value","target","name","handlePostComment","postComment","toggleUpvote","minusDownvote","addUpvote","minusUpvote","toggleDownvote","addDownvote","componentDidMount","forceUpdate","componentDidUpdate","render","classes","avatar","postTitle","postAuthor","postTextContent","category","comments","deletePosts","openManagePost","numUpvotes","numDownvotes","postAuthorUsertype","handleOpenFAInfo","map","commenter","commentContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { deepPurple, grey, green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport Comment from \"./../Community/comment.js\"\n\nconst styles =  theme => ({\n  closePostButton: {\n    backgroundColor: deepPurple[500],\n    // borderRadius: 5,\n  },\n  blackText: {\n    color: '#000000',\n  },\n  redText: {\n    color: '#dd0000',\n  },\n  upvoteText: {\n    color: '#aaaaaa',\n  },\n  checkCircle: {\n    color: green[500]\n  },\n  financialAdvisorTag: {\n    color: '#ffffff',\n    backgroundColor: green[500]\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\nclass ForumListItem extends React.Component {\n\n    state = {\n      postID: null,\n      openPost: false,\n      comment: \"\",\n      upvoted: false,\n      downvoted: false,\n      spaces: \"     \",\n    }\n\n    componentDidMount() {\n      this.setState({ postID: this.props.postID }, () => this.prepareOpenPost(), () => this.forceUpdate())\n    }\n\n    componentDidUpdate() {\n      if (this.state.postID !== this.props.postID) this.setState({ postID: this.props.postID }, () => this.prepareOpenPost())      \n    }\n  \n    openPost = () => {\n      this.setState({ openPost: true }, () => this.prepareOpenPost())\n    }\n\n    prepareOpenPost = () => {\n      const userInfo = this.props.userInfo\n      userInfo.userUpvotedPosts.includes(this.state.postID) ? this.setState({ upvoted: true }) : this.setState({ upvoted: false })\n      userInfo.userDownvotedPosts.includes(this.state.postID) ? this.setState({ downvoted: true }) : this.setState({ downvoted: false })\n    }\n  \n    closePost = () => {\n      this.setState({ openPost: false })\n    }\n  \n    handleInputChange = (event) => {\n      const value = event.target.value\n      const name = event.target.name\n  \n      this.setState({\n        [name]: value\n      })\n    }\n\n    handlePostComment = () => {\n      this.props.postComment(this.state)\n      this.setState({ comment: \"\" })\n    }\n\n    toggleUpvote = () => {\n\n      // clean up downvote\n      if (this.state.downvoted === true) {\n        this.setState({ downvoted: false })\n        this.props.minusDownvote(this.state)\n      }\n\n      if (this.state.upvoted === false) {\n        this.setState({ upvoted: true })\n        this.props.addUpvote(this.state)\n      }\n      else {\n        this.setState({ upvoted: false })\n        this.props.minusUpvote(this.state)\n      }\n    }\n\n    toggleDownvote = () => {\n\n      // clean up upvote\n      if (this.state.upvoted === true) {\n        this.setState({ upvoted: false })\n        this.props.minusUpvote(this.state)\n      }\n\n      if (this.state.downvoted === false) {\n        this.setState({ downvoted: true })\n        this.props.addDownvote(this.state)\n      }\n      else {\n        this.setState({ downvoted: false })\n        this.props.minusDownvote(this.state)\n      }\n      \n    }\n  \n    render() {\n  \n      const { classes, avatar, postTitle, postAuthor, postTextContent, category, comments, postComment, \n              deletePosts, openManagePost, numUpvotes, numDownvotes, postAuthorUsertype } = this.props\n  \n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" button=\"true\" onClick={ openManagePost ? null : this.openPost }>\n            <ListItemAvatar>\n              <Avatar>{ avatar }</Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <span>{ postTitle } :: </span>\n                  <span> { postAuthor } </span>\n                  { postAuthorUsertype === \"FA\" ? \n                    <IconButton size=\"small\" component=\"span\" disabled>\n                      <CheckCircleIcon className={ classes.checkCircle } fontSize=\"small\" />\n                    </IconButton>\n                  : null }\n                  <IconButton size=\"small\" component=\"span\" disabled>\n                    <ThumbUpAltIcon color={ this.state.upvoted ? \"primary\" : '#dddddd'} fontSize=\"small\" />\n                  </IconButton>\n                  <span className={ classes.upvoteText }>{ numUpvotes } : { numDownvotes }</span>\n                  <IconButton size=\"small\" component=\"span\" disabled>\n                    <ThumbDownAltIcon color={ this.state.downvoted ? \"primary\" : '#dddddd'} fontSize=\"small\" />\n                  </IconButton>\n                </React.Fragment>\n              }\n              secondary={\n                <React.Fragment>\n                  { postTextContent }\n                </React.Fragment>\n              }\n            />\n            <Chip label={ category }/>\n            { openManagePost ? <Button variant=\"contained\" color=\"primary\" onClick={ this.openPost }>View</Button> : null }\n            { openManagePost ? <Button variant=\"contained\" color=\"primary\" onClick={ () => deletePosts(this.state) }>Delete</Button> : null }\n            \n          </ListItem>\n  \n          <Dialog open={ this.state.openPost } onClose={ this.closePost } aria-labelledby=\"form-dialog-title\" fullScreen>\n\n            <DialogActions className={ classes.closePostButton }>\n              { postAuthorUsertype === \"FA\" ? \n                <Button disabled variant=\"contained\" color=\"secondary\" onClick={ this.handleOpenFAInfo }>\n                  View Financial Advisor Info\n                </Button>\n              : null }\n              <Tooltip title=\"Close\">\n                <Fab color=\"secondary\" size=\"small\" onClick={ this.closePost }>\n                  <CloseIcon fontSize=\"default\" />\n                </Fab>\n              </Tooltip>\n            </DialogActions>\n            \n            <DialogTitle id=\"form-dialog-title\">\n              <Chip label={ category } size=\"small\"/> :: { postTitle } :: \n              <span> { postAuthor } </span>\n              { postAuthorUsertype === \"FA\" ? \n                <Chip className={ classes.financialAdvisorTag } label={ \"Financial Advisor\" } size=\"small\"/>\n              : null }\n              <IconButton color={ this.state.upvoted ? \"primary\" : \"secondary\" } component=\"span\" onClick={ this.toggleUpvote }>\n                <ThumbUpAltIcon />\n              </IconButton>\n              <span>{ numUpvotes }</span>\n              <IconButton color={ this.state.downvoted ? \"primary\" : \"secondary\" } component=\"span\" onClick={ this.toggleDownvote }>\n                <ThumbDownAltIcon />\n              </IconButton>\n              <span>{ numDownvotes }</span>\n            </DialogTitle>\n\n            <DialogContent>\n              <DialogContentText className={ classes.blackText }>\n                { postTextContent }\n              </DialogContentText>\n              <Divider variant=\"fullWidth\" />\n              <br></br>\n              <DialogContentText className={ classes.blackText }>Post a Comment:</DialogContentText>\n              \n              <TextField\n                value={ this.state.comment }\n                onChange={ this.handleInputChange }\n                multiline\n                rows=\"3\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                name=\"comment\"\n                label=\"Say something...\"\n                fullWidth\n              />\n              <br></br>\n              <Button variant=\"outlined\" color=\"primary\" onClick={ this.handlePostComment }>\n                Post\n              </Button>\n              <br></br>\n              <br></br>\n              <Divider variant=\"fullWidth\" />\n  \n              <List>\n                {comments.map((comment) => {\n                    return (\n                      <div>\n                        <Comment commenter={ comment.commenter }\n                                 commentContent={ comment.commentContent }/>\n                        <Divider variant=\"inset\" component=\"li\" />\n                      </div>\n                    )\n                  }\n                )}\n              </List>\n              \n            </DialogContent>\n\n          </Dialog>\n        </div>\n      )\n    }\n  }\n\n  export default withStyles(styles)(ForumListItem);\n\n"]},"metadata":{},"sourceType":"module"}