{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react';\nimport Input from './Input';\nimport StockList from './StockList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Investments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ticker: 0,\n      quantity: 0,\n      price: 0,\n      avgCost: 0,\n      mktValue: 0,\n      bookCost: 0,\n      gainLoss: 0,\n      percentageOfPortfolio: 0,\n      stockList: [{\n        name: \"abc\",\n        quantity: 1,\n        price: 1.0,\n        avgCost: 1.0,\n        mktValue: 1,\n        bookCost: 2,\n        gainLoss: 0,\n        percentageOfPortfolio: 100\n      }]\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      const stock = {\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: this.state.bookCost,\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: this.state.percentageOfPortfolio\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(currList);\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n      console.log(value);\n    };\n\n    this.deleteStock = stock => {\n      //make var because not mutating this \n      console.log(\"Delete\");\n      const filteredStock = this.state.stockList.filter(s => {\n        return s !== stock; //the one's we don't want to remove\n      });\n      this.setState({\n        stockList: filteredStock\n      });\n    };\n\n    this.editValue = (stock, valueToEdit) => {\n      console.log(\"Editing stock\");\n      console.los(stock);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        stockList: this.state.stockList,\n        handleInputStock: this.handleInputStock,\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StockList, {\n        stockList: this.state.stockList,\n        deleteStock: this.deleteStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","Input","StockList","Investments","Component","state","ticker","quantity","price","avgCost","mktValue","bookCost","gainLoss","percentageOfPortfolio","stockList","name","handleInputStock","console","log","stock","currList","push","setState","handleInputChange","event","target","value","deleteStock","filteredStock","filter","s","editValue","valueToEdit","los","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport StockList from './StockList'\n\nclass Investments extends React.Component {\n\n  state = {\n    ticker: 0,\n    quantity: 0,\n    price: 0,\n    avgCost: 0,\n    mktValue: 0,\n    bookCost: 0,\n    gainLoss: 0,\n    percentageOfPortfolio:0,\n    stockList: [{name: \"abc\", quantity: 1, price: 1.0, avgCost: 1.0, mktValue: 1, bookCost: 2, gainLoss:0, percentageOfPortfolio:100 }],\n  }\n\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    const stock = {\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: this.state.bookCost,\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:this.state.percentageOfPortfolio\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n    console.log(currList)\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n    console.log(value);\n  }\n\n\n    //student is the object to reference\n  deleteStock = (stock) => {\n    //make var because not mutating this \n    console.log(\"Delete\")\n    const filteredStock = this.state.stockList.filter((s) => {\n      return s !== stock  //the one's we don't want to remove\n    })\n\n    this.setState({\n      stockList: filteredStock\n    })\n  }\n\n  editValue = (stock, valueToEdit) => {\n    console.log(\"Editing stock\")\n    console.los(stock)\n\n  }\n\n  render() {\n    return (\n\n      <div>\n      <Input stockList={this.state.stockList} \n      handleInputStock = {this.handleInputStock} \n      handleInputChange = {this.handleInputChange}\n      />\n      <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock}/>\n      </div>\n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}