{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Spendings/index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { withStyles } from '@material-ui/core';\nimport TableComp from '../Table';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from \"@material-ui/core/Divider\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './spendings.css';\nimport PieChart from '../Investments/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = () => ({\n  drawer_paper: {\n    position: \"relative\",\n    height: \"100%\"\n  },\n  menu_list: {\n    width: \"15vw\"\n  },\n  formControl_root: {\n    outline: \"none\",\n    minWidth: \"15vw\"\n  }\n});\n\nclass Spendings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sumAccountBalance = () => {\n      this.state.accountBalance = this.state.transactions_data.reduce((total, current) => {\n        let sum = parseFloat(total) + parseFloat(current[\"Amount\"]);\n        sum = sum.toFixed(2);\n        return sum;\n      }, 0);\n      this.setState({\n        accountBalance: this.state.accountBalance\n      });\n    };\n\n    this.sumCategoriesAmount = () => {\n      this.state.sumForCategories = [];\n      this.state.transactions_data.map(transaction => {\n        const category = transaction[\"Category\"];\n        let index = this.state.sumForCategories.findIndex(x => x.name == category);\n\n        if (index == -1) {\n          this.state.sumForCategories.push({\n            name: category,\n            bookCost: 0\n          });\n          index = this.state.sumForCategories.length - 1;\n        }\n\n        this.state.sumForCategories[index].bookCost += parseFloat(transaction[\"Amount\"]);\n      });\n      this.setState({\n        sumForCategories: this.state.sumForCategories\n      });\n    };\n\n    this.sortObj = (a, b) => {\n      switch (this.state.sortBy) {\n        case \"Date\":\n          if (!this.state.sortDes[\"Date\"]) {\n            if (a[\"Date\"] < b[\"Date\"]) return -1;else return 1;\n          } else {\n            if (a[\"Date\"] > b[\"Date\"]) return -1;else return 1;\n          }\n\n        case \"Amount\":\n          if (!this.state.sortDes[\"Amount\"]) {\n            if (parseFloat(a[\"Amount\"]) < parseFloat(b[\"Amount\"])) return -1;else return 1;\n          } else {\n            if (parseFloat(a[\"Amount\"]) > parseFloat(b[\"Amount\"])) return -1;else return 1;\n          }\n\n        case \"Category\":\n          if (!this.state.sortDes[\"Category\"]) {\n            if (a[\"Category\"] < b[\"Category\"]) return -1;else return 1;\n          } else {\n            if (a[\"Category\"] > b[\"Category\"]) return -1;else return 1;\n          }\n\n        case \"Default\":\n          return;\n      }\n    };\n\n    this.sortTransactions = () => {\n      this.state.transactions_data.sort(this.sortObj);\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n    };\n\n    this.addTransaction = newTransaction => {\n      this.state.transactions_data.unshift(newTransaction);\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n      this.sumAccountBalance();\n      this.sumCategoriesAmount();\n    };\n\n    this.editTransaction = (oldTransaction, newTransaction) => {\n      const index = this.state.transactions_data.findIndex(t => t === oldTransaction);\n      this.state.transactions_data[index] = newTransaction;\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n      this.sumAccountBalance();\n      this.sumCategoriesAmount();\n    };\n\n    this.deleteTransaction = transaction => {\n      const keepTransactions = this.state.transactions_data.filter(t => t !== transaction);\n      this.setState({\n        transactions_data: keepTransactions\n      });\n    };\n\n    this.addCategory = newCategory => {\n      if (!this.state.transactions_categories.includes(newCategory)) this.state.transactions_categories.push(newCategory);\n      this.setState({\n        transactions_categories: this.state.transactions_categories\n      });\n    };\n\n    this.deleteCategory = category => {\n      const keepCategories = this.state.transactions_categories.filter(c => c !== category);\n      this.setState({\n        transactions_categories: keepCategories\n      });\n    };\n\n    this.toggleDrawer = () => {\n      this.state.openDrawer = !this.state.openDrawer;\n      this.setState({\n        openDrawer: this.state.openDrawer\n      });\n    };\n\n    this.hideAddNewMonth = () => {\n      this.setState({\n        menuPosition: null\n      });\n    };\n\n    this.displayAddNewMonth = e => {\n      this.setState({\n        menuPosition: e.currentTarget\n      });\n    };\n\n    this.selectFieldOnChangeHandler = e => {\n      this.state.monthSelected = e.target.value;\n      this.setState({\n        monthSelected: this.state.monthSelected\n      });\n    };\n\n    this.state = {\n      // the headings to appear in the header bar \n      transactions_headings: [\"Date\", \"Amount\", \"Description\", \"Category\"],\n      // the options for each transaction for the table to know which kind of cell to display\n      transactions_options: [\"Date\", \"Number\", \"Any\", \"Select\"],\n      // a list of the categories that the transaction falls under \n      transactions_categories: [\"Food\", \"Personal\", \"Transportation\", \"Home\"],\n      // the data to appear in each rows of the table \n      transactions_data: [{\n        \"Date\": \"02/01/2021\",\n        \"Amount\": \"35.23\",\n        \"Description\": \"McDonalds\",\n        \"Category\": \"Food\"\n      }, {\n        \"Date\": \"02/03/2021\",\n        \"Amount\": \"26.38\",\n        \"Description\": \"Starbucks\",\n        \"Category\": \"Food\"\n      }, {\n        \"Date\": \"02/05/2021\",\n        \"Amount\": \"136.83\",\n        \"Description\": \"Runners\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/07/2021\",\n        \"Amount\": \"13.28\",\n        \"Description\": \"Movies\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/09/2021\",\n        \"Amount\": \"52.85\",\n        \"Description\": \"Presto Card\",\n        \"Category\": \"Transportation\"\n      }, {\n        \"Date\": \"02/12/2021\",\n        \"Amount\": \"83.16\",\n        \"Description\": \"Internet + Utilities\",\n        \"Category\": \"Home\"\n      }, {\n        \"Date\": \"02/15/2021\",\n        \"Amount\": \"267.33\",\n        \"Description\": \"Gift for Joe\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/18/2021\",\n        \"Amount\": \"8.37\",\n        \"Description\": \"Bubble Tea\",\n        \"Category\": \"Food\"\n      }],\n      // the net balance on the account \n      accountBalance: 0,\n      // current sorting by string, default is sort by date\n      sortBy: \"Date\",\n      // sorting in an ascending/descending order\n      sortDes: {\n        \"Date\": false,\n        \"Amount\": false,\n        \"Category\": false\n      },\n      // true for displaying the drawer (sidebar for months), false to hide\n      openDrawer: false,\n      // the array used for displaying the pie chart, will contain array of objects, key is the category, value is the total spending of that category\n      sumForCategories: [],\n      // the position for the menu used to create a new spendings page\n      menuPosition: null,\n      // the month selected for the menu \n      monthSelected: \"\"\n    };\n    this.sumAccountBalance();\n    this.sumCategoriesAmount();\n  } // array form for data \n  // [\"02/01/2021\", \"35.23\", \"McDonalds\", \"Food\"],\n  // [\"02/03/2021\", \"26.38\", \"Starbucks\", \"Food\"],\n  // [\"02/05/2021\", \"136.83\", \"Runners\", \"Personal\"],\n  // [\"02/07/2021\", \"13.28\", \"Movies\", \"Personal\"],\n  // [\"02/09/2021\", \"52.85\", \"Presto Card\", \"Transportation\"],\n  // [\"02/12/2021\", \"83.16\", \"Internet + Utilities\", \"Home\"],\n  // [\"02/15/2021\", \"267.33\", \"Gift for Joe\", \"Personal\"],\n  // [\"02/18/2021\", \"8.37\", \"Bubble Tea\", \"Food\"]\n  // just in case if we need to switch structure to obj \n  // {\"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\"},\n  // {\"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\"},\n  // {\"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\"},\n\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) {\n      this.sumAccountBalance();\n      this.sumCategoriesAmount();\n    }\n  }\n\n  changeSort(sortBy) {\n    this.state.sortBy = sortBy;\n    this.setState({\n      sortBy: this.state.sortBy\n    });\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy];\n    this.setState({\n      sortDes: this.state.sortDes\n    });\n    this.sortTransactions();\n  }\n\n  render() {\n    const {\n      loggedIn,\n      classes\n    } = this.props;\n    return loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DrawerDiv\",\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          classes: {\n            paper: classes.drawer_paper,\n            paperAnchorDocked: classes.drawer_paper\n          },\n          variant: \"permanent\",\n          children: [/*#__PURE__*/_jsxDEV(Menu, {\n            id: \"long-menu\",\n            anchorEl: this.state.menuPosition,\n            open: Boolean(this.state.menuPosition),\n            onClose: () => this.hideAddNewMonth(),\n            classes: {\n              list: classes.menu_list\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              classes: {\n                root: classes.formControl_root\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"simple-select-label\",\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                id: \"simple-select\",\n                defaultValue: this.state.monthSelected,\n                onChange: e => this.selectFieldOnChangeHandler(e),\n                children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map(month => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: month,\n                  children: month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Year\",\n              classes: {\n                root: classes.menu_list\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Projected Spendings\",\n              classes: {\n                root: classes.menu_list\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              classes: {\n                root: classes.menu_list\n              },\n              size: \"small\",\n              children: \"Add New Spendings Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"add\",\n            onClick: e => this.displayAddNewMonth(e),\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pieChart,\n            alt: \"pieChart\",\n            style: {\n              marginRight: \"auto\",\n              marginLeft: \"auto\",\n              width: \"50%\",\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AccountBalance\",\n            children: [\"Total Amount: \", this.state.accountBalance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n            listToDisplay: this.state.sumForCategories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AccountBalance\",\n            children: [\"Total Amount: $\", this.state.accountBalance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Table\",\n          children: [/*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n          , {\n            classes: {\n              TableContainer: 'TableContainer'\n            },\n            headings: this.state.transactions_headings,\n            data: this.state.transactions_data,\n            options: this.state.transactions_options,\n            categories: this.state.transactions_categories,\n            addRow: this.addTransaction,\n            editRow: this.editTransaction,\n            removeRow: this.deleteTransaction,\n            addCategory: this.addCategory,\n            removeCategory: this.deleteCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SortButtons\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Date\"),\n                    children: [\"Sort By Date\", this.state.sortDes[\"Date\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 81\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Amount\"),\n                    children: [\"Sort By Amount\", this.state.sortDes[\"Amount\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 59\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 83\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Category\"),\n                    children: [\"Sort By Category\", this.state.sortDes[\"Category\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 61\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 85\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Table\",\n          children: [/*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n          , {\n            classes: {\n              TableContainer: 'TableContainer'\n            },\n            headings: this.state.transactions_headings,\n            data: this.state.transactions_data,\n            options: this.state.transactions_options,\n            categories: this.state.transactions_categories,\n            addRow: this.addTransaction,\n            editRow: this.editTransaction,\n            removeRow: this.deleteTransaction,\n            addCategory: this.addCategory,\n            removeCategory: this.deleteCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SortButtons\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Date\"),\n                    children: [\"Sort By Date\", this.state.sortDes[\"Date\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 81\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Amount\"),\n                    children: [\"Sort By Amount\", this.state.sortDes[\"Amount\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 59\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 83\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Category\"),\n                    children: [\"Sort By Category\", this.state.sortDes[\"Category\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 61\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 85\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Spendings);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Spendings/index.js"],"names":["React","Redirect","withStyles","TableComp","Button","ArrowUpwardIcon","ArrowDownwardIcon","Grid","Paper","IconButton","MenuIcon","Drawer","List","ListItem","ListItemIcon","ListItemText","Divider","AddIcon","Menu","MenuItem","Select","TextField","InputLabel","FormControl","PieChart","useStyles","drawer_paper","position","height","menu_list","width","formControl_root","outline","minWidth","Spendings","Component","constructor","props","sumAccountBalance","state","accountBalance","transactions_data","reduce","total","current","sum","parseFloat","toFixed","setState","sumCategoriesAmount","sumForCategories","map","transaction","category","index","findIndex","x","name","push","bookCost","length","sortObj","a","b","sortBy","sortDes","sortTransactions","sort","addTransaction","newTransaction","unshift","editTransaction","oldTransaction","t","deleteTransaction","keepTransactions","filter","addCategory","newCategory","transactions_categories","includes","deleteCategory","keepCategories","c","toggleDrawer","openDrawer","hideAddNewMonth","menuPosition","displayAddNewMonth","e","currentTarget","selectFieldOnChangeHandler","monthSelected","target","value","transactions_headings","transactions_options","componentDidUpdate","undefined","prevState","changeSort","render","loggedIn","classes","paper","paperAnchorDocked","Boolean","list","root","month","text","pieChart","marginRight","marginLeft","display","TableContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { withStyles } from '@material-ui/core'\nimport TableComp from '../Table'\n\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from \"@material-ui/core/Divider\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport './spendings.css'\nimport PieChart from '../Investments/PieChart'\n\nconst useStyles = () => ({\n  drawer_paper: {\n    position: \"relative\",\n    height: \"100%\"\n  },\n  menu_list: {\n    width: \"15vw\"\n  },\n  formControl_root: {\n    outline: \"none\",\n    minWidth: \"15vw\"\n  }\n})\n\nclass Spendings extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // the headings to appear in the header bar \n      transactions_headings: [\"Date\", \"Amount\", \"Description\", \"Category\"],\n      // the options for each transaction for the table to know which kind of cell to display\n      transactions_options: [\"Date\", \"Number\", \"Any\", \"Select\"],\n      // a list of the categories that the transaction falls under \n      transactions_categories: [\"Food\", \"Personal\", \"Transportation\", \"Home\"],\n      // the data to appear in each rows of the table \n      transactions_data: [\n        { \"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\" },\n        { \"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\" },\n        { \"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\" },\n        { \"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\" },\n        { \"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\" },\n      ],\n      // the net balance on the account \n      accountBalance: 0,\n      // current sorting by string, default is sort by date\n      sortBy: \"Date\",\n      // sorting in an ascending/descending order\n      sortDes: {\n        \"Date\": false,\n        \"Amount\": false,\n        \"Category\": false\n      },\n      // true for displaying the drawer (sidebar for months), false to hide\n      openDrawer: false,\n      // the array used for displaying the pie chart, will contain array of objects, key is the category, value is the total spending of that category\n      sumForCategories: [],\n      // the position for the menu used to create a new spendings page\n      menuPosition: null,\n      // the month selected for the menu \n      monthSelected: \"\"\n    }\n\n    this.sumAccountBalance()\n    this.sumCategoriesAmount()\n\n  }\n\n  // array form for data \n  // [\"02/01/2021\", \"35.23\", \"McDonalds\", \"Food\"],\n  // [\"02/03/2021\", \"26.38\", \"Starbucks\", \"Food\"],\n  // [\"02/05/2021\", \"136.83\", \"Runners\", \"Personal\"],\n  // [\"02/07/2021\", \"13.28\", \"Movies\", \"Personal\"],\n  // [\"02/09/2021\", \"52.85\", \"Presto Card\", \"Transportation\"],\n  // [\"02/12/2021\", \"83.16\", \"Internet + Utilities\", \"Home\"],\n  // [\"02/15/2021\", \"267.33\", \"Gift for Joe\", \"Personal\"],\n  // [\"02/18/2021\", \"8.37\", \"Bubble Tea\", \"Food\"]\n\n  // just in case if we need to switch structure to obj \n  // {\"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\"},\n  // {\"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\"},\n  // {\"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\"},\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) {\n      this.sumAccountBalance()\n      this.sumCategoriesAmount()\n    }\n  }\n\n  sumAccountBalance = () => {\n    this.state.accountBalance = this.state.transactions_data.reduce((total, current) => {\n      let sum = parseFloat(total) + parseFloat(current[\"Amount\"])\n      sum = sum.toFixed(2)\n      return sum\n    }, 0)\n    this.setState({ accountBalance: this.state.accountBalance })\n  }\n\n  sumCategoriesAmount = () => {\n\n    this.state.sumForCategories = []\n\n    this.state.transactions_data.map(transaction => {\n      const category = transaction[\"Category\"]\n      let index = this.state.sumForCategories.findIndex(x => x.name == category)\n      if (index == -1) {\n        this.state.sumForCategories.push({ name: category, bookCost: 0 })\n        index = this.state.sumForCategories.length - 1\n      }\n      this.state.sumForCategories[index].bookCost += parseFloat(transaction[\"Amount\"])\n    })\n\n    this.setState({ sumForCategories: this.state.sumForCategories })\n\n  }\n\n  sortObj = (a, b) => {\n\n    switch (this.state.sortBy) {\n\n      case \"Date\":\n        if (!this.state.sortDes[\"Date\"]) {\n          if (a[\"Date\"] < b[\"Date\"]) return -1\n          else return 1\n        }\n        else {\n          if (a[\"Date\"] > b[\"Date\"]) return -1\n          else return 1\n        }\n\n      case \"Amount\":\n        if (!this.state.sortDes[\"Amount\"]) {\n          if (parseFloat(a[\"Amount\"]) < parseFloat(b[\"Amount\"])) return -1\n          else return 1\n        }\n        else {\n          if (parseFloat(a[\"Amount\"]) > parseFloat(b[\"Amount\"])) return -1\n          else return 1\n        }\n\n      case \"Category\":\n        if (!this.state.sortDes[\"Category\"]) {\n          if (a[\"Category\"] < b[\"Category\"]) return -1\n          else return 1\n        }\n        else {\n          if (a[\"Category\"] > b[\"Category\"]) return -1\n          else return 1\n        }\n\n      case \"Default\":\n        return\n\n    }\n\n  }\n\n  // sorting the transactions based on the currently selected element \n  sortTransactions = () => {\n    this.state.transactions_data.sort(this.sortObj)\n    this.setState({ transactions_data: this.state.transactions_data })\n  }\n\n  // add newTransaction to the beginning of the transactions_data array \n  addTransaction = (newTransaction) => {\n    this.state.transactions_data.unshift(newTransaction)\n    this.setState({ transactions_data: this.state.transactions_data })\n    this.sumAccountBalance()\n    this.sumCategoriesAmount()\n  }\n\n  // finds the index of the oldTransaction data and replace it with the newTransaction data\n  editTransaction = (oldTransaction, newTransaction) => {\n    const index = this.state.transactions_data.findIndex(t => t === oldTransaction)\n    this.state.transactions_data[index] = newTransaction\n    this.setState({ transactions_data: this.state.transactions_data })\n    this.sumAccountBalance()\n    this.sumCategoriesAmount()\n  }\n\n  // deletes transaction from transactions_data array \n  deleteTransaction = (transaction) => {\n    const keepTransactions = this.state.transactions_data.filter(t => t !== transaction)\n    this.setState({ transactions_data: keepTransactions })\n  }\n\n  // adds a user defined category \n  addCategory = (newCategory) => {\n    if (!this.state.transactions_categories.includes(newCategory))\n      this.state.transactions_categories.push(newCategory)\n    this.setState({ transactions_categories: this.state.transactions_categories })\n  }\n\n  // deletes a user defined category (the default cannot be deleted)\n  deleteCategory = (category) => {\n    const keepCategories = this.state.transactions_categories.filter(c => c !== category)\n    this.setState({ transactions_categories: keepCategories })\n  }\n\n  changeSort(sortBy) {\n    this.state.sortBy = sortBy\n    this.setState({ sortBy: this.state.sortBy })\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy]\n    this.setState({ sortDes: this.state.sortDes })\n    this.sortTransactions()\n  }\n\n  toggleDrawer = () => {\n    this.state.openDrawer = !this.state.openDrawer\n    this.setState({ openDrawer: this.state.openDrawer })\n  }\n\n  hideAddNewMonth = () => {\n    this.setState({ menuPosition: null })\n  }\n\n  displayAddNewMonth = (e) => {\n    this.setState({ menuPosition: e.currentTarget })\n  }\n\n  selectFieldOnChangeHandler = (e) => {\n    this.state.monthSelected = e.target.value\n    this.setState({ monthSelected: this.state.monthSelected })\n  }\n\n  render() {\n\n    const { loggedIn, classes } = this.props\n\n    return (\n\n      loggedIn ?\n\n        <div>\n\n          <div className=\"DrawerDiv\">\n\n            {/* <IconButton className=\"OpenDrawerButton\"\n                // color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={() => this.toggleDrawer()}\n              // edge=\"start\"\n              // className={clsx(classes.menuButton, {\n              //   [classes.hide]: open,\n              // })}\n              >\n                <MenuIcon />\n              </IconButton> */}\n\n            <Drawer classes={{ paper: classes.drawer_paper, paperAnchorDocked: classes.drawer_paper }}\n              variant=\"permanent\"\n            >\n\n              <Menu\n                id=\"long-menu\"\n                anchorEl={this.state.menuPosition}\n                open={Boolean(this.state.menuPosition)}\n                onClose={() => this.hideAddNewMonth()}\n                classes={{ list: classes.menu_list }}\n              >\n\n                <FormControl\n                  classes={{ root: classes.formControl_root }}\n                >\n\n                  <InputLabel id=\"simple-select-label\">Month</InputLabel>\n                  <Select\n                    id=\"simple-select\"\n                    defaultValue={this.state.monthSelected}\n                    onChange={(e) => this.selectFieldOnChangeHandler(e)}\n                  >\n\n                    {[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map(month =>\n                      <MenuItem\n                        value={month}>\n                        {month}\n                      </MenuItem>\n                    )}\n\n                  </Select>\n\n                </FormControl>\n\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Year\"\n                  classes={{ root: classes.menu_list }}\n                />\n\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Projected Spendings\"\n                  classes={{ root: classes.menu_list }}\n                />\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  classes={{ root: classes.menu_list }}\n                  size=\"small\"\n                >\n                  Add New Spendings Page\n                </Button>\n\n              </Menu>\n\n              <IconButton\n                aria-label=\"add\"\n                onClick={(e) => this.displayAddNewMonth(e)}>\n                <AddIcon />\n              </IconButton>\n              <Divider />\n\n              <List>\n                {[\"Jan\", \"Feb\", \"Mar\", \"Apr\"].map((text, index) => (\n                  <ListItem button key={text}>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n\n          </div>\n\n          <div className=\"Content\">\n\n            <div className=\"Chart\">\n\n              <img src={pieChart} alt=\"pieChart\" style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"50%\", display: \"block\" }}></img>\n\n              <div className=\"AccountBalance\">\n                Total Amount: {this.state.accountBalance}\n                </div>\n\n              {/* <img src={pieChart} alt=\"pieChart\" style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"50%\", display: \"block\" }}></img> */}\n              <PieChart\n                listToDisplay={this.state.sumForCategories}\n              >\n\n              </PieChart>\n\n              <div className=\"AccountBalance\">\n                Total Amount: ${this.state.accountBalance}\n              </div>\n\n              \n            </div>\n\n            <div className=\"Table\">\n\n              <TableComp\n                // use the TableContainer class to style the table itself \n                classes={{ TableContainer: 'TableContainer' }}\n                headings={this.state.transactions_headings}\n                data={this.state.transactions_data}\n                options={this.state.transactions_options}\n                categories={this.state.transactions_categories}\n                addRow={this.addTransaction}\n                editRow={this.editTransaction}\n                removeRow={this.deleteTransaction}\n                addCategory={this.addCategory}\n                removeCategory={this.deleteCategory}\n              />\n\n              <div className=\"SortButtons\">\n\n                <Grid container spacing={3}>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Date\")}>\n                        Sort By Date\n                          {this.state.sortDes[\"Date\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Amount\")}>\n                        Sort By Amount\n                          {this.state.sortDes[\"Amount\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </ Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Category\")}>\n                        Sort By Category\n                          {this.state.sortDes[\"Category\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                </Grid>\n\n              </div>\n\n            </div>\n\n            <div className=\"Table\">\n\n              <TableComp\n                // use the TableContainer class to style the table itself \n                classes={{ TableContainer: 'TableContainer' }}\n                headings={this.state.transactions_headings}\n                data={this.state.transactions_data}\n                options={this.state.transactions_options}\n                categories={this.state.transactions_categories}\n                addRow={this.addTransaction}\n                editRow={this.editTransaction}\n                removeRow={this.deleteTransaction}\n                addCategory={this.addCategory}\n                removeCategory={this.deleteCategory}\n              />\n\n              <div className=\"SortButtons\">\n\n                <Grid container spacing={3}>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Date\")}>\n                        Sort By Date\n                          {this.state.sortDes[\"Date\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Amount\")}>\n                        Sort By Amount\n                          {this.state.sortDes[\"Amount\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </ Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Category\")}>\n                        Sort By Category\n                          {this.state.sortDes[\"Category\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                </Grid>\n\n              </div>\n\n            </div>\n            \n          </div>\n\n        </div >\n\n        : <Redirect to=\"/login\" />\n\n    )\n\n  }\n\n}\n\nexport default withStyles(useStyles)(Spendings);"]},"metadata":{},"sourceType":"module"}