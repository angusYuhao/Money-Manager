{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      menuPosition: null,\n      initialInvestment: 0,\n      interestRate: 0,\n      yrsToGrow: 1,\n      compound: 1,\n      amount: 0,\n      error: 0,\n      strToDisplay: \"\",\n      buttonText: \"Compound Rate\"\n    };\n\n    this.toggleDrawer = () => {\n      this.state.openDrawer = !this.state.openDrawer;\n      this.setState({\n        openDrawer: this.state.openDrawer\n      });\n    };\n  }\n\n  displayCompoundTypes(e) {\n    this.setState({\n      menuPosition: e.currentTarget\n    });\n  }\n\n  hideCompoundTypes() {\n    this.setState({\n      menuPosition: null\n    });\n  }\n\n  handleInitInvestment(e) {\n    if (!isNaN(e.target.value) && parseFloat(e.target.value) >= 0) {\n      this.setState({\n        initialInvestment: e.target.value\n      });\n    } else {\n      this.setState({\n        error: 1\n      });\n    }\n  }\n\n  handleInterestRate(e) {\n    this.setState({\n      interestRate: e.target.value\n    });\n  }\n\n  handleYrsToGrow(e) {\n    this.setState({\n      yrsToGrow: e.target.value\n    });\n  }\n\n  clickedMonthly(event) {\n    this.setState({\n      compound: 12,\n      buttonText: \"Monthly\"\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedAnnually(event) {\n    this.setState({\n      compound: 1,\n      buttonText: \"Annualy\"\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedQuarterly(event) {\n    this.setState({\n      compound: 4,\n      buttonText: \"Quarterly\"\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  clickedSemiAnnually(event) {\n    this.setState({\n      compound: 2,\n      buttonText: \"Semi-annually\"\n    });\n    this.anchorEl = null;\n    this.state.menuPosition = null;\n  }\n\n  calculateAmount() {\n    let insideBrackets = this.state.interestRate / 100 / this.state.compound + 1;\n    console.log(insideBrackets);\n    let exponentVal = this.state.compound * this.state.yrsToGrow;\n    console.log(exponentVal);\n    let appliedPower = Math.pow(insideBrackets, exponentVal);\n    console.log(appliedPower);\n    let finalAmount = appliedPower * this.state.initialInvestment;\n    console.log(finalAmount);\n    let compoundStr = \"\";\n\n    if (this.compound == 1) {\n      compoundStr = \"annually\";\n    } else if (this.compound == 2) {\n      compoundStr = \"semi-annually\";\n    } else if (this.compound == 4) {\n      compoundStr = \"quarterly\";\n    } else {\n      compoundStr = \"monthly\";\n    }\n\n    let finalStr = \"Your initial investment of $\" + String(this.state.initialInvestment) + \" at interest rate of \" + String(this.state.interestRate) + \"% will be worth $\" + String(finalAmount.toFixed(2)) + \" after \" + String(this.state.yrsToGrow) + \" years when compounded \" + compoundStr;\n    this.setState({\n      amount: finalAmount.toFixed(2),\n      strToDisplay: finalStr\n    });\n    this.setState({\n      interestRate: 0,\n      yrsToGrow: 0,\n      compound: 0,\n      initialInvestment: 0,\n      buttonText: \"Compound Rate\"\n    });\n  }\n\n  render() {\n    const {\n      compoundTypes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"CalculatorCard\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            component: \"h2\",\n            children: \"Investment Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: this.state.initialInvestment,\n              id: \"standard-basic\",\n              label: \"Intial investment($):\",\n              defaultValue: \"0\",\n              margin: \"normal\",\n              onChange: e => this.handleInitInvestment(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: this.state.interestRate,\n              id: \"standard-basic\",\n              label: \"Interest rate(%):\",\n              defaultValue: \"0\",\n              margin: \"normal\",\n              onChange: e => this.handleInterestRate(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: this.state.yrsToGrow,\n              id: \"standard-basic\",\n              label: \"Years to grow(yrs):\",\n              defaultValue: \"1\",\n              margin: \"normal\",\n              onChange: e => this.handleYrsToGrow(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CalculatorButtons\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                \"aria-label\": \"add\",\n                color: \"primary\",\n                onClick: e => this.displayCompoundTypes(e),\n                children: [this.state.buttonText, /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                id: \"long-menu\",\n                anchorEl: this.state.menuPosition,\n                open: Boolean(this.state.menuPosition),\n                onClose: () => this.hideCompoundTypes(),\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: e => this.clickedMonthly(e),\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: e => this.clickedQuarterly(e),\n                    children: \"Quarterly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: e => this.clickedSemiAnnually(e),\n                    children: \"Semi-annually\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: e => this.clickedAnnually(e),\n                    children: \"Annually\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                \"aria-label\": \"add\",\n                color: \"primary\",\n                onClick: () => this.calculateAmount(),\n                children: \"Calculate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: \"true\",\n              InputProps: {\n                readOnly: true\n              },\n              label: \"Results($)\",\n              value: this.state.strToDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/Calculator.js"],"names":["React","TextField","Card","CardContent","Button","Menu","MenuItem","Typography","AddCircleIcon","ThemeProvider","createMuiTheme","deepPurple","theme","palette","primary","main","secondary","typography","fontFamily","join","Calculator","Component","state","menuPosition","initialInvestment","interestRate","yrsToGrow","compound","amount","error","strToDisplay","buttonText","toggleDrawer","openDrawer","setState","displayCompoundTypes","e","currentTarget","hideCompoundTypes","handleInitInvestment","isNaN","target","value","parseFloat","handleInterestRate","handleYrsToGrow","clickedMonthly","event","anchorEl","clickedAnnually","clickedQuarterly","clickedSemiAnnually","calculateAmount","insideBrackets","console","log","exponentVal","appliedPower","Math","pow","finalAmount","compoundStr","finalStr","String","toFixed","render","compoundTypes","props","Boolean","readOnly"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: deepPurple[800],\n        },\n        secondary: {\n            main: deepPurple[100],\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Poppins',\n            'sans-serif',\n        ].join(','),\n    },\n  });\n\n\nclass Calculator extends React.Component{\n    state = {\n        menuPosition: null,\n        initialInvestment: 0,\n        interestRate: 0,\n        yrsToGrow: 1,\n        compound: 1,\n        amount: 0,\n        error: 0,\n        strToDisplay: \"\",\n        buttonText: \"Compound Rate\",\n    }\n\n    toggleDrawer = () => {\n        this.state.openDrawer = !this.state.openDrawer\n        this.setState({ openDrawer: this.state.openDrawer })\n    }\n\n    displayCompoundTypes(e) {\n        this.setState({ menuPosition: e.currentTarget })\n    }\n    \n    hideCompoundTypes() {\n        this.setState({ menuPosition: null })\n    }\n    \n    handleInitInvestment(e){\n        if(!isNaN(e.target.value) && parseFloat(e.target.value) >= 0){\n            this.setState({\n                initialInvestment: e.target.value\n            })\n        }else{\n            this.setState({\n                error: 1\n            })\n        }\n    }\n\n    handleInterestRate(e){\n        this.setState({\n            interestRate: e.target.value\n        })\n    }\n    handleYrsToGrow(e){\n        this.setState({\n            yrsToGrow: e.target.value\n        })\n    }\n    \n    clickedMonthly(event){\n        this.setState({\n            compound: 12,\n            buttonText: \"Monthly\",\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedAnnually(event){\n        this.setState({\n            compound: 1,\n            buttonText: \"Annualy\",\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedQuarterly(event){\n        this.setState({\n            compound: 4,\n            buttonText: \"Quarterly\",\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    clickedSemiAnnually(event){\n        this.setState({\n            compound: 2,\n            buttonText: \"Semi-annually\",\n        })\n        this.anchorEl = null;\n        this.state.menuPosition = null;\n    }\n\n    calculateAmount(){\n        let insideBrackets = ((this.state.interestRate/100)/(this.state.compound)) + 1;\n        console.log(insideBrackets);\n        let exponentVal = this.state.compound * this.state.yrsToGrow;\n        console.log(exponentVal);\n        let appliedPower = Math.pow(insideBrackets,exponentVal);\n        console.log(appliedPower);\n        let finalAmount = appliedPower* this.state.initialInvestment;\n        console.log(finalAmount)\n        let compoundStr = \"\";\n        if(this.compound == 1){\n            compoundStr = \"annually\";\n        }else if (this.compound == 2){\n            compoundStr = \"semi-annually\";\n        }else if (this.compound == 4){\n            compoundStr = \"quarterly\";\n        }else{\n            compoundStr = \"monthly\";\n        }\n        let finalStr =  \"Your initial investment of $\"+String(this.state.initialInvestment)+\" at interest rate of \" + String(this.state.interestRate)+ \"% will be worth $\" + String(finalAmount.toFixed(2))\n        + \" after \" + String(this.state.yrsToGrow)+ \" years when compounded \" +compoundStr;\n        \n        this.setState({\n            amount: finalAmount.toFixed(2),\n            strToDisplay: finalStr,\n        })\n        this.setState({\n            interestRate: 0,\n            yrsToGrow: 0,\n            compound: 0,\n            initialInvestment: 0,\n            buttonText: \"Compound Rate\"\n        })\n    }\n\n    render(){\n        const {compoundTypes} = this.props;\n        return(\n        <ThemeProvider theme={ theme }>\n        <Card className = \"CalculatorCard\" variant=\"outlined\" color = \"secondary\"> \n            <CardContent>\n                <Typography variant=\"h3\" component=\"h2\">\n                    Investment Calculator\n                </Typography>\n                <br/>\n                <form noValidate autoComplete=\"off\">\n                    <TextField value = {this.state.initialInvestment} id=\"standard-basic\" label = \"Intial investment($):\" defaultValue = \"0\" \n                     margin=\"normal\"  onChange = {(e) => this.handleInitInvestment(e)}/>\n                    <br/>\n                    <TextField value = {this.state.interestRate} id=\"standard-basic\" label=\"Interest rate(%):\" defaultValue = \"0\" \n                    margin=\"normal\" onChange = {(e) => this.handleInterestRate(e)}/>\n                    <br/>\n                    <TextField value = {this.state.yrsToGrow} id=\"standard-basic\" label=\"Years to grow(yrs):\" defaultValue = \"1\" \n                    margin=\"normal\" onChange = {(e) => this.handleYrsToGrow(e)}/>\n                    <br/>\n                    <br/>\n\n                    <div className = \"CalculatorButtons\">\n                        <Button variant=\"outlined\" aria-label=\"add\" color = \"primary\" onClick={(e) => this.displayCompoundTypes(e)}>\n                            {this.state.buttonText}\n                            <AddCircleIcon/>\n                        </Button>\n                            <Menu\n                                id=\"long-menu\"\n                                anchorEl={this.state.menuPosition}\n                                open={Boolean(this.state.menuPosition)}\n                                onClose={() => this.hideCompoundTypes()}\n                            >\n                                <MenuItem >\n                                    <MenuItem onClick={(e)=>this.clickedMonthly(e)}>Monthly</MenuItem>\n                                    <MenuItem onClick={(e)=>this.clickedQuarterly(e)}>Quarterly</MenuItem>\n                                    <MenuItem onClick={(e)=>this.clickedSemiAnnually(e)}>Semi-annually</MenuItem>\n                                    <MenuItem onClick={(e)=>this.clickedAnnually(e)}>Annually</MenuItem>\n                                </MenuItem>\n                            </Menu>\n                        <br/>\n                        <br/>\n                        <Button variant=\"outlined\" aria-label=\"add\" color = \"primary\" onClick={() => this.calculateAmount()}>\n                            Calculate\n                        </Button>\n                    </div>\n                    <br/>\n                    <TextField fullWidth = \"true\" InputProps={{readOnly: true,}} label = \"Results($)\"\n                        value={this.state.strToDisplay}\n                    />\n                </form>\n            </CardContent>\n        </Card>\n        </ThemeProvider>\n        )\n    }\n}\n\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}