{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/NewCanvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndata = [{\n  name: 'Targaryen',\n  amount: 90200\n}, {\n  name: 'Tully',\n  amount: 15000\n}, {\n  name: 'Stark',\n  amount: 50500\n}, {\n  name: 'Lannister',\n  amount: 1250800\n}, {\n  name: 'Mormont',\n  amount: 16000\n}];\n\nconst Canvas = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d'); //Our first draw\n\n    canvas.width = 800;\n    canvas.height = 600;\n    context.lineWidth = 2;\n    context.strokeStyle = '#ff0000';\n    context.fillStyle = '#ffffff';\n    context.globalCompositeOperation = \"destination-over\";\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    context.globalCompositeOperation = \"source-over\";\n    context.strokeRect(0, 0, canvas.width, canvas.height); //for white background\n\n    let total = this.state.data.reduce((ttl, house) => {\n      return ttl + house.troops;\n    }, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/NewCanvas.js"],"names":["React","useRef","useEffect","data","name","amount","Canvas","props","canvasRef","canvas","current","context","getContext","width","height","lineWidth","strokeStyle","fillStyle","globalCompositeOperation","fillRect","strokeRect","total","state","reduce","ttl","house","troops"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEAC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC,WAAN;AAAmBC,EAAAA,MAAM,EAAC;AAA1B,CAAD,EACP;AAACD,EAAAA,IAAI,EAAC,OAAN;AAAeC,EAAAA,MAAM,EAAC;AAAtB,CADO,EAEP;AAACD,EAAAA,IAAI,EAAC,OAAN;AAAeC,EAAAA,MAAM,EAAC;AAAtB,CAFO,EAGP;AAACD,EAAAA,IAAI,EAAC,WAAN;AAAmBC,EAAAA,MAAM,EAAC;AAA1B,CAHO,EAIP;AAACD,EAAAA,IAAI,EAAC,SAAN;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAJO,CAAP;;AAOA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB,CAFY,CAGZ;;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgB,GAAhB;AACAH,IAAAA,OAAO,CAACI,SAAR,GAAoB,CAApB;AACAJ,IAAAA,OAAO,CAACK,WAAR,GAAsB,SAAtB;AACAL,IAAAA,OAAO,CAACM,SAAR,GAAoB,SAApB;AACAN,IAAAA,OAAO,CAACO,wBAAR,GAAmC,kBAAnC;AAEAP,IAAAA,OAAO,CAACQ,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBR,OAAO,CAACF,MAAR,CAAeI,KAAtC,EAA6CF,OAAO,CAACF,MAAR,CAAeK,MAA5D;AACAH,IAAAA,OAAO,CAACO,wBAAR,GAAmC,aAAnC;AAEAP,IAAAA,OAAO,CAACS,UAAR,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBX,MAAM,CAACI,KAAhC,EAAuCJ,MAAM,CAACK,MAA9C,EAdY,CAc0C;;AACtD,QAAIO,KAAK,GAAG,KAAKC,KAAL,CAAWnB,IAAX,CAAgBoB,MAAhB,CAAwB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChD,aAAOD,GAAG,GAAGC,KAAK,CAACC,MAAnB;AACH,KAFW,EAET,CAFS,CAAZ;AAIH,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBAAO;AAAQ,IAAA,GAAG,EAAElB,SAAb;AAAA,OAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAxBD;;GAAMD,M;;KAAAA,M;AA6BN,eAAeA,MAAf","sourcesContent":["\nimport React, { useRef, useEffect } from 'react'\n\ndata = [{name:'Targaryen', amount:90200},\n{name:'Tully', amount:15000},\n{name:'Stark', amount:50500},\n{name:'Lannister', amount:1250800},\n{name:'Mormont', amount:16000}]\n\n\nconst Canvas = props => {\n    const canvasRef = useRef(null)\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        //Our first draw\n        canvas.width = 800;\n        canvas.height = 600;\n        context.lineWidth = 2;\n        context.strokeStyle = '#ff0000';     \n        context.fillStyle = '#ffffff';\n        context.globalCompositeOperation = \"destination-over\";\n    \n        context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n        context.globalCompositeOperation = \"source-over\";\n    \n        context.strokeRect(0, 0, canvas.width, canvas.height);//for white background\n        let total = this.state.data.reduce( (ttl, house) => {\n            return ttl + house.troops\n        }, 0);\n        \n    }, [])\n    \n    return <canvas ref={canvasRef} {...props}/>\n}\n    \n\n\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}