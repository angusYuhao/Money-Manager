{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Profile/profile.js\";\nimport React from 'react';\nimport { Typography, Grid, Paper, AppBar, Toolbar, Button, Drawer, withStyles, createMuiTheme, Tab, Tabs, Avatar, ThemeProvider, List, Divider } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nimport ForumListItem from '../Community/forumListItem';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Edit from './edit.js';\nimport Done from './done.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 400;\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: deepPurple[50]\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  },\n  numberGroup: {\n    paddingLeft: theme.spacing(15)\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: 10,\n    backgroundColor: deepPurple[100],\n    marginTop: theme.spacing(3),\n    paddingLeft: 50,\n    paddingRight: 50,\n    marginRight: theme.spacing(20)\n  },\n  tabs: {\n    marginLeft: theme.spacing(3)\n  },\n  avatar: {\n    height: '100px',\n    width: '100px',\n    fontSize: '2em',\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(18.5),\n    backgroundColor: deepPurple[800]\n  },\n  editButton: {\n    float: 'right',\n    marginRight: theme.spacing(3)\n  },\n  logoutButton: {\n    float: 'right',\n    marginTop: theme.spacing(20),\n    marginRight: theme.spacing(3)\n  },\n  group: {\n    float: 'right',\n    marginRight: theme.spacing(30)\n  },\n  group1: {\n    float: 'right',\n    marginRight: theme.spacing(3)\n  },\n  name: {\n    fontWeight: 'bold',\n    fontSize: '1.6em',\n    borderBottom: 'none'\n  },\n  textfield: {\n    minWidth: 340\n  },\n  number: {\n    marginLeft: theme.spacing(3)\n  },\n  number1: {\n    marginLeft: theme.spacing(2)\n  },\n  post: {\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3)\n  },\n  nothing: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(30)\n  },\n  postIcon: {\n    fontSize: '5em',\n    position: 'relative',\n    marginTop: theme.spacing(10),\n    left: '50%'\n  },\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: theme.spacing(3)\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n}); // All the profile information should be fetched from the database\n// that stores the user information\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // if false, display edit; if true, display Done\n      edit: false,\n      logout: false,\n      userLevel: \"\",\n      avatar: \"\",\n      bio: \"An individual that is pursuing one's passions.\",\n      username: \"user\",\n      name: \"User X\",\n      email: \"user@123.com\",\n      occupation: \"student\",\n      birthday: \"2021-03-08\",\n      openNewPost: false,\n      openManagePost: false,\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postFilter: \"\",\n      sortOrder: \"\",\n      commenter: \"\",\n      commentContent: \"\",\n      userInfo: {\n        username: \"\",\n        usertype: \"\",\n        userUpvotedPosts: [],\n        userDownvotedPosts: [],\n        userFollows: []\n      },\n      posts: \"\"\n    };\n\n    this.handleEdit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.handleInputChange = event => {\n      console.log(event); // get the value we type in \n\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      console.log(value);\n\n      if (name == \"username\") {\n        for (let i = 0; i < this.state.posts.length; i++) {\n          this.state.posts[i].author = value;\n          this.state.posts[i].authorAvatar = value.charAt(0).toUpperCase();\n        }\n\n        this.state.avatar = value.charAt(0).toUpperCase();\n        this.state.author = value;\n        this.state.commenter = value;\n      } // state is updated and value is also updated in JSX\n      // the square bracket dynamically changes the name \n\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.postComment = target => {\n      const targetPostID = target.postID;\n      console.log(targetPostID);\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      const targetPostComments = targetPost[0].comments;\n      const newComment = {\n        commenter: this.state.commenter,\n        commentContent: target.comment\n      };\n      targetPostComments.push(newComment);\n      targetPost[0].comments = targetPostComments;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n    };\n\n    this.deletePosts = target => {\n      console.log(\"deleting post\");\n      const targetPostID = target.postID;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      console.log(\"posts length: \", otherPosts.length);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n\n      if (index !== -1) {\n        userInfo.userUpvotedPosts.splice(index, 1);\n        this.setState({\n          userInfo: userInfo\n        });\n      }\n    };\n\n    this.addUpvote = target => {\n      console.log(\"adding upvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userUpvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusUpvote = target => {\n      console.log(\"subtracting upvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.addDownvote = target => {\n      console.log(\"adding downvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userDownvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusDownvote = target => {\n      console.log(\"subtracting downvotes\");\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userDownvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.changeUserState = () => {\n      if (this.state.userLevel === \"User\") {\n        this.state.avatar = \"U\";\n        this.state.bio = \"An individual that is pursuing one's passions.\";\n        this.state.username = \"user\";\n        this.state.name = \"User X\";\n        this.state.email = \"user@123.com\";\n        this.state.occupation = \"Student\";\n        this.state.birthday = \"2021-03-08\";\n        this.state.posts = [{\n          author: 'User',\n          authorUsertype: \"RU\",\n          title: 'Welcome to communtiy',\n          content: 'this is the first community thread',\n          authorAvatar: \"U\",\n          category: \"Announcement\",\n          postID: 1,\n          numUpvotes: 5,\n          numDownvotes: 1,\n          comments: [{\n            commenter: \"User2\",\n            commentContent: \"This is a great post\"\n          }, {\n            commenter: \"User3\",\n            commentContent: \"This is a bad post\"\n          }]\n        }, {\n          author: 'User',\n          authorUsertype: \"RU\",\n          title: 'My second post',\n          content: 'This is the second post ever!!!!!!!',\n          authorAvatar: \"U\",\n          category: \"Opinion\",\n          postID: 2,\n          numUpvotes: 4,\n          numDownvotes: 2,\n          comments: [{\n            commenter: \"Financial Advisor3\",\n            commentContent: \"You should come to my page to learn about financials\"\n          }, {\n            commenter: \"User4\",\n            commentContent: \"Go buy GME!\"\n          }]\n        }];\n        this.setState({\n          avatar: this.state.avatar,\n          bio: this.state.bio,\n          username: this.state.username,\n          name: this.state.name,\n          email: this.state.email,\n          occupation: this.state.occupation,\n          birthday: this.state.birthday,\n          posts: this.state.posts\n        });\n      } else if (this.state.userLevel === \"Financial Advisor\") {\n        this.state.avatar = \"A\";\n        this.state.bio = \"A certified financial advisor, dedicated to help others\";\n        this.state.username = \"admin\";\n        this.state.name = \"Admin X\";\n        this.state.email = \"admin@123.com\";\n        this.state.occupation = \"Financial advisor\";\n        this.state.birthday = \"2021-03-08\";\n        this.state.posts = [{\n          author: 'Admin',\n          authorUsertype: \"FA\",\n          title: 'Welcome to communtiy',\n          content: 'I am the financial advisor',\n          authorAvatar: \"A\",\n          category: \"Announcement\",\n          postID: 1,\n          numUpvotes: 5,\n          numDownvotes: 1,\n          comments: [{\n            commenter: \"User2\",\n            commentContent: \"This is a great post\"\n          }, {\n            commenter: \"User3\",\n            commentContent: \"This is a bad post\"\n          }]\n        }, {\n          author: 'Admin',\n          authorUsertype: \"FA\",\n          title: 'My second post',\n          content: 'I am here to provide you guys with some help in financing',\n          authorAvatar: \"A\",\n          category: \"Opinion\",\n          postID: 2,\n          numUpvotes: 4,\n          numDownvotes: 2,\n          comments: [{\n            commenter: \"Financial Advisor3\",\n            commentContent: \"You should come to my page to learn about financials\"\n          }, {\n            commenter: \"User4\",\n            commentContent: \"Go buy GME!\"\n          }]\n        }];\n        this.setState({\n          avatar: this.state.avatar,\n          bio: this.state.bio,\n          username: this.state.username,\n          name: this.state.name,\n          email: this.state.email,\n          occupation: this.state.occupation,\n          birthday: this.state.birthday,\n          posts: this.state.posts\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.changeUserState();\n  }\n\n  render() {\n    const {\n      classes,\n      username,\n      handleLogOut,\n      password,\n      userLevel\n    } = this.props;\n\n    if (userLevel === \"User\") {\n      this.state.userLevel = \"User\";\n    } else if (userLevel === \"Financial Advisor\") {\n      this.state.userLevel = \"Financial Advisor\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {\n          color: \"secondary\",\n          position: \"fixed\",\n          className: classes.appBar,\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              inkBarStyle: {\n                background: 'black'\n              },\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: '/spendings',\n                style: {\n                  textDecoration: 'none',\n                  color: 'black'\n                },\n                className: classes.tabs,\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Spendings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/investments',\n                style: {\n                  textDecoration: 'none',\n                  color: 'black'\n                },\n                className: classes.tabs,\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Investments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/community',\n                style: {\n                  textDecoration: 'none',\n                  color: 'black'\n                },\n                className: classes.tabs,\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Community\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          className: classes.drawer,\n          variant: \"permanent\",\n          anchor: \"left\",\n          classes: {\n            paper: classes.drawerPaper\n          },\n          children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerContainer,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              align: \"center\",\n              name: \"avatar\",\n              value: this.state.avatar,\n              className: classes.avatar,\n              children: this.state.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Edit, {\n              handleInputChange: this.handleInputChange,\n              username: this.state.username,\n              name: this.state.name,\n              email: this.state.email,\n              occupation: this.state.occupation,\n              birthday: this.state.birthday,\n              bio: this.state.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Done, {\n              username: this.state.username,\n              name: this.state.name,\n              email: this.state.email,\n              occupation: this.state.occupation,\n              birthday: this.state.birthday,\n              bio: this.state.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 33\n            }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleEdit,\n              color: \"primary\",\n              variant: \"contained\",\n              className: classes.editButton,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleEdit,\n                color: \"primary\",\n                variant: \"contained\",\n                className: classes.editButton,\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleLogOut(),\n                  color: \"primary\",\n                  variant: \"contained\",\n                  className: classes.logoutButton,\n                  children: \"Log Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            className: classes.numberGroup,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              color: \"primary\",\n              elevation: 3,\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.group,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Followers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.number1,\n                  children: \"250\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.group,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.number,\n                  children: \"300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.group1,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Posts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.number,\n                  children: this.state.posts.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.post,\n              children: \"My posts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this), this.state.posts == \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(PostAddIcon, {\n                className: classes.postIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                className: classes.nothing,\n                children: \"You don't have anything posted yet. Go post something!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              className: classes.forumList,\n              children: this.state.posts.map(thread => {\n                if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                      postTitle: thread.title,\n                      postAuthor: thread.author,\n                      postAuthorUsertype: thread.authorUsertype,\n                      postTextContent: thread.content,\n                      avatar: thread.authorAvatar,\n                      category: thread.category,\n                      comments: thread.comments,\n                      postID: thread.postID,\n                      openManagePost: this.state.openManagePost ? true : false,\n                      numUpvotes: thread.numUpvotes,\n                      numDownvotes: thread.numDownvotes,\n                      userInfo: this.state.userInfo,\n                      addUpvote: this.addUpvote,\n                      minusUpvote: this.minusUpvote,\n                      addDownvote: this.addDownvote,\n                      minusDownvote: this.minusDownvote,\n                      deletePosts: this.deletePosts,\n                      postComment: this.postComment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 49\n                    }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                      variant: \"inset\",\n                      component: \"li\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 117\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 45\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Profile);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Profile/profile.js"],"names":["React","Typography","Grid","Paper","AppBar","Toolbar","Button","Drawer","withStyles","createMuiTheme","Tab","Tabs","Avatar","ThemeProvider","List","Divider","deepPurple","Link","ForumListItem","PostAddIcon","Edit","Done","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","background","drawerContainer","overflow","content","marginTop","spacing","numberGroup","paddingLeft","paper","flexDirection","borderRadius","backgroundColor","paddingRight","marginRight","tabs","marginLeft","avatar","height","fontSize","editButton","float","logoutButton","group","group1","name","fontWeight","borderBottom","textfield","minWidth","number","number1","post","nothing","postIcon","position","left","forumList","margin","palette","primary","main","secondary","typography","fontFamily","join","Profile","Component","state","edit","logout","userLevel","bio","username","email","occupation","birthday","openNewPost","openManagePost","author","title","authorAvatar","category","postFilter","sortOrder","commenter","commentContent","userInfo","usertype","userUpvotedPosts","userDownvotedPosts","userFollows","posts","handleEdit","setState","handleInputChange","event","console","log","target","value","i","length","charAt","toUpperCase","postComment","targetPostID","postID","targetPostIndex","findIndex","targetPost","filter","p","targetPostComments","comments","newComment","comment","push","otherPosts","splice","deletePosts","index","indexOf","addUpvote","numUpvotes","minusUpvote","addDownvote","numDownvotes","minusDownvote","changeUserState","authorUsertype","componentDidMount","render","classes","handleLogOut","password","props","textDecoration","color","map","thread"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography, \n        Grid,\n        Paper,\n        AppBar,\n        Toolbar,\n        Button,\n        Drawer,\n        withStyles, \n        createMuiTheme,\n        Tab,\n        Tabs,\n        Avatar,\n        ThemeProvider, \n        List,\n        Divider} from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nimport ForumListItem from '../Community/forumListItem';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Edit from './edit.js';\nimport Done from './done.js';\n\nconst drawerWidth = 400;\n\nconst useStyles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: deepPurple[50],\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        marginTop: theme.spacing(3),\n    },\n    numberGroup: {\n        paddingLeft: theme.spacing(15),\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'row',  \n        borderRadius: 10,\n        backgroundColor: deepPurple[100],\n        marginTop:  theme.spacing(3),\n        paddingLeft: 50,\n        paddingRight: 50,\n        marginRight: theme.spacing(20),\n    },\n    tabs: {\n        marginLeft: theme.spacing(3),\n    },\n    avatar: {\n        height: '100px',\n        width: '100px',\n        fontSize: '2em',\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(18.5),\n        backgroundColor: deepPurple[800],\n    },\n    editButton: {\n        float: 'right',\n        marginRight: theme.spacing(3),\n    },\n    logoutButton: {\n        float: 'right',\n        marginTop: theme.spacing(20),\n        marginRight: theme.spacing(3),\n    },\n    group: {\n        float: 'right',\n        marginRight: theme.spacing(30),\n    },\n    group1: {\n        float: 'right',\n        marginRight: theme.spacing(3),\n    },\n    name: {\n        fontWeight: 'bold',\n        fontSize: '1.6em',\n        borderBottom: 'none',\n    },\n    textfield: {\n        minWidth: 340,\n    },\n    number: {\n        marginLeft: theme.spacing(3),\n    },\n    number1: {\n        marginLeft: theme.spacing(2),\n    },\n    post: {\n        marginTop: theme.spacing(10),\n        marginLeft: theme.spacing(3),\n    },\n    nothing: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(30),\n    },\n    postIcon: {\n        fontSize: '5em',\n        position: 'relative',\n        marginTop: theme.spacing(10),\n        left: '50%',\n    },\n    forumList: {\n        backgroundColor: '#f0f0f0',\n        borderRadius: 5,\n        margin: theme.spacing(3),\n    },\n})\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: deepPurple[800],\n        },\n        secondary: {\n            main: deepPurple[100],\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Poppins',\n            'sans-serif',\n        ].join(','),\n    },\n});\n\n// All the profile information should be fetched from the database\n// that stores the user information\nclass Profile extends React.Component {\n\n    state = {\n        // if false, display edit; if true, display Done\n        edit: false,\n        logout: false,\n        userLevel: \"\",\n        avatar: \"\",\n        bio: \"An individual that is pursuing one's passions.\",\n        username: \"user\",\n        name: \"User X\",\n        email: \"user@123.com\",\n        occupation: \"student\",\n        birthday: \"2021-03-08\",\n        openNewPost: false,\n        openManagePost: false,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postFilter: \"\",\n        sortOrder: \"\",\n        commenter: \"\",\n        commentContent: \"\",\n        userInfo: {\n            username: \"\",\n            usertype: \"\",\n            userUpvotedPosts: [],\n            userDownvotedPosts: [],\n            userFollows: [],\n        },\n        posts:  \"\",\n    }\n\n    handleEdit = () => {\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n\n    handleInputChange = (event) => {\n        console.log(event)\n    \n        // get the value we type in \n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        console.log(value);\n        \n        if(name == \"username\") {\n            for(let i = 0; i < this.state.posts.length; i++) {\n                this.state.posts[i].author = value;\n                this.state.posts[i].authorAvatar = value.charAt(0).toUpperCase();\n            }\n            this.state.avatar = value.charAt(0).toUpperCase();\n            this.state.author = value;\n            this.state.commenter = value;\n        }\n        // state is updated and value is also updated in JSX\n        // the square bracket dynamically changes the name \n        this.setState({\n          [name]: value\n        })\n    };\n\n    postComment = (target) => {\n        const targetPostID = target.postID\n        console.log(targetPostID)\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        \n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        const targetPostComments = targetPost[0].comments\n    \n        const newComment = {\n          commenter: this.state.commenter,\n          commentContent: target.comment\n        }\n    \n        targetPostComments.push(newComment)\n        targetPost[0].comments = targetPostComments\n        \n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    \n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    \n        this.setState({ posts: otherPosts })\n    }\n\n    deletePosts = (target) => {\n        console.log(\"deleting post\")\n        const targetPostID = target.postID\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        console.log(\"posts length: \", otherPosts.length)\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n        if (index !== -1) {\n            userInfo.userUpvotedPosts.splice(index, 1)\n            this.setState({ userInfo: userInfo })\n    }\n    }\n\n    addUpvote = (target) => {\n        console.log(\"adding upvotes\")\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        userInfo.userUpvotedPosts.push(targetPostID)\n        this.setState({ userInfo: userInfo })\n    }\n\n    minusUpvote = (target) => {\n        console.log(\"subtracting upvotes\")\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n        if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1)\n        this.setState({ userInfo: userInfo })\n    }\n\n    addDownvote = (target) => {\n        console.log(\"adding downvotes\")\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        userInfo.userDownvotedPosts.push(targetPostID)\n        this.setState({ userInfo: userInfo })\n    }\n\n    minusDownvote = (target) => {\n        console.log(\"subtracting downvotes\")\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userDownvotedPosts.indexOf(targetPostID)\n        if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1)\n        this.setState({ userInfo: userInfo })\n    }\n\n    componentDidMount() {\n        this.changeUserState();\n    }\n\n    changeUserState = () => {\n        if(this.state.userLevel === \"User\") {\n            this.state.avatar = \"U\";\n            this.state.bio = \"An individual that is pursuing one's passions.\";\n            this.state.username = \"user\";\n            this.state.name = \"User X\";\n            this.state.email = \"user@123.com\";\n            this.state.occupation = \"Student\";\n            this.state.birthday = \"2021-03-08\";\n            this.state.posts = [\n                {author: 'User', \n                authorUsertype: \"RU\",\n                title: 'Welcome to communtiy', \n                content: 'this is the first community thread', \n                authorAvatar: \"U\",\n                category: \"Announcement\",\n                postID: 1,\n                numUpvotes: 5,\n                numDownvotes: 1,\n                comments: [\n                {commenter: \"User2\",\n                    commentContent: \"This is a great post\"},\n                {commenter: \"User3\",\n                    commentContent: \"This is a bad post\"}\n                ]\n                },\n                {author: 'User', \n                authorUsertype: \"RU\",\n                title: 'My second post', \n                content: 'This is the second post ever!!!!!!!', \n                authorAvatar: \"U\",\n                category: \"Opinion\",\n                postID: 2,\n                numUpvotes: 4,\n                numDownvotes: 2,\n                comments: [\n                {commenter: \"Financial Advisor3\",\n                    commentContent: \"You should come to my page to learn about financials\"},\n                {commenter: \"User4\",\n                    commentContent: \"Go buy GME!\"}\n                ]\n                }\n            ];\n            this.setState({\n                avatar: this.state.avatar,\n                bio: this.state.bio,\n                username: this.state.username,\n                name: this.state.name,\n                email: this.state.email,\n                occupation: this.state.occupation,\n                birthday: this.state.birthday,\n                posts: this.state.posts\n            })\n            \n        } else if(this.state.userLevel === \"Financial Advisor\") {\n            this.state.avatar = \"A\";\n            this.state.bio = \"A certified financial advisor, dedicated to help others\";\n            this.state.username = \"admin\";\n            this.state.name = \"Admin X\";\n            this.state.email = \"admin@123.com\";\n            this.state.occupation = \"Financial advisor\";\n            this.state.birthday = \"2021-03-08\";\n            this.state.posts = [\n                {author: 'Admin', \n                authorUsertype: \"FA\",\n                title: 'Welcome to communtiy', \n                content: 'I am the financial advisor', \n                authorAvatar: \"A\",\n                category: \"Announcement\",\n                postID: 1,\n                numUpvotes: 5,\n                numDownvotes: 1,\n                comments: [\n                {commenter: \"User2\",\n                    commentContent: \"This is a great post\"},\n                {commenter: \"User3\",\n                    commentContent: \"This is a bad post\"}\n                ]\n                },\n                {author: 'Admin', \n                authorUsertype: \"FA\",\n                title: 'My second post', \n                content: 'I am here to provide you guys with some help in financing', \n                authorAvatar: \"A\",\n                category: \"Opinion\",\n                postID: 2,\n                numUpvotes: 4,\n                numDownvotes: 2,\n                comments: [\n                {commenter: \"Financial Advisor3\",\n                    commentContent: \"You should come to my page to learn about financials\"},\n                {commenter: \"User4\",\n                    commentContent: \"Go buy GME!\"}\n                ]\n                }\n            ];\n            this.setState({\n                avatar: this.state.avatar,\n                bio: this.state.bio,\n                username: this.state.username,\n                name: this.state.name,\n                email: this.state.email,\n                occupation: this.state.occupation,\n                birthday: this.state.birthday,\n                posts: this.state.posts\n            })\n        }\n    }\n\n    render() {\n        const { classes, username, handleLogOut, password, userLevel } = this.props;\n\n        if(userLevel === \"User\") {\n            this.state.userLevel = \"User\"\n        } else if(userLevel === \"Financial Advisor\") {\n            this.state.userLevel = \"Financial Advisor\"\n        }\n\n        return ( \n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <AppBar color=\"secondary\" position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            <Typography variant='h6' noWrap>\n                                Profile\n                            </Typography>\n\n                            <Tabs inkBarStyle={{background: 'black'}} centered>\n                \n                                <Link to={'/spendings'} style={{ textDecoration: 'none', color: 'black' }} className={classes.tabs}>\n                                    <Tab label=\"Spendings\"/>\n                                </Link>\n\n                                <Link to={'/investments'} style={{ textDecoration: 'none', color: 'black' }} className={classes.tabs}>\n                                    <Tab label=\"Investments\"/>\n                                </Link>\n                                \n                                <Link to={'/community'} style={{ textDecoration: 'none', color: 'black' }} className={classes.tabs}>\n                                    <Tab label=\"Community\"/>\n                                </Link>\n\n                            </Tabs>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer className={classes.drawer} \n                            variant=\"permanent\"\n                            anchor=\"left\"\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                    >\n                        <Toolbar />\n                        <div className={classes.drawerContainer}>\n                            <Avatar align=\"center\"\n                                    name=\"avatar\"\n                                    value={this.state.avatar}\n                                    className={classes.avatar}>{ this.state.avatar }</Avatar>\n\n                            { this.state.edit ? \n                                <Edit \n                                    handleInputChange={ this.handleInputChange }\n                                    username={ this.state.username }\n                                    name={ this.state.name }\n                                    email={ this.state.email }\n                                    occupation={ this.state.occupation }\n                                    birthday={ this.state.birthday }\n                                    bio={ this.state.bio }\n                                />\n                                :\n                                <Done  \n                                    username={ this.state.username }\n                                    name={ this.state.name }\n                                    email={ this.state.email }\n                                    occupation={ this.state.occupation }\n                                    birthday={ this.state.birthday }\n                                    bio={ this.state.bio } \n                                />    \n                            }\n                            \n                            { this.state.edit ? \n                                <Button onClick={ this.handleEdit }\n                                        color=\"primary\" \n                                        variant=\"contained\" \n                                        className={classes.editButton}>\n                                    Done\n                                </Button>\n                            :\n                            <div>\n                                <Button onClick={ this.handleEdit }\n                                        color=\"primary\" \n                                        variant=\"contained\" \n                                        className={classes.editButton}>\n                                    Edit Profile\n                                </Button>\n                                <Link to={\"/\"}>\n                                    <Button onClick={ () => handleLogOut() }\n                                            color=\"primary\" \n                                            variant=\"contained\" \n                                            className={classes.logoutButton}>\n                                        Log Out\n                                    </Button>\n                                </Link>\n                            </div>\n                            }\n                        </div>\n                    </Drawer>\n                   \n                    <main className={classes.content}>\n                        <Grid container direction=\"row\" className={classes.numberGroup}>\n                            <Paper color=\"primary\" elevation={3} className={classes.paper}>\n                                <div className={classes.group}>\n                                    <Typography variant='h6'>\n                                        Followers\n                                    </Typography>\n                                    <Typography variant='h6' className={classes.number1}>\n                                        250\n                                    </Typography>\n                                </div>\n                                <div className={classes.group}>\n                                    <Typography variant='h6'>\n                                        Following\n                                    </Typography>\n                                    <Typography variant='h6' className={classes.number}>\n                                        300\n                                    </Typography>\n                                </div>\n                                <div className={classes.group1}>\n                                    <Typography variant='h6'>\n                                        Posts\n                                    </Typography>\n                                    <Typography variant='h6' className={classes.number}>\n                                        { this.state.posts.length }\n                                    </Typography>\n                                </div>\n                                </Paper>\n                        </Grid>\n\n                        <div>\n                            <Typography variant='h5' className={classes.post}>\n                                My posts:\n                            </Typography>\n\n                            { this.state.posts == \"\" ? \n                                <div>\n                                    <PostAddIcon className={classes.postIcon}/>\n                                    <Typography variant='h5' className={classes.nothing}>\n                                        You don't have anything posted yet. Go post something!\n                                    </Typography>\n                                </div>\n                                :\n                                <List className={ classes.forumList }>\n                                    { this.state.posts.map((thread) => {\n                                        if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n                                            return (\n                                            <div>\n                                                <ForumListItem postTitle={ thread.title }\n                                                            postAuthor={ thread.author }\n                                                            postAuthorUsertype={ thread.authorUsertype}\n                                                            postTextContent={ thread.content }\n                                                            avatar={ thread.authorAvatar }\n                                                            category={ thread.category }\n                                                            comments={ thread.comments }\n                                                            postID={ thread.postID }\n                                                            openManagePost={ this.state.openManagePost ? true : false }\n                                                            numUpvotes={ thread.numUpvotes }\n                                                            numDownvotes={ thread.numDownvotes }\n                                                            userInfo={ this.state.userInfo }\n                                                            addUpvote={ this.addUpvote }\n                                                            minusUpvote={ this.minusUpvote }\n                                                            addDownvote={ this.addDownvote }\n                                                            minusDownvote={ this.minusDownvote }\n                                                            deletePosts={ this.deletePosts }\n                                                            postComment={ this.postComment }/>\n                                                { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                                            </div>\n                                            )\n                                        }\n                                    })\n                                }\n                                </List>\n                            }\n                            \n                        </div>\n                    </main> \n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Profile);"]},"metadata":{},"sourceType":"module"}