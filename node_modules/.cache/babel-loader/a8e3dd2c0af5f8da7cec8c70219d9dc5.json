{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Spendings/index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { withStyles } from '@material-ui/core';\nimport TableComp from '../Table';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; // import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem'; // import ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport './spendings.css';\nimport pieChart from './pieChart.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = () => ({\n  drawer_paper: {\n    position: \"relative\",\n    height: \"100%\"\n  }\n});\n\nclass Spendings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sumAccountBalance = () => {\n      this.state.accountBalance = this.state.transactions_data.reduce((total, current) => {\n        let sum = parseFloat(total) + parseFloat(current[\"Amount\"]);\n        sum = sum.toFixed(2);\n        return sum;\n      }, 0);\n      this.setState({\n        accountBalance: this.state.accountBalance\n      });\n    };\n\n    this.sortObj = (a, b) => {\n      switch (this.state.sortBy) {\n        case \"Date\":\n          if (!this.state.sortDes[\"Date\"]) {\n            if (a[\"Date\"] < b[\"Date\"]) return -1;else return 1;\n          } else {\n            if (a[\"Date\"] > b[\"Date\"]) return -1;else return 1;\n          }\n\n        case \"Amount\":\n          if (!this.state.sortDes[\"Amount\"]) {\n            if (parseFloat(a[\"Amount\"]) < parseFloat(b[\"Amount\"])) return -1;else return 1;\n          } else {\n            if (parseFloat(a[\"Amount\"]) > parseFloat(b[\"Amount\"])) return -1;else return 1;\n          }\n\n        case \"Category\":\n          if (!this.state.sortDes[\"Category\"]) {\n            if (a[\"Category\"] < b[\"Category\"]) return -1;else return 1;\n          } else {\n            if (a[\"Category\"] > b[\"Category\"]) return -1;else return 1;\n          }\n\n        case \"Default\":\n          return;\n      }\n    };\n\n    this.sortTransactions = () => {\n      this.state.transactions_data.sort(this.sortObj);\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n    };\n\n    this.addTransaction = newTransaction => {\n      this.state.transactions_data.unshift(newTransaction);\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n    };\n\n    this.editTransaction = (oldTransaction, newTransaction) => {\n      const index = this.state.transactions_data.findIndex(t => t === oldTransaction);\n      this.state.transactions_data[index] = newTransaction;\n      this.setState({\n        transactions_data: this.state.transactions_data\n      });\n    };\n\n    this.deleteTransaction = transaction => {\n      const keepTransactions = this.state.transactions_data.filter(t => t !== transaction);\n      this.setState({\n        transactions_data: keepTransactions\n      });\n    };\n\n    this.addCategory = newCategory => {\n      if (!this.state.transactions_categories.includes(newCategory)) this.state.transactions_categories.push(newCategory);\n      this.setState({\n        transactions_categories: this.state.transactions_categories\n      });\n    };\n\n    this.deleteCategory = category => {\n      const keepCategories = this.state.transactions_categories.filter(c => c !== category);\n      this.setState({\n        transactions_categories: keepCategories\n      });\n    };\n\n    this.toggleDrawer = () => {\n      this.state.openDrawer = !this.state.openDrawer;\n      this.setState({\n        openDrawer: this.state.openDrawer\n      });\n    };\n\n    this.state = {\n      // the headings to appear in the header bar \n      transactions_headings: [\"Date\", \"Amount\", \"Description\", \"Category\"],\n      // the options for each transaction for the table to know which kind of cell to display\n      transactions_options: [\"Date\", \"Number\", \"Any\", \"Select\"],\n      // a list of the categories that the transaction falls under \n      transactions_categories: [\"Food\", \"Personal\", \"Transportation\", \"Home\"],\n      // the data to appear in each rows of the table \n      transactions_data: [{\n        \"Date\": \"02/01/2021\",\n        \"Amount\": \"35.23\",\n        \"Description\": \"McDonalds\",\n        \"Category\": \"Food\"\n      }, {\n        \"Date\": \"02/03/2021\",\n        \"Amount\": \"26.38\",\n        \"Description\": \"Starbucks\",\n        \"Category\": \"Food\"\n      }, {\n        \"Date\": \"02/05/2021\",\n        \"Amount\": \"136.83\",\n        \"Description\": \"Runners\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/07/2021\",\n        \"Amount\": \"13.28\",\n        \"Description\": \"Movies\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/09/2021\",\n        \"Amount\": \"52.85\",\n        \"Description\": \"Presto Card\",\n        \"Category\": \"Transportation\"\n      }, {\n        \"Date\": \"02/12/2021\",\n        \"Amount\": \"83.16\",\n        \"Description\": \"Internet + Utilities\",\n        \"Category\": \"Home\"\n      }, {\n        \"Date\": \"02/15/2021\",\n        \"Amount\": \"267.33\",\n        \"Description\": \"Gift for Joe\",\n        \"Category\": \"Personal\"\n      }, {\n        \"Date\": \"02/18/2021\",\n        \"Amount\": \"8.37\",\n        \"Description\": \"Bubble Tea\",\n        \"Category\": \"Food\"\n      }],\n      // the net balance on the account \n      accountBalance: 0,\n      // current sorting by string, default is sort by date\n      sortBy: \"Date\",\n      // sorting in an ascending/descending order\n      sortDes: {\n        \"Date\": false,\n        \"Amount\": false,\n        \"Category\": false\n      },\n      // true for displaying the drawer (sidebar for months), false to hide\n      openDrawer: false\n    };\n    this.sumAccountBalance();\n  } // array form for data \n  // [\"02/01/2021\", \"35.23\", \"McDonalds\", \"Food\"],\n  // [\"02/03/2021\", \"26.38\", \"Starbucks\", \"Food\"],\n  // [\"02/05/2021\", \"136.83\", \"Runners\", \"Personal\"],\n  // [\"02/07/2021\", \"13.28\", \"Movies\", \"Personal\"],\n  // [\"02/09/2021\", \"52.85\", \"Presto Card\", \"Transportation\"],\n  // [\"02/12/2021\", \"83.16\", \"Internet + Utilities\", \"Home\"],\n  // [\"02/15/2021\", \"267.33\", \"Gift for Joe\", \"Personal\"],\n  // [\"02/18/2021\", \"8.37\", \"Bubble Tea\", \"Food\"]\n  // just in case if we need to switch structure to obj \n  // {\"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\"},\n  // {\"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\"},\n  // {\"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\"},\n\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance();\n  }\n\n  changeSort(sortBy) {\n    this.state.sortBy = sortBy;\n    this.setState({\n      sortBy: this.state.sortBy\n    });\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy];\n    this.setState({\n      sortDes: this.state.sortDes\n    });\n    this.sortTransactions();\n  }\n\n  render() {\n    const {\n      loggedIn,\n      classes\n    } = this.props;\n    return loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DrawerDiv\",\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          classes: {\n            paper: classes.drawer_paper,\n            paperAnchorDocked: classes.drawer_paper\n          },\n          variant: \"permanent\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pieChart,\n            alt: \"pieChart\",\n            style: {\n              marginRight: \"auto\",\n              marginLeft: \"auto\",\n              width: \"50%\",\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AccountBalance\",\n            children: [\"Total Amount: \", this.state.accountBalance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Table\",\n          children: [/*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n          , {\n            classes: {\n              TableContainer: 'TableContainer'\n            },\n            headings: this.state.transactions_headings,\n            data: this.state.transactions_data,\n            options: this.state.transactions_options,\n            categories: this.state.transactions_categories,\n            addRow: this.addTransaction,\n            editRow: this.editTransaction,\n            removeRow: this.deleteTransaction,\n            addCategory: this.addCategory,\n            removeCategory: this.deleteCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SortButtons\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Date\"),\n                    children: [\"Sort By Date\", this.state.sortDes[\"Date\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 81\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Amount\"),\n                    children: [\"Sort By Amount\", this.state.sortDes[\"Amount\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 59\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 83\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"SortButton\",\n                    variant: this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\",\n                    onClick: () => this.changeSort(\"Category\"),\n                    children: [\"Sort By Category\", this.state.sortDes[\"Category\"] ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 61\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 85\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Spendings);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Spendings/index.js"],"names":["React","Redirect","withStyles","TableComp","Button","ArrowUpwardIcon","ArrowDownwardIcon","Grid","Paper","Drawer","List","ListItem","ListItemText","pieChart","useStyles","drawer_paper","position","height","Spendings","Component","constructor","props","sumAccountBalance","state","accountBalance","transactions_data","reduce","total","current","sum","parseFloat","toFixed","setState","sortObj","a","b","sortBy","sortDes","sortTransactions","sort","addTransaction","newTransaction","unshift","editTransaction","oldTransaction","index","findIndex","t","deleteTransaction","transaction","keepTransactions","filter","addCategory","newCategory","transactions_categories","includes","push","deleteCategory","category","keepCategories","c","toggleDrawer","openDrawer","transactions_headings","transactions_options","componentDidUpdate","undefined","prevState","changeSort","render","loggedIn","classes","paper","paperAnchorDocked","map","text","marginRight","marginLeft","width","display","TableContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { withStyles } from '@material-ui/core'\nimport TableComp from '../Table'\n\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport './spendings.css'\nimport pieChart from './pieChart.png'\n\nconst useStyles = () => ({\n  drawer_paper: {\n    position: \"relative\",\n    height: \"100%\"\n  }\n})\n\nclass Spendings extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // the headings to appear in the header bar \n      transactions_headings: [\"Date\", \"Amount\", \"Description\", \"Category\"],\n      // the options for each transaction for the table to know which kind of cell to display\n      transactions_options: [\"Date\", \"Number\", \"Any\", \"Select\"],\n      // a list of the categories that the transaction falls under \n      transactions_categories: [\"Food\", \"Personal\", \"Transportation\", \"Home\"],\n      // the data to appear in each rows of the table \n      transactions_data: [\n        { \"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\" },\n        { \"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\" },\n        { \"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\" },\n        { \"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\" },\n        { \"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\" },\n        { \"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\" },\n      ],\n      // the net balance on the account \n      accountBalance: 0,\n      // current sorting by string, default is sort by date\n      sortBy: \"Date\",\n      // sorting in an ascending/descending order\n      sortDes: {\n        \"Date\": false,\n        \"Amount\": false,\n        \"Category\": false\n      },\n      // true for displaying the drawer (sidebar for months), false to hide\n      openDrawer: false\n    }\n\n    this.sumAccountBalance()\n\n  }\n\n  // array form for data \n  // [\"02/01/2021\", \"35.23\", \"McDonalds\", \"Food\"],\n  // [\"02/03/2021\", \"26.38\", \"Starbucks\", \"Food\"],\n  // [\"02/05/2021\", \"136.83\", \"Runners\", \"Personal\"],\n  // [\"02/07/2021\", \"13.28\", \"Movies\", \"Personal\"],\n  // [\"02/09/2021\", \"52.85\", \"Presto Card\", \"Transportation\"],\n  // [\"02/12/2021\", \"83.16\", \"Internet + Utilities\", \"Home\"],\n  // [\"02/15/2021\", \"267.33\", \"Gift for Joe\", \"Personal\"],\n  // [\"02/18/2021\", \"8.37\", \"Bubble Tea\", \"Food\"]\n\n  // just in case if we need to switch structure to obj \n  // {\"Date\": \"02/01/2021\", \"Amount\": \"35.23\", \"Description\": \"McDonalds\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/03/2021\", \"Amount\": \"26.38\", \"Description\": \"Starbucks\", \"Category\": \"Food\"},\n  // {\"Date\": \"02/05/2021\", \"Amount\": \"136.83\", \"Description\": \"Runners\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/07/2021\", \"Amount\": \"13.28\", \"Description\": \"Movies\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/09/2021\", \"Amount\": \"52.85\", \"Description\": \"Presto Card\", \"Category\": \"Transportation\"},\n  // {\"Date\": \"02/12/2021\", \"Amount\": \"83.16\", \"Description\": \"Internet + Utilities\", \"Category\": \"Home\"},\n  // {\"Date\": \"02/15/2021\", \"Amount\": \"267.33\", \"Description\": \"Gift for Joe\", \"Category\": \"Personal\"},\n  // {\"Date\": \"02/18/2021\", \"Amount\": \"8.37\", \"Description\": \"Bubble Tea\", \"Category\": \"Food\"},\n\n  componentDidUpdate(undefined, prevState) {\n    // only update the account balance if any transaction has been modified\n    if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance()\n  }\n\n  sumAccountBalance = () => {\n    this.state.accountBalance = this.state.transactions_data.reduce((total, current) => {\n      let sum = parseFloat(total) + parseFloat(current[\"Amount\"])\n      sum = sum.toFixed(2)\n      return sum\n    }, 0)\n    this.setState({ accountBalance: this.state.accountBalance })\n  }\n\n  sortObj = (a, b) => {\n\n    switch (this.state.sortBy) {\n\n      case \"Date\":\n        if (!this.state.sortDes[\"Date\"]) {\n          if (a[\"Date\"] < b[\"Date\"]) return -1\n          else return 1\n        }\n        else {\n          if (a[\"Date\"] > b[\"Date\"]) return -1\n          else return 1\n        }\n\n      case \"Amount\":\n        if (!this.state.sortDes[\"Amount\"]) {\n          if (parseFloat(a[\"Amount\"]) < parseFloat(b[\"Amount\"])) return -1\n          else return 1\n        }\n        else {\n          if (parseFloat(a[\"Amount\"]) > parseFloat(b[\"Amount\"])) return -1\n          else return 1\n        }\n\n      case \"Category\":\n        if (!this.state.sortDes[\"Category\"]) {\n          if (a[\"Category\"] < b[\"Category\"]) return -1\n          else return 1\n        }\n        else {\n          if (a[\"Category\"] > b[\"Category\"]) return -1\n          else return 1\n        }\n\n      case \"Default\":\n        return\n\n    }\n\n  }\n\n  // sorting the transactions based on the currently selected element \n  sortTransactions = () => {\n    this.state.transactions_data.sort(this.sortObj)\n    this.setState({ transactions_data: this.state.transactions_data })\n  }\n\n  // add newTransaction to the beginning of the transactions_data array \n  addTransaction = (newTransaction) => {\n    this.state.transactions_data.unshift(newTransaction)\n    this.setState({ transactions_data: this.state.transactions_data })\n  }\n\n  // finds the index of the oldTransaction data and replace it with the newTransaction data\n  editTransaction = (oldTransaction, newTransaction) => {\n    const index = this.state.transactions_data.findIndex(t => t === oldTransaction)\n    this.state.transactions_data[index] = newTransaction\n    this.setState({ transactions_data: this.state.transactions_data })\n  }\n\n  // deletes transaction from transactions_data array \n  deleteTransaction = (transaction) => {\n    const keepTransactions = this.state.transactions_data.filter(t => t !== transaction)\n    this.setState({ transactions_data: keepTransactions })\n  }\n\n  // adds a user defined category \n  addCategory = (newCategory) => {\n    if (!this.state.transactions_categories.includes(newCategory))\n      this.state.transactions_categories.push(newCategory)\n    this.setState({ transactions_categories: this.state.transactions_categories })\n  }\n\n  // deletes a user defined category (the default cannot be deleted)\n  deleteCategory = (category) => {\n    const keepCategories = this.state.transactions_categories.filter(c => c !== category)\n    this.setState({ transactions_categories: keepCategories })\n  }\n\n  changeSort(sortBy) {\n    this.state.sortBy = sortBy\n    this.setState({ sortBy: this.state.sortBy })\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy]\n    this.setState({ sortDes: this.state.sortDes })\n    this.sortTransactions()\n  }\n\n  toggleDrawer = () => {\n    this.state.openDrawer = !this.state.openDrawer\n    this.setState({ openDrawer: this.state.openDrawer })\n  }\n\n  render() {\n\n    const { loggedIn, classes } = this.props\n\n    return (\n\n      loggedIn ?\n\n        <div>\n\n          <div className=\"DrawerDiv\">\n\n            {/* <IconButton className=\"OpenDrawerButton\"\n                // color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={() => this.toggleDrawer()}\n              // edge=\"start\"\n              // className={clsx(classes.menuButton, {\n              //   [classes.hide]: open,\n              // })}\n              >\n                <MenuIcon />\n              </IconButton> */}\n\n            <Drawer classes={{ paper: classes.drawer_paper, paperAnchorDocked: classes.drawer_paper }}\n              variant=\"permanent\"\n            >\n\n              <List>\n                {[\"Jan\", \"Feb\", \"Mar\", \"Apr\"].map((text, index) => (\n                  <ListItem button key={text}>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n\n          </div>\n\n          <div className=\"Content\">\n\n            <div className=\"Chart\">\n\n              <img src={pieChart} alt=\"pieChart\" style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"50%\", display: \"block\" }}></img>\n\n              <div className=\"AccountBalance\">\n                Total Amount: {this.state.accountBalance}\n              </div>\n\n            </div>\n\n            <div className=\"Table\">\n\n              <TableComp\n                // use the TableContainer class to style the table itself \n                classes={{ TableContainer: 'TableContainer' }}\n                headings={this.state.transactions_headings}\n                data={this.state.transactions_data}\n                options={this.state.transactions_options}\n                categories={this.state.transactions_categories}\n                addRow={this.addTransaction}\n                editRow={this.editTransaction}\n                removeRow={this.deleteTransaction}\n                addCategory={this.addCategory}\n                removeCategory={this.deleteCategory}\n              />\n\n              <div className=\"SortButtons\">\n\n                <Grid container spacing={3}>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Date\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Date\")}>\n                        Sort By Date\n                          {this.state.sortDes[\"Date\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Amount\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Amount\")}>\n                        Sort By Amount\n                          {this.state.sortDes[\"Amount\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </ Button>\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={4}>\n                    <Paper>\n                      <Button\n                        className=\"SortButton\"\n                        variant={this.state.sortBy == \"Category\" ? \"contained\" : \"outlined\"}\n                        onClick={() => this.changeSort(\"Category\")}>\n                        Sort By Category\n                          {this.state.sortDes[\"Category\"] ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                      </Button>\n                    </Paper>\n                  </Grid>\n\n                </Grid>\n\n              </div>\n\n            </div>\n            \n          </div>\n\n        </div>\n\n        : <Redirect to=\"/login\" />\n\n    )\n\n  }\n\n}\n\nexport default withStyles(useStyles)(Spendings);"]},"metadata":{},"sourceType":"module"}