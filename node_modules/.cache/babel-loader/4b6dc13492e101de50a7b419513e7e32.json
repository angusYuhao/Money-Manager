{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react'; // import Input from './Input'\n// import StockList from './StockList'\n// import Canvas from './canvasExample'\n\nimport PieChart from './PieChart';\nimport BarChart from './BarChart';\nimport TableComp from '../Table';\nimport './investments.css';\nimport SortButton from './SortButton';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography'; // import Title from './Title'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n});\n\nclass Investments extends React.Component {\n  // componentDidUpdate(undefined, prevState) {\n  //   // only update the account balance if any transaction has been modified\n  //   if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance()\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      //general stock data\n      stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book Cost\", \"Gain/Loss\"],\n      stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n      stockList_categories: [],\n      stocklist_data: [{\n        \"Name\": \"FB\",\n        \"Quantity\": 15,\n        \"Price\": 310.0,\n        \"Average Cost\": 232.5,\n        \"Market Value\": 4560,\n        \"Book Cost\": 3487.5,\n        \"Gain/Loss\": 1072.5\n      }, {\n        \"Name\": \"GOOGL\",\n        \"Quantity\": 3,\n        \"Price\": 1500.40,\n        \"Average Cost\": 1523,\n        \"Market Value\": 4501.2,\n        \"Book Cost\": 4569,\n        \"Gain/Loss\": -67.8\n      }, {\n        \"Name\": \"PDD\",\n        \"Quantity\": 8,\n        \"Price\": 260.03,\n        \"Average Cost\": 190,\n        \"Market Value\": 1840.24,\n        \"Book Cost\": 2080.24,\n        \"Gain/Loss\": -240\n      }, {\n        \"Name\": \"GME\",\n        \"Quantity\": 11,\n        \"Price\": 280.45,\n        \"Average Cost\": 340,\n        \"Market Value\": 3084.95,\n        \"Book Cost\": 3740,\n        \"Gain/Loss\": -655.05\n      }, {\n        \"Name\": \"MSFT\",\n        \"Quantity\": 4,\n        \"Price\": 330.0,\n        \"Average Cost\": 230,\n        \"Market Value\": 1320,\n        \"Book Cost\": 920,\n        \"Gain/Loss\": 1473.56\n      }, {\n        \"Name\": \"BABA\",\n        \"Quantity\": 17,\n        \"Price\": 222.98,\n        \"Average Cost\": 136.3,\n        \"Market Value\": 3790.66,\n        \"Book Cost\": 2317.1,\n        \"Gain/Loss\": 1473.56\n      }, {\n        \"Name\": \"V\",\n        \"Quantity\": 20,\n        \"Price\": 233.0,\n        \"Average Cost\": 220,\n        \"Market Value\": 4660,\n        \"Book Cost\": 4400,\n        \"Gain/Loss\": 260\n      }, {\n        \"Name\": \"SHOP\",\n        \"Quantity\": 20,\n        \"Price\": 233.8,\n        \"Average Cost\": 220,\n        \"Market Value\": 4676,\n        \"Book Cost\": 4400,\n        \"Gain/Loss\": 276\n      }],\n      //table values\n      sortBy: \"Market Value\",\n      sortDes: {\n        \"Name\": false,\n        \"Quantity\": false,\n        \"Market Value\": false,\n        \"Gain/Loss\": false\n      },\n      openDrawer: false,\n      //Pie chart values\n      pieChartSize: 650,\n      pieChartRadius: 175\n    };\n\n    this.sortObj = (a, b) => {\n      switch (this.state.sortBy) {\n        case \"Name\":\n          if (!this.state.sortDes[\"Name\"]) {\n            if (a[\"Name\"] < b[\"Name\"]) return -1;else return 1;\n          } else {\n            if (a[\"Name\"] > b[\"Name\"]) return -1;else return 1;\n          }\n\n        case \"Quantity\":\n          if (!this.state.sortDes[\"Quantity\"]) {\n            if (parseFloat(a[\"Quantity\"]) < parseFloat(b[\"Quantity\"])) return -1;else return 1;\n          } else {\n            if (parseFloat(a[\"Quantity\"]) > parseFloat(b[\"Quantity\"])) return -1;else return 1;\n          }\n\n        case \"Market Value\":\n          if (!this.state.sortDes[\"Market Value\"]) {\n            if (parseFloat(a[\"Market Value\"]) < parseFloat(b[\"Market Value\"])) return -1;else return 1;\n          } else {\n            if (parseFloat(a[\"Market Value\"]) > parseFloat(b[\"Market Value\"])) return -1;else return 1;\n          }\n\n        case \"Gain/Loss\":\n          if (!this.state.sortDes[\"Gain/Loss\"]) {\n            if (parseFloat(a[\"Gain/Loss\"]) < parseFloat(b[\"Gain/Loss\"])) return -1;else return 1;\n          } else {\n            if (parseFloat(a[\"Gain/Loss\"]) > parseFloat(b[\"Gain/Loss\"])) return -1;else return 1;\n          }\n\n        case \"Default\":\n          return;\n      }\n    };\n\n    this.sortStocks = () => {\n      this.state.stocklist_data.sort(this.sortObj);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.addStock = newStock => {\n      this.state.stocklist_data.unshift(newStock);\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.editStock = (oldStock, newStock) => {\n      console.log(\"Edit\");\n      const index = this.state.stocklist_data.findIndex(t => t === oldStock);\n      this.state.stocklist_data[index] = newStock;\n      this.setState({\n        stocklist_data: this.state.stocklist_data\n      });\n    };\n\n    this.deleteStock = transaction => {\n      const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction);\n      this.setState({\n        stocklist_data: keepTransactions\n      });\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      console.log(this.state.bookCost);\n      console.log(this.state.totalAmountInvested);\n      let a = Number(this.state.quantity) * Number(this.state.price);\n      console.log(Number(this.totalAmountInvested) + Number(a));\n      const stock = {\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: Number(this.state.quantity) * Number(this.state.price),\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: Number(this.state.bookCost) / (Number(this.state.bookCost) + Number(this.state.totalAmountInvested)) * 100,\n        totalAmountInvested: Number(this.totalAmountInvested) + Number(this.bookCost)\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(Number(stock.totalAmountInvested));\n      console.log(currList);\n\n      for (let i = 0; i < this.state.stockList.length; i++) {\n        let allStocks = [...this.state.stockList]; // 2. Make a shallow copy of the item you want to mutate\n\n        let currentStock = { ...allStocks[i]\n        }; // 3. Replace the property you're intested in\n\n        console.log(Number(currentStock.bookCost));\n        console.log(Number(currentStock.totalAmountInvested));\n        currentStock.percentageOfPortfolio = Number(currentStock.bookCost) / Number(currentStock.totalAmountInvested); // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n        allStocks[i] = currentStock; // 5. Set the state to our new copy\n\n        this.setState({\n          allStocks\n        }); // console.log(this.state.stockList[i].percentageOfPortfolio)\n        // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n        // console.log(this.state.stockList[i].percentageOfPortfolio)\n      }\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n    };\n\n    this.changeSort = this.changeSort.bind(this);\n  }\n\n  changeSort(sortBy) {\n    console.log(\"Sorting!\");\n    this.state.sortBy = sortBy;\n    this.setState({\n      sortBy: this.state.sortBy\n    });\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy];\n    this.setState({\n      sortDes: this.state.sortDes\n    });\n    this.sortStocks();\n  }\n\n  //   //student is the object to reference\n  // deleteStock = (stock) => {\n  //   //make var because not mutating this \n  //   console.log(\"Delete\")\n  //   const filteredStock = this.state.stockList.filter((s) => {\n  //     return s !== stock  //the one's we don't want to remove\n  //   })\n  //   this.setState({\n  //     stockList: filteredStock\n  //   })\n  // }\n  // editStock = (stock, valueToEdit) => {\n  //   console.log(\"Editing stock\")\n  //   console.log(stock)\n  //   console.log(\"Value\")\n  //   console.log(valueToEdit)\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InvestmentPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PieChartTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TitleAndPieChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StockPieChartTitle\",\n            children: \"Stock Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PieChart\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              listToDisplay: this.state.stocklist_data,\n              pieChartSize: this.state.pieChartSize,\n              pieChartRadius: this.state.pieChartRadius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"StockList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StockTable\",\n            width: \"100vw\",\n            children: /*#__PURE__*/_jsxDEV(TableComp // use the TableContainer class to style the table itself \n            , {\n              classes: {\n                TableContainer: 'TableContainer'\n              },\n              headings: this.state.stockList_headings,\n              data: this.state.stocklist_data,\n              options: this.state.stockList_options,\n              categories: this.state.stockList_categories,\n              addRow: this.addStock,\n              editRow: this.editStock,\n              removeRow: this.deleteStock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SortButtons\",\n            children: [/*#__PURE__*/_jsxDEV(SortButton, {\n              categoryName: \"Name\",\n              callBackFunction: this.changeSort,\n              sortDes: this.state.sortDes,\n              sortBy: this.state.sortBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortButton, {\n              categoryName: \"Quantity\",\n              callBackFunction: this.changeSort,\n              sortDes: this.state.sortDes,\n              sortBy: this.state.sortBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortButton, {\n              categoryName: \"Market Value\",\n              callBackFunction: this.changeSort,\n              sortDes: this.state.sortDes,\n              sortBy: this.state.sortBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortButton, {\n              categoryName: \"Gain/Loss\",\n              callBackFunction: this.changeSort,\n              sortDes: this.state.sortDes,\n              sortBy: this.state.sortBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortButton, {\n              categoryName: \"Percentage of portfolio\",\n              callBackFunction: this.changeSort,\n              sortDes: this.state.sortDes,\n              sortBy: this.state.sortBy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BarChart\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          listToDisplay: this.state.stocklist_data,\n          col: \"Gain/Loss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","PieChart","BarChart","TableComp","SortButton","Button","Paper","Card","CardActions","CardContent","Typography","theme","createMuiTheme","palette","primary","main","deepPurple","secondary","typography","fontFamily","join","Investments","Component","constructor","props","state","stockList_headings","stockList_options","stockList_categories","stocklist_data","sortBy","sortDes","openDrawer","pieChartSize","pieChartRadius","sortObj","a","b","parseFloat","sortStocks","sort","setState","addStock","newStock","unshift","editStock","oldStock","console","log","index","findIndex","t","deleteStock","transaction","keepTransactions","filter","handleInputStock","bookCost","totalAmountInvested","Number","quantity","price","stock","name","avgCost","mktValue","gainLoss","percentageOfPortfolio","currList","stockList","push","i","length","allStocks","currentStock","handleInputChange","event","target","value","changeSort","bind","render","TableContainer"],"mappings":"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","sourcesContent":["import React from 'react';\n// import Input from './Input'\n// import StockList from './StockList'\n// import Canvas from './canvasExample'\nimport PieChart from './PieChart'\nimport BarChart from './BarChart'\nimport TableComp from '../Table'\nimport './investments.css'\nimport SortButton from './SortButton';\nimport Button from '@material-ui/core/Button';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// import Title from './Title'\n\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\nclass Investments extends React.Component {\n\n  state = {\n    //general stock data\n    stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost\", \"Market Value\", \"Book Cost\", \"Gain/Loss\"],\n    stockList_options: [\"Any\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\", \"Number\"],\n    stockList_categories: [],\n    stocklist_data: [{\"Name\": \"FB\", \"Quantity\": 15, \"Price\": 310.0, \"Average Cost\": 232.5,  \"Market Value\": 4560, \"Book Cost\": 3487.5, \"Gain/Loss\":1072.5},\n    {\"Name\": \"GOOGL\", \"Quantity\": 3, \"Price\": 1500.40, \"Average Cost\": 1523,  \"Market Value\": 4501.2, \"Book Cost\": 4569, \"Gain/Loss\":-67.8 },\n    {\"Name\": \"PDD\", \"Quantity\": 8, \"Price\": 260.03, \"Average Cost\": 190,  \"Market Value\": 1840.24, \"Book Cost\": 2080.24, \"Gain/Loss\":-240},\n    {\"Name\": \"GME\", \"Quantity\": 11, \"Price\": 280.45, \"Average Cost\": 340,  \"Market Value\": 3084.95, \"Book Cost\": 3740, \"Gain/Loss\":-655.05 },\n    {\"Name\": \"MSFT\", \"Quantity\": 4, \"Price\": 330.0, \"Average Cost\": 230,  \"Market Value\": 1320, \"Book Cost\": 920, \"Gain/Loss\":1473.56},\n    {\"Name\": \"BABA\", \"Quantity\": 17, \"Price\": 222.98, \"Average Cost\": 136.3,  \"Market Value\": 3790.66, \"Book Cost\": 2317.1, \"Gain/Loss\":1473.56 },\n    {\"Name\": \"V\", \"Quantity\": 20, \"Price\": 233.0, \"Average Cost\": 220,  \"Market Value\": 4660, \"Book Cost\": 4400, \"Gain/Loss\":260},\n    {\"Name\": \"SHOP\", \"Quantity\": 20, \"Price\": 233.8, \"Average Cost\": 220,  \"Market Value\": 4676, \"Book Cost\": 4400, \"Gain/Loss\":276}],\n\n    //table values\n    sortBy: \"Market Value\",\n    sortDes: {\n      \"Name\": false,\n      \"Quantity\": false,\n      \"Market Value\": false,\n      \"Gain/Loss\": false,\n    },\n    openDrawer: false,\n\n    //Pie chart values\n    pieChartSize: 650,\n    pieChartRadius: 175,\n  }\n\n  // componentDidUpdate(undefined, prevState) {\n  //   // only update the account balance if any transaction has been modified\n  //   if (prevState.transactions_data != this.state.transactions_data) this.sumAccountBalance()\n  // }\n \n  constructor(props) {\n    super(props);\n    this.changeSort = this.changeSort.bind(this);\n  }\n\n  sortObj = (a, b) => {\n\n    switch (this.state.sortBy) {\n\n      case \"Name\":\n        if (!this.state.sortDes[\"Name\"]) {\n          if (a[\"Name\"] < b[\"Name\"]) return -1\n          else return 1\n        }\n        else {\n          if (a[\"Name\"] > b[\"Name\"]) return -1\n          else return 1\n        }\n\n      case \"Quantity\":\n        if (!this.state.sortDes[\"Quantity\"]) {\n          if (parseFloat(a[\"Quantity\"]) < parseFloat(b[\"Quantity\"])) return -1\n          else return 1\n        }\n        else {\n          if (parseFloat(a[\"Quantity\"]) > parseFloat(b[\"Quantity\"])) return -1\n          else return 1\n        }\n\n      case \"Market Value\":\n        if (!this.state.sortDes[\"Market Value\"]) {\n          if (parseFloat(a[\"Market Value\"]) < parseFloat(b[\"Market Value\"])) return -1\n          else return 1\n        }\n        else {\n          if (parseFloat(a[\"Market Value\"]) > parseFloat(b[\"Market Value\"])) return -1\n          else return 1\n        }\n      case \"Gain/Loss\":\n        if (!this.state.sortDes[\"Gain/Loss\"]) {\n          if (parseFloat(a[\"Gain/Loss\"]) < parseFloat(b[\"Gain/Loss\"])) return -1\n          else return 1\n        }\n        else {\n          if (parseFloat(a[\"Gain/Loss\"]) > parseFloat(b[\"Gain/Loss\"])) return -1\n          else return 1\n        }\n    \n\n      case \"Default\":\n        return\n\n    }\n\n  }\n\n\n\n  // sorting the transactions based on the currently selected element \n  sortStocks = () => {\n    this.state.stocklist_data.sort(this.sortObj)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // add newTransaction to the beginning of the transactions_data array \n  addStock = (newStock) => {\n    this.state.stocklist_data.unshift(newStock)\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // finds the index of the oldTransaction data and replace it with the newTransaction data\n  editStock = (oldStock, newStock) => {\n    console.log(\"Edit\")\n    const index = this.state.stocklist_data.findIndex(t => t === oldStock)\n    this.state.stocklist_data[index] = newStock\n    this.setState({ stocklist_data: this.state.stocklist_data })\n  }\n\n  // deletes transaction from transactions_data array \n  deleteStock = (transaction) => {\n    const keepTransactions = this.state.stocklist_data.filter(t => t !== transaction)\n    this.setState({ stocklist_data: keepTransactions })\n  }\n\n  changeSort(sortBy) {\n    console.log(\"Sorting!\")\n    this.state.sortBy = sortBy\n    this.setState({ sortBy: this.state.sortBy })\n    this.state.sortDes[sortBy] = !this.state.sortDes[sortBy]\n    this.setState({ sortDes: this.state.sortDes })\n    this.sortStocks()\n  }\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    console.log(this.state.bookCost)\n    console.log(this.state.totalAmountInvested)\n    let a = Number(this.state.quantity)* Number(this.state.price)\n    console.log(Number(this.totalAmountInvested)+Number(a))\n    const stock = {\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: Number(this.state.quantity)* Number(this.state.price),\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:(Number(this.state.bookCost)/(Number(this.state.bookCost)+Number(this.state.totalAmountInvested)))*100,\n      totalAmountInvested: Number(this.totalAmountInvested)+Number(this.bookCost)\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n\n    console.log(Number(stock.totalAmountInvested))\n\n\n    console.log(currList)\n    for(let i = 0; i < this.state.stockList.length; i++){\n      let allStocks = [...this.state.stockList];\n      // 2. Make a shallow copy of the item you want to mutate\n      let currentStock = {...allStocks[i]};\n      // 3. Replace the property you're intested in\n      console.log(Number(currentStock.bookCost))\n      console.log(Number(currentStock.totalAmountInvested))\n      currentStock.percentageOfPortfolio = Number(currentStock.bookCost)/Number(currentStock.totalAmountInvested);\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n      allStocks[i] = currentStock;\n      // 5. Set the state to our new copy\n      this.setState({allStocks});\n\n\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n      // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n    }\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n\n  }\n\n\n  //   //student is the object to reference\n  // deleteStock = (stock) => {\n  //   //make var because not mutating this \n  //   console.log(\"Delete\")\n  //   const filteredStock = this.state.stockList.filter((s) => {\n  //     return s !== stock  //the one's we don't want to remove\n  //   })\n\n  //   this.setState({\n  //     stockList: filteredStock\n  //   })\n  // }\n\n  // editStock = (stock, valueToEdit) => {\n\n  //   console.log(\"Editing stock\")\n  //   console.log(stock)\n  //   console.log(\"Value\")\n  //   console.log(valueToEdit)\n    \n  // }\n\n  render() {\n    return (\n\n\n\n      \n    <div className = \"InvestmentPage\"> \n      <div className = \"PieChartTable\">\n          <div className = \"TitleAndPieChart\">\n            <div className = \"StockPieChartTitle\">\n                Stock Portfolio\n            </div>\n            <div className = \"PieChart\">\n              <PieChart listToDisplay = {this.state.stocklist_data} pieChartSize = {this.state.pieChartSize} pieChartRadius = {this.state.pieChartRadius}/>            \n            </div>\n          </div>\n\n          <div className = \"StockList\">\n            <div className=\"StockTable\" width = \"100vw\">\n              <TableComp \n                \n                // use the TableContainer class to style the table itself \n                classes={{ TableContainer: 'TableContainer' }}\n                headings={this.state.stockList_headings}\n                data={this.state.stocklist_data}\n                options={this.state.stockList_options}\n                categories={this.state.stockList_categories}\n                addRow={this.addStock}\n                editRow={this.editStock}\n                removeRow={this.deleteStock}\n              />\n          </div>\n\n          <div className=\"SortButtons\">\n            <SortButton categoryName = \"Name\" callBackFunction = {this.changeSort} \n            sortDes = {this.state.sortDes} sortBy = {this.state.sortBy}/>\n            <SortButton categoryName = \"Quantity\" callBackFunction = {this.changeSort} \n            sortDes = {this.state.sortDes} sortBy = {this.state.sortBy}/>\n            <SortButton categoryName = \"Market Value\" callBackFunction = {this.changeSort} \n            sortDes = {this.state.sortDes} sortBy = {this.state.sortBy}/>\n            <SortButton categoryName = \"Gain/Loss\" callBackFunction = {this.changeSort} \n            sortDes = {this.state.sortDes} sortBy = {this.state.sortBy}/>\n            <SortButton categoryName = \"Percentage of portfolio\" callBackFunction = {this.changeSort} \n            sortDes = {this.state.sortDes} sortBy = {this.state.sortBy}/>\n          </div>\n        </div>\n      </div>\n      <div className = \"BarChart\">\n          {/* <Input stockList={this.state.stockList} \n          handleInputStock = {this.handleInputStock} \n          handleInputChange = {this.handleInputChange}\n          />\n          <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock} editStock = {this.editStock}/> */}\n          \n      \n          {/* <PieChart listToDisplay = {this.state.stocklist_data} pieChartSize = {this.state.pieChartSize} pieChartRadius = {this.state.pieChartRadius}/> */}\n        <BarChart listToDisplay = {this.state.stocklist_data} col = \"Gain/Loss\"/>\n      </div>\n    </div>\n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}