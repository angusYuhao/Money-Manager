{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/team06/src/components/Community/forumListItem.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple, green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Comment from \"./comment.js\"; // define styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  closePostButton: {\n    backgroundColor: deepPurple[500]\n  },\n  blackText: {\n    color: '#000000'\n  },\n  redText: {\n    color: '#dd0000'\n  },\n  purpleText: {\n    color: deepPurple[500],\n    fontSize: 30\n  },\n  upvoteText: {\n    color: '#aaaaaa'\n  },\n  checkCircle: {\n    color: green[500]\n  },\n  financialAdvisorTag: {\n    color: '#ffffff',\n    backgroundColor: green[500]\n  },\n  followButtonGrid: {\n    padding: 20\n  }\n}); // define theme\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n}); // class definition\n\nclass ForumListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postID: null,\n      openPost: false,\n      openFAInfo: false,\n      comment: \"\",\n      upvoted: false,\n      downvoted: false,\n      authorFAInfo: {\n        FAName: \"\",\n        FAIntro: \"\",\n        FAFields: [],\n        FAPoints: 0\n      }\n    };\n\n    this.openPost = () => {\n      this.setState({\n        openPost: true\n      }, () => this.prepareOpenPost());\n    };\n\n    this.prepareOpenPost = () => {\n      const userInfo = this.props.userInfo;\n      userInfo.userUpvotedPosts.includes(this.state.postID) ? this.setState({\n        upvoted: true\n      }) : this.setState({\n        upvoted: false\n      });\n      userInfo.userDownvotedPosts.includes(this.state.postID) ? this.setState({\n        downvoted: true\n      }) : this.setState({\n        downvoted: false\n      });\n    };\n\n    this.closePost = () => {\n      this.setState({\n        openPost: false\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handlePostComment = () => {\n      this.props.postComment(this.state);\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleOpenFAInfo = () => {\n      const targetFAInfo = this.props.FAInfo.filter(I => {\n        return I.FAName === this.props.postAuthor;\n      });\n      this.setState({\n        authorFAInfo: targetFAInfo[0],\n        openFAInfo: true\n      });\n    };\n\n    this.handleCloseFAInfo = () => {\n      this.setState({\n        openFAInfo: false\n      });\n    };\n\n    this.handleUserFollowFA = () => {\n      let newUserInfo = this.props.userInfo;\n      newUserInfo.userFollows.push(this.state.authorFAInfo);\n      this.props.userInfoUpdater(newUserInfo);\n    };\n\n    this.handleUserUnfollowFA = () => {\n      let newUserInfo = this.props.userInfo;\n      const newUserFollows = newUserInfo.userFollows.filter(UF => {\n        return UF !== this.state.authorFAInfo;\n      });\n      newUserInfo.userFollows = newUserFollows;\n      this.props.userInfoUpdater(newUserInfo);\n    };\n\n    this.handleSavePost = () => {\n      let newUserInfo = this.props.userInfo;\n      newUserInfo.userSavedPosts.push(this.state.postID);\n      this.props.userInfoUpdater(newUserInfo);\n    };\n\n    this.handleUnsavePost = () => {\n      let newUserInfo = this.props.userInfo;\n      const newUserSavedPosts = newUserInfo.userSavedPosts.filter(US => {\n        return US !== this.state.postID;\n      });\n      newUserInfo.userSavedPosts = newUserSavedPosts;\n      this.props.userInfoUpdater(newUserInfo);\n    };\n\n    this.toggleUpvote = () => {\n      // clean up downvote\n      if (this.state.downvoted === true) {\n        this.setState({\n          downvoted: false\n        });\n        this.props.minusDownvote(this.state);\n      }\n\n      if (this.state.upvoted === false) {\n        this.setState({\n          upvoted: true\n        });\n        this.props.addUpvote(this.state);\n      } else {\n        this.setState({\n          upvoted: false\n        });\n        this.props.minusUpvote(this.state);\n      }\n    };\n\n    this.toggleDownvote = () => {\n      // clean up upvote\n      if (this.state.upvoted === true) {\n        this.setState({\n          upvoted: false\n        });\n        this.props.minusUpvote(this.state);\n      }\n\n      if (this.state.downvoted === false) {\n        this.setState({\n          downvoted: true\n        });\n        this.props.addDownvote(this.state);\n      } else {\n        this.setState({\n          downvoted: false\n        });\n        this.props.minusDownvote(this.state);\n      }\n    };\n  }\n\n  // update the state when the component is mounted\n  componentDidMount() {\n    this.setState({\n      postID: this.props.postID\n    }, () => this.prepareOpenPost(), () => this.forceUpdate());\n  } // update some states when the component updates\n\n\n  componentDidUpdate() {\n    if (this.state.postID !== this.props.postID) this.setState({\n      postID: this.props.postID\n    }, () => this.prepareOpenPost());\n  } // called when a post is clicked to be opened\n\n\n  // main render function\n  render() {\n    // save props\n    const {\n      classes,\n      avatar,\n      postTitle,\n      postAuthor,\n      postTextContent,\n      category,\n      comments,\n      postComment,\n      deletePosts,\n      openManagePost,\n      numUpvotes,\n      numDownvotes,\n      postAuthorUsertype,\n      userInfo,\n      FAInfo,\n      userInfoUpdater\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        button: \"true\",\n        onClick: openManagePost ? null : this.openPost,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [postTitle, \" :: \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", postAuthor, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                className: classes.checkCircle,\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n                color: this.state.upvoted ? \"primary\" : '#dddddd',\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.upvoteText,\n              children: [numUpvotes, \" : \", numDownvotes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              component: \"span\",\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ThumbDownAltIcon, {\n                color: this.state.downvoted ? \"primary\" : '#dddddd',\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), openManagePost ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"View\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            size: \"medium\",\n            onClick: this.openPost,\n            children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n              fontSize: \"default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this) : null, openManagePost ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            size: \"medium\",\n            onClick: () => deletePosts(this.state),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openPost,\n        onClose: this.closePost,\n        \"aria-labelledby\": \"form-dialog-title\",\n        fullScreen: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n          className: classes.closePostButton,\n          children: [postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: this.handleOpenFAInfo,\n            children: \"View Financial Advisor Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this) : null, userInfo.userSavedPosts.includes(this.props.postID) ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Unsave Post\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              color: \"secondary\",\n              size: \"small\",\n              onClick: this.handleUnsavePost,\n              children: /*#__PURE__*/_jsxDEV(IndeterminateCheckBoxIcon, {\n                fontSize: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Save Post\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              color: \"secondary\",\n              size: \"small\",\n              onClick: this.handleSavePost,\n              children: /*#__PURE__*/_jsxDEV(SaveAltIcon, {\n                fontSize: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              color: \"secondary\",\n              size: \"small\",\n              onClick: this.closePost,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: category,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), \":: \", postTitle, \" ::\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", postAuthor, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), postAuthorUsertype === \"FA\" ? /*#__PURE__*/_jsxDEV(Chip, {\n            className: classes.financialAdvisorTag,\n            label: \"Financial Advisor\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(IconButton, {\n            color: this.state.upvoted ? \"primary\" : \"secondary\",\n            component: \"span\",\n            onClick: this.toggleUpvote,\n            children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numUpvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: this.state.downvoted ? \"primary\" : \"secondary\",\n            component: \"span\",\n            onClick: this.toggleDownvote,\n            children: /*#__PURE__*/_jsxDEV(ThumbDownAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numDownvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            className: classes.blackText,\n            children: postTextContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n            className: classes.blackText,\n            children: \"Post a Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.comment,\n            onChange: this.handleInputChange,\n            multiline: true,\n            rows: \"3\",\n            variant: \"outlined\",\n            margin: \"dense\",\n            name: \"comment\",\n            label: \"Say something...\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: this.handlePostComment,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: comments.map(comment => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Comment, {\n                  commenter: comment.commenter,\n                  commentContent: comment.commentContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.openFAInfo,\n        onClose: this.handleCloseFAInfo,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            children: this.state.authorFAInfo.FAName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            align: \"center\",\n            children: this.state.authorFAInfo.FAIntro\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n            align: \"center\",\n            children: this.state.authorFAInfo.FAFields.map(field => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: field,\n                  size: \"small\",\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this), this.state.authorFAInfo.FAFields[this.state.authorFAInfo.FAFields.length - 1] === field ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 120\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.blackText,\n              children: \"Community Points: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.purpleText,\n              children: this.state.authorFAInfo.FAPoints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-evenly\",\n          className: classes.followButtonGrid,\n          children: userInfo.userFollows.includes(this.state.authorFAInfo) ? /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: this.handleUserUnfollowFA,\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: this.handleUserFollowFA,\n            children: \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(ForumListItem);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/team06/src/components/Community/forumListItem.js"],"names":["React","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Chip","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","Grid","Tooltip","Fab","createMuiTheme","deepPurple","green","withStyles","ThumbUpAltIcon","ThumbDownAltIcon","CloseIcon","CheckCircleIcon","SaveAltIcon","IndeterminateCheckBoxIcon","DeleteIcon","VisibilityIcon","Comment","styles","theme","closePostButton","backgroundColor","blackText","color","redText","purpleText","fontSize","upvoteText","checkCircle","financialAdvisorTag","followButtonGrid","padding","palette","primary","main","secondary","typography","fontFamily","join","ForumListItem","Component","state","postID","openPost","openFAInfo","comment","upvoted","downvoted","authorFAInfo","FAName","FAIntro","FAFields","FAPoints","setState","prepareOpenPost","userInfo","props","userUpvotedPosts","includes","userDownvotedPosts","closePost","handleInputChange","event","value","target","name","handlePostComment","postComment","handleOpenFAInfo","targetFAInfo","FAInfo","filter","I","postAuthor","handleCloseFAInfo","handleUserFollowFA","newUserInfo","userFollows","push","userInfoUpdater","handleUserUnfollowFA","newUserFollows","UF","handleSavePost","userSavedPosts","handleUnsavePost","newUserSavedPosts","US","toggleUpvote","minusDownvote","addUpvote","minusUpvote","toggleDownvote","addDownvote","componentDidMount","forceUpdate","componentDidUpdate","render","classes","avatar","postTitle","postTextContent","category","comments","deletePosts","openManagePost","numUpvotes","numDownvotes","postAuthorUsertype","map","commenter","commentContent","field","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple, green } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport Comment from \"./comment.js\"\n\n// define styles\nconst styles =  theme => ({\n  closePostButton: {\n    backgroundColor: deepPurple[500],\n  },\n  blackText: {\n    color: '#000000',\n  },\n  redText: {\n    color: '#dd0000',\n  },\n  purpleText: {\n    color: deepPurple[500],\n    fontSize: 30\n  },\n  upvoteText: {\n    color: '#aaaaaa',\n  },\n  checkCircle: {\n    color: green[500]\n  },\n  financialAdvisorTag: {\n    color: '#ffffff',\n    backgroundColor: green[500]\n  },\n  followButtonGrid: {\n    padding: 20,\n  },\n});\n\n// define theme\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\n// class definition\nclass ForumListItem extends React.Component {\n\n  // ===state===\n  // postID: the post's postID\n  // openPost: determines if the open post dialog is open\n  // openFAInfo: determines if the FA info dialog is open\n  // comment: the content of the comment to be posted\n  // upvoted: whether the user has upvoted the post\n  // downvoted: whether the user has downvoted the post\n  // authorFAInfo: store the financial advisor info if the author of the post is a financial advisor\n  //    FAName: the name of the financial advisor\n  //    FAIntro: the introduction of the financial advisor\n  //    FAFields: the fields of expertise of the financial advisor\n  //    FAPoints: the financial advisor's community points\n  state = {\n    postID: null,\n    openPost: false,\n    openFAInfo: false,\n    comment: \"\",\n    upvoted: false,\n    downvoted: false,\n    authorFAInfo: {\n      FAName: \"\",\n      FAIntro: \"\",\n      FAFields: [],\n      FAPoints: 0,\n    }\n  }\n\n  // update the state when the component is mounted\n  componentDidMount() {\n\n    this.setState({ postID: this.props.postID }, () => this.prepareOpenPost(), () => this.forceUpdate())\n  }\n\n  // update some states when the component updates\n  componentDidUpdate() {\n\n    if (this.state.postID !== this.props.postID) this.setState({ postID: this.props.postID }, () => this.prepareOpenPost())      \n  }\n\n  // called when a post is clicked to be opened\n  openPost = () => {\n\n    this.setState({ openPost: true }, () => this.prepareOpenPost())\n  }\n\n  // set up important states so that the page renders correctly\n  prepareOpenPost = () => {\n\n    const userInfo = this.props.userInfo\n\n    userInfo.userUpvotedPosts.includes(this.state.postID) ? this.setState({ upvoted: true }) : this.setState({ upvoted: false })\n    userInfo.userDownvotedPosts.includes(this.state.postID) ? this.setState({ downvoted: true }) : this.setState({ downvoted: false })\n  }\n\n  // called when the post dialog is closed\n  closePost = () => {\n\n    this.setState({ openPost: false })\n  }\n\n  // handles some input changes (comment entries)\n  handleInputChange = (event) => {\n\n    const value = event.target.value\n    const name = event.target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  // called when a comment is posted\n  handlePostComment = () => {\n\n    this.props.postComment(this.state)\n    this.setState({ comment: \"\" })\n  }\n\n  // called when a financial advisor's info dialog is opened\n  handleOpenFAInfo = () => {\n\n    const targetFAInfo = this.props.FAInfo.filter((I) => { return I.FAName === this.props.postAuthor})\n\n    this.setState({\n      authorFAInfo: targetFAInfo[0],\n      openFAInfo: true,\n    })\n  }\n\n  // called when a financial advisor's info dialog is closed\n  handleCloseFAInfo = () => {\n\n    this.setState({ openFAInfo: false })\n  }\n\n  // called when the user follows the post author (financial advisor)\n  handleUserFollowFA = () => {\n\n    let newUserInfo = this.props.userInfo\n    newUserInfo.userFollows.push(this.state.authorFAInfo)\n    this.props.userInfoUpdater(newUserInfo)\n  }\n\n  // called when the user unfollows the post author (financial advisor)\n  handleUserUnfollowFA = () => {\n\n    let newUserInfo = this.props.userInfo\n    const newUserFollows = newUserInfo.userFollows.filter((UF) => { return UF !== this.state.authorFAInfo })\n    newUserInfo.userFollows = newUserFollows\n    this.props.userInfoUpdater(newUserInfo)\n  }\n\n  // called when user saves the post\n  handleSavePost = () => {\n\n    let newUserInfo = this.props.userInfo\n    newUserInfo.userSavedPosts.push(this.state.postID)\n    this.props.userInfoUpdater(newUserInfo)\n  }\n\n  // called when user unsaves the post\n  handleUnsavePost = () => {\n\n    let newUserInfo = this.props.userInfo\n    const newUserSavedPosts = newUserInfo.userSavedPosts.filter((US) => { return US !== this.state.postID })\n    newUserInfo.userSavedPosts = newUserSavedPosts\n    this.props.userInfoUpdater(newUserInfo)\n  }\n\n  // called when user upvotes the post\n  toggleUpvote = () => {\n\n    // clean up downvote\n    if (this.state.downvoted === true) {\n      this.setState({ downvoted: false })\n      this.props.minusDownvote(this.state)\n    }\n\n    if (this.state.upvoted === false) {\n      this.setState({ upvoted: true })\n      this.props.addUpvote(this.state)\n    }\n    else {\n      this.setState({ upvoted: false })\n      this.props.minusUpvote(this.state)\n    }\n  }\n\n  // called when user downvotes the post\n  toggleDownvote = () => {\n\n    // clean up upvote\n    if (this.state.upvoted === true) {\n      this.setState({ upvoted: false })\n      this.props.minusUpvote(this.state)\n    }\n\n    if (this.state.downvoted === false) {\n      this.setState({ downvoted: true })\n      this.props.addDownvote(this.state)\n    }\n    else {\n      this.setState({ downvoted: false })\n      this.props.minusDownvote(this.state)\n    }\n    \n  }\n\n  // main render function\n  render() {\n\n    // save props\n    const { classes, avatar, postTitle, postAuthor, postTextContent, category, comments, postComment, \n            deletePosts, openManagePost, numUpvotes, numDownvotes, postAuthorUsertype, userInfo, FAInfo, userInfoUpdater } = this.props\n\n    return (\n      <div>\n\n        {/* {post list item (not opened)} */}\n        <ListItem alignItems=\"flex-start\" button=\"true\" onClick={ openManagePost ? null : this.openPost }>\n\n          {/* {the avatar of the post author (currently null)} */}\n          <ListItemAvatar>\n            <Avatar>{ avatar }</Avatar>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary={\n              <React.Fragment>\n\n                {/* {post title and the author's username} */}\n                <span>{ postTitle } :: </span>\n                <span> { postAuthor } </span>\n\n                {/* {draw the green check mark if the author is a financial advisor} */}\n                { postAuthorUsertype === \"FA\" ? \n                  <IconButton size=\"small\" component=\"span\" disabled>\n                    <CheckCircleIcon className={ classes.checkCircle } fontSize=\"small\" />\n                  </IconButton>\n                : null }\n\n                {/* {shows the number of upvotes and downvotes} */}\n                <IconButton size=\"small\" component=\"span\" disabled>\n                  <ThumbUpAltIcon color={ this.state.upvoted ? \"primary\" : '#dddddd'} fontSize=\"small\" />\n                </IconButton>\n                <span className={ classes.upvoteText }>{ numUpvotes } : { numDownvotes }</span>\n                <IconButton size=\"small\" component=\"span\" disabled>\n                  <ThumbDownAltIcon color={ this.state.downvoted ? \"primary\" : '#dddddd'} fontSize=\"small\" />\n                </IconButton>\n\n              </React.Fragment>\n            }            \n            secondary={\n              <React.Fragment>\n\n                {/* {post's contents} */}\n                { postTextContent }\n              </React.Fragment>\n            }\n          />\n\n          {/* {the category chip of the post} */}\n          <Chip label={ category }/>\n\n          {/* {display the view button if in manage post mode} */}\n          { openManagePost ? \n            <Tooltip title=\"View\">\n              <IconButton color=\"primary\" size=\"medium\" onClick={ this.openPost }>\n                <VisibilityIcon fontSize=\"default\" />\n              </IconButton>\n            </Tooltip> \n            : \n            null\n          }\n\n          {/* {display the delete button if in manage post mode} */}\n          { openManagePost ? \n            <Tooltip title=\"Delete\">\n              <IconButton color=\"primary\" size=\"medium\" onClick={ () => deletePosts(this.state) }>\n                <DeleteIcon fontSize=\"default\" />\n              </IconButton>\n            </Tooltip> \n            : \n            null\n          }\n\n        </ListItem>\n\n        {/* {the open post dialog} */}\n        <Dialog open={ this.state.openPost } onClose={ this.closePost } aria-labelledby=\"form-dialog-title\" fullScreen>\n\n          <DialogActions className={ classes.closePostButton }>\n\n            {/* {display view financial advisor info button if post author is a financial advisor} */}\n            { postAuthorUsertype === \"FA\" ? \n              <Button variant=\"contained\" color=\"secondary\" onClick={ this.handleOpenFAInfo }>\n                View Financial Advisor Info\n              </Button>\n            : null }\n\n            {/* {display the save post or unsave post button} */}\n            { userInfo.userSavedPosts.includes(this.props.postID) ? \n            <Tooltip title=\"Unsave Post\">\n              <Fab color=\"secondary\" size=\"small\" onClick={ this.handleUnsavePost }>\n                <IndeterminateCheckBoxIcon fontSize=\"default\" />\n              </Fab>\n            </Tooltip>\n              : \n            <Tooltip title=\"Save Post\">\n              <Fab color=\"secondary\" size=\"small\" onClick={ this.handleSavePost }>\n                <SaveAltIcon fontSize=\"default\" />\n              </Fab>\n            </Tooltip> }\n\n            {/* {display the close dialog button} */}\n            <Tooltip title=\"Close\">\n              <Fab color=\"secondary\" size=\"small\" onClick={ this.closePost }>\n                <CloseIcon fontSize=\"default\" />\n              </Fab>\n            </Tooltip>\n\n          </DialogActions>\n          \n          <DialogTitle id=\"form-dialog-title\">\n\n            {/* {display category, post title and author} */}\n            <Chip label={ category } size=\"small\"/>\n             :: { postTitle } :: \n            <span> { postAuthor } </span>\n\n            {/* {display green chip if author is financial advisor} */}\n            { postAuthorUsertype === \"FA\" ? \n              <Chip className={ classes.financialAdvisorTag } label={ \"Financial Advisor\" } size=\"small\"/>\n            : null }\n\n            {/* {display upvote and downvote buttons} */}\n            <IconButton color={ this.state.upvoted ? \"primary\" : \"secondary\" } component=\"span\" onClick={ this.toggleUpvote }>\n              <ThumbUpAltIcon />\n            </IconButton>\n            <span>{ numUpvotes }</span>\n            <IconButton color={ this.state.downvoted ? \"primary\" : \"secondary\" } component=\"span\" onClick={ this.toggleDownvote }>\n              <ThumbDownAltIcon />\n            </IconButton>\n            <span>{ numDownvotes }</span>\n\n          </DialogTitle>\n\n          <DialogContent>\n\n            {/* {display contents of the post} */}\n            <DialogContentText className={ classes.blackText }>\n              { postTextContent }\n            </DialogContentText>\n\n            <Divider variant=\"fullWidth\" />\n\n            <br></br>\n            <DialogContentText className={ classes.blackText }>Post a Comment:</DialogContentText>\n            \n            {/* {comment text box} */}\n            <TextField\n              value={ this.state.comment }\n              onChange={ this.handleInputChange }\n              multiline\n              rows=\"3\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              name=\"comment\"\n              label=\"Say something...\"\n              fullWidth\n            />\n            <br></br>\n\n            {/* {post comment button} */}\n            <Button variant=\"outlined\" color=\"primary\" onClick={ this.handlePostComment }>\n              Post\n            </Button>\n            <br></br>\n            <br></br>\n\n            <Divider variant=\"fullWidth\" />\n\n            {/* {display list of comments} */}\n            <List>\n              {comments.map((comment) => {\n                  return (\n                    <div>\n                      <Comment commenter={ comment.commenter }\n                                commentContent={ comment.commentContent }/>\n                      <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                  )\n                }\n              )}\n            </List>\n            \n          </DialogContent>\n\n        </Dialog>\n\n        {/* {displays the financial advisor info if the author is a financial advisor} */}\n        <Dialog open={ this.state.openFAInfo } onClose={ this.handleCloseFAInfo }>\n          \n          {/* {display avatar and name} */}\n          <DialogTitle>\n            <Grid container justify=\"center\">\n              <Avatar></Avatar>\n            </Grid>\n            <Grid container justify=\"center\">\n              { this.state.authorFAInfo.FAName }\n            </Grid>\n          </DialogTitle>\n\n          <Divider variant=\"middle\" />\n\n          <DialogContent>\n\n            {/* {display financial advisor intro} */}\n            <DialogContentText align=\"center\">\n              { this.state.authorFAInfo.FAIntro }\n            </DialogContentText>\n\n            {/* {display financial advisor's fields of expertise} */}\n            <DialogContentText align=\"center\">\n              { this.state.authorFAInfo.FAFields.map((field) => {\n                return (\n                  <span>\n                    <Chip label={ field } size=\"small\" color=\"secondary\" />\n                    { this.state.authorFAInfo.FAFields[this.state.authorFAInfo.FAFields.length - 1] === field ? null : <span> : </span> }\n                  </span>\n                )\n              }) }\n            </DialogContentText>\n\n            {/* {display community points} */}\n            <DialogContentText align=\"center\">\n              <span className={ classes.blackText }>Community Points: </span>\n              <span className={ classes.purpleText }>{ this.state.authorFAInfo.FAPoints }</span>\n            </DialogContentText>\n            \n          </DialogContent>\n\n          {/* {display follow/unfollow button} */}\n          <Grid container justify=\"space-evenly\" className={ classes.followButtonGrid }>\n\n            { userInfo.userFollows.includes(this.state.authorFAInfo) ? \n            <Button color=\"primary\" variant=\"contained\" onClick={ this.handleUserUnfollowFA }>\n              Unfollow\n            </Button> : \n            <Button color=\"primary\" variant=\"contained\" onClick={ this.handleUserFollowFA }>\n              Follow\n            </Button> }\n\n          </Grid>\n\n        </Dialog>\n\n      </div>\n    )\n  }\n}\n\n  export default withStyles(styles)(ForumListItem);"]},"metadata":{},"sourceType":"module"}