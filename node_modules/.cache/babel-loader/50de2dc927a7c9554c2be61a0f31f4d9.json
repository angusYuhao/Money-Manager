{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/team06/src/components/Profile/profile.js\";\nimport React from 'react';\nimport { Typography, Grid, Paper, AppBar, Toolbar, Button, Drawer, withStyles, createMuiTheme, Tab, Tabs, Avatar, ThemeProvider, List, Dialog, DialogTitle, Divider } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport ForumListItem from './forumListItemOld.js';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Edit from './edit.js';\nimport Done from './done.js';\nimport Draggable from 'react-draggable';\nimport { followingData, followerData } from './data';\nimport Followers from './followers.js';\nimport Following from './following.js';\nimport HandleClosing from './handleClosing.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 400;\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: deepPurple[50]\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  },\n  numberGroup: {\n    paddingLeft: theme.spacing(10)\n  },\n  tabs: {\n    marginLeft: theme.spacing(3)\n  },\n  avatar: {\n    height: '100px',\n    width: '100px',\n    fontSize: '2em',\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(18.5),\n    backgroundColor: deepPurple[800]\n  },\n  editButton: {\n    float: 'right',\n    marginTop: theme.spacing(10),\n    marginRight: theme.spacing(10)\n  },\n  doneButton: {\n    float: 'right',\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  logoutButton: {\n    float: 'right',\n    marginTop: theme.spacing(10),\n    marginRight: theme.spacing(3)\n  },\n  group: {\n    float: 'right',\n    marginRight: theme.spacing(20)\n  },\n  group1: {\n    float: 'right',\n    marginRight: theme.spacing(3)\n  },\n  name: {\n    fontWeight: 'bold',\n    fontSize: '1.6em',\n    borderBottom: 'none'\n  },\n  textfield: {\n    minWidth: 340\n  },\n  number: {\n    marginLeft: theme.spacing(3)\n  },\n  number1: {\n    marginLeft: theme.spacing(2)\n  },\n  post: {\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3)\n  },\n  nothing: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(30)\n  },\n  postIcon: {\n    fontSize: '5em',\n    position: 'relative',\n    marginTop: theme.spacing(10),\n    left: '50%'\n  },\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: theme.spacing(3)\n  },\n  removeLine: {\n    textDecoration: 'none',\n    color: 'black'\n  },\n  followersButton: {\n    marginLeft: theme.spacing(3),\n    fontSize: '1.2em',\n    minWidth: 150\n  },\n  followingButton: {\n    fontSize: '1.2em',\n    minWidth: 150\n  },\n  postButton: {\n    fontSize: '1.2em',\n    minWidth: 150,\n    marginRight: theme.spacing(5)\n  },\n  follow: {\n    float: 'right',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(1)\n  },\n  unfollow: {\n    float: 'right'\n  },\n  followerdata: {\n    float: 'left',\n    marginLeft: theme.spacing(3),\n    marginBottom: theme.spacing(1)\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  },\n  dialogue_cursor: {\n    cursor: 'move'\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n}); // Code taken from the material-ui website, under draggable dialog\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    handle: \"#draggable\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    children: /*#__PURE__*/_jsxDEV(Paper, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 7\n  }, this);\n} // All the profile information should be fetched from the database\n// that stores the user information\n\n\n_c = PaperComponent;\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // if false, display edit; if true, display Done\n      followerData: followerData,\n      followingData: followingData,\n      edit: false,\n      logout: false,\n      openFollowers: false,\n      openFollowing: false,\n      followed: false,\n      userLevel: \"\",\n      avatar: \"\",\n      bio: \"An individual that is pursuing one's passions.\",\n      username: \"user\",\n      name: \"User X\",\n      email: \"user@123.com\",\n      occupation: \"student\",\n      birthday: \"2021-03-08\",\n      openNewPost: false,\n      openManagePost: false,\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postFilter: \"\",\n      sortOrder: \"\",\n      commenter: \"\",\n      commentContent: \"\",\n      userInfo: {\n        username: \"\",\n        usertype: \"\",\n        userUpvotedPosts: [],\n        userDownvotedPosts: [],\n        userFollows: []\n      },\n      posts: \"\"\n    };\n\n    this.handleEdit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.handleFollowersOpen = () => {\n      this.state.openFollowers = true;\n      this.setState({\n        openFollowers: this.state.openFollowers\n      });\n    };\n\n    this.handleFollowersClose = () => {\n      this.state.openFollowers = false;\n      this.setState({\n        openFollowers: this.state.openFollowers\n      });\n    };\n\n    this.handleFollowingOpen = () => {\n      this.state.openFollowing = true;\n      this.setState({\n        openFollowing: this.state.openFollowing\n      });\n    };\n\n    this.handleFollowingClose = () => {\n      this.state.openFollowing = false;\n      this.setState({\n        openFollowing: this.state.openFollowing\n      });\n    };\n\n    this.handleFollow = wantToFollow => {\n      const index = this.state.followerData.indexOf(wantToFollow);\n      this.state.followingData.push(wantToFollow);\n      this.state.followerData[index][\"following\"] = true;\n      this.setState({\n        followerData: this.state.followerData,\n        followingData: this.state.followingData\n      });\n    };\n\n    this.handleUnfollow = wantToUnfollow => {\n      const index = this.state.followerData.indexOf(wantToUnfollow);\n      const keep = this.state.followingData.filter(f => f[\"id\"] != wantToUnfollow[\"id\"]);\n      this.state.followingData = keep;\n      this.state.followerData[index][\"following\"] = false;\n      this.setState({\n        followerData: this.state.followerData,\n        followingData: this.state.followingData\n      });\n    };\n\n    this.handleFollowing = wantToFollow => {\n      const index = this.state.followingData.indexOf(wantToFollow);\n      this.state.followingData[index][\"following\"] = true;\n      this.setState({\n        followingData: this.state.followingData\n      });\n    };\n\n    this.handleUnfollowing = wantToUnfollow => {\n      const index = this.state.followingData.indexOf(wantToUnfollow);\n      const keep = this.state.followingData.filter(f => f != wantToUnfollow);\n      this.state.followingData = keep;\n      const changeFollowingStatus = this.state.followerData.filter(f => f[\"id\"] == wantToUnfollow[\"id\"]);\n      const indexForChangingFollowingStatus = this.state.followerData.indexOf(changeFollowingStatus[0]);\n      if (indexForChangingFollowingStatus != -1) this.state.followerData[indexForChangingFollowingStatus][\"following\"] = false;\n      this.setState({\n        followingData: this.state.followingData,\n        followerData: this.state.followerData\n      });\n    };\n\n    this.handleInputChange = event => {\n      // get the value we type in \n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      /********************************************************************************\n      for phase 2, you would be making a server call to get the username of the post\n      author, and update the avatar, author, or commenter accordingly\n      *********************************************************************************/\n\n      if (name == \"username\") {\n        for (let i = 0; i < this.state.posts.length; i++) {\n          this.state.posts[i].author = value;\n          this.state.posts[i].authorAvatar = value.charAt(0).toUpperCase();\n        }\n\n        this.state.avatar = value.charAt(0).toUpperCase();\n        this.state.author = value;\n        this.state.commenter = value;\n      } // state is updated and value is also updated in JSX\n      // the square bracket dynamically changes the name \n\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.postComment = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      const targetPostComments = targetPost[0].comments;\n      const newComment = {\n        commenter: this.state.commenter,\n        commentContent: target.comment\n      };\n      targetPostComments.push(newComment);\n      targetPost[0].comments = targetPostComments;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n    };\n\n    this.deletePosts = target => {\n      const targetPostID = target.postID;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n\n      if (index !== -1) {\n        userInfo.userUpvotedPosts.splice(index, 1);\n        this.setState({\n          userInfo: userInfo\n        });\n      }\n    };\n\n    this.addUpvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userUpvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusUpvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.addDownvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      userInfo.userDownvotedPosts.push(targetPostID);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.minusDownvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.state.userInfo;\n      const index = userInfo.userDownvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1);\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.changeUserState = () => {\n      if (this.state.userLevel === \"User\") {\n        this.state.avatar = \"U\";\n        this.state.bio = \"An individual that is pursuing one's passions.\";\n        this.state.username = \"user\";\n        this.state.name = \"User X\";\n        this.state.email = \"user@123.com\";\n        this.state.occupation = \"Student\";\n        this.state.birthday = \"2021-03-08\";\n        this.state.commenter = \"User\";\n        this.state.posts = [{\n          author: 'User',\n          authorUsertype: \"RU\",\n          title: 'Welcome to communtiy',\n          content: 'this is the first community thread',\n          authorAvatar: \"U\",\n          category: \"Announcement\",\n          postID: 1,\n          numUpvotes: 5,\n          numDownvotes: 1,\n          comments: [{\n            commenter: \"User2\",\n            commentContent: \"This is a great post\"\n          }, {\n            commenter: \"User3\",\n            commentContent: \"This is a bad post\"\n          }]\n        }, {\n          author: 'User',\n          authorUsertype: \"RU\",\n          title: 'My second post',\n          content: 'This is the second post ever!!!!!!!',\n          authorAvatar: \"U\",\n          category: \"Opinion\",\n          postID: 2,\n          numUpvotes: 4,\n          numDownvotes: 2,\n          comments: [{\n            commenter: \"Financial Advisor3\",\n            commentContent: \"You should come to my page to learn about financials\"\n          }, {\n            commenter: \"User4\",\n            commentContent: \"Go buy GME!\"\n          }]\n        }];\n        this.setState({\n          avatar: this.state.avatar,\n          bio: this.state.bio,\n          username: this.state.username,\n          name: this.state.name,\n          email: this.state.email,\n          occupation: this.state.occupation,\n          birthday: this.state.birthday,\n          posts: this.state.posts,\n          commenter: this.state.commenter\n        });\n      } else if (this.state.userLevel === \"Financial Advisor\") {\n        this.state.avatar = \"A\";\n        this.state.bio = \"A certified financial advisor, dedicated to help others\";\n        this.state.username = \"admin\";\n        this.state.name = \"Admin X\";\n        this.state.email = \"admin@123.com\";\n        this.state.occupation = \"Financial advisor\";\n        this.state.birthday = \"2021-03-08\";\n        this.state.commenter = \"Admin\";\n        this.state.posts = [{\n          author: 'Admin',\n          authorUsertype: \"FA\",\n          title: 'Welcome to communtiy',\n          content: 'I am the financial advisor',\n          authorAvatar: \"A\",\n          category: \"Announcement\",\n          postID: 1,\n          numUpvotes: 5,\n          numDownvotes: 1,\n          comments: [{\n            commenter: \"User2\",\n            commentContent: \"This is a great post\"\n          }, {\n            commenter: \"User3\",\n            commentContent: \"This is a bad post\"\n          }]\n        }, {\n          author: 'Admin',\n          authorUsertype: \"FA\",\n          title: 'My second post',\n          content: 'I am here to provide you guys with some help in financing',\n          authorAvatar: \"A\",\n          category: \"Opinion\",\n          postID: 2,\n          numUpvotes: 4,\n          numDownvotes: 2,\n          comments: [{\n            commenter: \"Financial Advisor3\",\n            commentContent: \"You should come to my page to learn about financials\"\n          }, {\n            commenter: \"User4\",\n            commentContent: \"Go buy GME!\"\n          }]\n        }];\n        this.setState({\n          avatar: this.state.avatar,\n          bio: this.state.bio,\n          username: this.state.username,\n          name: this.state.name,\n          email: this.state.email,\n          occupation: this.state.occupation,\n          birthday: this.state.birthday,\n          posts: this.state.posts,\n          commenter: this.state.commenter\n        });\n      }\n    };\n  }\n\n  // Mount the current user state passed in from the app.js\n  componentDidMount() {\n    this.changeUserState();\n  } // All of these data will not be hardcoded and will be fetched from a database\n\n  /********************************************************************************\n  for phase 2, you would be making a server call to get the user information and \n  update the state accordingly, will also fetch its corresponded posts\n  *********************************************************************************/\n\n\n  render() {\n    const {\n      classes,\n      username,\n      handleLogOut,\n      password,\n      userLevel,\n      loggedIn\n    } = this.props;\n\n    if (userLevel === \"User\") {\n      this.state.userLevel = \"User\";\n    } else if (userLevel === \"Financial Advisor\") {\n      this.state.userLevel = \"Financial Advisor\";\n    }\n\n    return loggedIn ? /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [this.state.userLevel === \"User\" ? /*#__PURE__*/_jsxDEV(AppBar, {\n          color: \"secondary\",\n          position: \"fixed\",\n          className: classes.appBar,\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              inkBarStyle: {\n                background: 'black'\n              },\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: '/spendings',\n                className: (classes.tabs, classes.removeLine),\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Spendings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/investments',\n                className: (classes.tabs, classes.removeLine),\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Investments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/community',\n                className: (classes.tabs, classes.removeLine),\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Community\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AppBar, {\n          color: \"secondary\",\n          position: \"fixed\",\n          className: classes.appBar,\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              inkBarStyle: {\n                background: 'black'\n              },\n              centered: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/community',\n                className: (classes.tabs, classes.removeLine),\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Community\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          className: classes.drawer,\n          variant: \"permanent\",\n          anchor: \"left\",\n          classes: {\n            paper: classes.drawerPaper\n          },\n          children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerContainer,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              align: \"center\",\n              name: \"avatar\",\n              value: this.state.avatar,\n              className: classes.avatar,\n              children: this.state.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 29\n            }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Edit, {\n              handleInputChange: this.handleInputChange,\n              username: this.state.username,\n              name: this.state.name,\n              email: this.state.email,\n              occupation: this.state.occupation,\n              birthday: this.state.birthday,\n              bio: this.state.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Done, {\n              username: this.state.username,\n              name: this.state.name,\n              email: this.state.email,\n              occupation: this.state.occupation,\n              birthday: this.state.birthday,\n              bio: this.state.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 33\n            }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleEdit,\n              color: \"primary\",\n              variant: \"contained\",\n              className: classes.doneButton,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleEdit,\n                color: \"primary\",\n                variant: \"contained\",\n                className: classes.editButton,\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleLogOut(),\n                  color: \"primary\",\n                  variant: \"contained\",\n                  className: classes.logoutButton,\n                  children: \"Log Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            className: classes.numberGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.group,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.followersButton,\n                onClick: this.handleFollowersOpen,\n                children: [\"Followers\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 37\n                }, this), this.state.followerData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: this.state.openFollowers,\n                onClose: this.handleFollowersClose,\n                PaperComponent: PaperComponent,\n                \"aria-labelledby\": \"draggable\",\n                className: classes.dialog,\n                classes: {\n                  paper: classes.paper\n                },\n                children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                  className: classes.dialogue_cursor,\n                  id: \"draggable\",\n                  children: \"Followers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 37\n                }, this), this.state.followerData.map(followerData => /*#__PURE__*/_jsxDEV(Followers, {\n                  followerData: followerData,\n                  handleFollow: this.handleFollow,\n                  handleUnfollow: this.handleUnfollow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(HandleClosing, {\n                  handleClose: this.handleFollowersClose\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.group,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.followingButton,\n                onClick: this.handleFollowingOpen,\n                children: [\"Following\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 37\n                }, this), this.state.followingData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: this.state.openFollowing,\n                onClose: this.handleFollowingClose,\n                PaperComponent: PaperComponent,\n                \"aria-labelledby\": \"draggable\",\n                classes: {\n                  paper: classes.paper\n                },\n                children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                  className: classes.dialogue_cursor,\n                  id: \"draggable\",\n                  children: \"Following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 37\n                }, this), this.state.followingData.map(followingData => /*#__PURE__*/_jsxDEV(Following, {\n                  followingData: followingData,\n                  handleFollow: this.handleFollowing,\n                  handleUnfollow: this.handleUnfollowing\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(HandleClosing, {\n                  handleClose: this.handleFollowingClose\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.group1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.postButton,\n                children: [\"Posts\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 37\n                }, this), this.state.posts.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.post,\n              children: \"My posts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 29\n            }, this), this.state.posts == \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(PostAddIcon, {\n                className: classes.postIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                className: classes.nothing,\n                children: \"You don't have anything posted yet. Go post something!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              className: classes.forumList,\n              children: this.state.posts.map(thread => {\n                if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                      postTitle: thread.title,\n                      postAuthor: thread.author,\n                      postAuthorUsertype: thread.authorUsertype,\n                      postTextContent: thread.content,\n                      avatar: thread.authorAvatar,\n                      category: thread.category,\n                      comments: thread.comments,\n                      postID: thread.postID,\n                      openManagePost: this.state.openManagePost ? true : false,\n                      numUpvotes: thread.numUpvotes,\n                      numDownvotes: thread.numDownvotes,\n                      userInfo: this.state.userInfo,\n                      addUpvote: this.addUpvote,\n                      minusUpvote: this.minusUpvote,\n                      addDownvote: this.addDownvote,\n                      minusDownvote: this.minusDownvote,\n                      deletePosts: this.deletePosts,\n                      postComment: this.postComment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 783,\n                      columnNumber: 49\n                    }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                      variant: \"inset\",\n                      component: \"li\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 801,\n                      columnNumber: 117\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 45\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 32\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaperComponent\");","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/team06/src/components/Profile/profile.js"],"names":["React","Typography","Grid","Paper","AppBar","Toolbar","Button","Drawer","withStyles","createMuiTheme","Tab","Tabs","Avatar","ThemeProvider","List","Dialog","DialogTitle","Divider","deepPurple","Link","Redirect","ForumListItem","PostAddIcon","Edit","Done","Draggable","followingData","followerData","Followers","Following","HandleClosing","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","background","drawerContainer","overflow","content","marginTop","spacing","numberGroup","paddingLeft","tabs","marginLeft","avatar","height","fontSize","backgroundColor","editButton","float","marginRight","doneButton","marginBottom","logoutButton","group","group1","name","fontWeight","borderBottom","textfield","minWidth","number","number1","post","nothing","postIcon","position","left","forumList","borderRadius","margin","removeLine","textDecoration","color","followersButton","followingButton","postButton","follow","unfollow","followerdata","paper","maxHeight","dialogue_cursor","cursor","palette","primary","main","secondary","typography","fontFamily","join","PaperComponent","props","Profile","Component","state","edit","logout","openFollowers","openFollowing","followed","userLevel","bio","username","email","occupation","birthday","openNewPost","openManagePost","author","title","authorAvatar","category","postFilter","sortOrder","commenter","commentContent","userInfo","usertype","userUpvotedPosts","userDownvotedPosts","userFollows","posts","handleEdit","setState","handleFollowersOpen","handleFollowersClose","handleFollowingOpen","handleFollowingClose","handleFollow","wantToFollow","index","indexOf","push","handleUnfollow","wantToUnfollow","keep","filter","f","handleFollowing","handleUnfollowing","changeFollowingStatus","indexForChangingFollowingStatus","handleInputChange","event","target","value","i","length","charAt","toUpperCase","postComment","targetPostID","postID","targetPostIndex","findIndex","targetPost","p","targetPostComments","comments","newComment","comment","otherPosts","splice","deletePosts","addUpvote","numUpvotes","minusUpvote","addDownvote","numDownvotes","minusDownvote","changeUserState","authorUsertype","componentDidMount","render","classes","handleLogOut","password","loggedIn","dialog","map","thread"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography, \n        Grid,\n        Paper,\n        AppBar,\n        Toolbar,\n        Button,\n        Drawer,\n        withStyles, \n        createMuiTheme,\n        Tab,\n        Tabs,\n        Avatar,\n        ThemeProvider, \n        List,\n        Dialog,\n        DialogTitle,\n        Divider} from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport ForumListItem from './forumListItemOld.js';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Edit from './edit.js';\nimport Done from './done.js';\nimport Draggable from 'react-draggable';\nimport { followingData, followerData } from './data';\nimport Followers from './followers.js';\nimport Following from './following.js';\nimport HandleClosing from './handleClosing.js';\n\nconst drawerWidth = 400;\n\nconst useStyles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: deepPurple[50],\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        marginTop: theme.spacing(3),\n    },\n    numberGroup: {\n        paddingLeft: theme.spacing(10),\n    },\n    tabs: {\n        marginLeft: theme.spacing(3),\n    },\n    avatar: {\n        height: '100px',\n        width: '100px',\n        fontSize: '2em',\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(18.5),\n        backgroundColor: deepPurple[800],\n    },\n    editButton: {\n        float: 'right',\n        marginTop: theme.spacing(10),\n        marginRight: theme.spacing(10),\n    },\n    doneButton: {\n        float: 'right',\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    logoutButton: {\n        float: 'right',\n        marginTop: theme.spacing(10),\n        marginRight: theme.spacing(3),\n    },\n    group: {\n        float: 'right',\n        marginRight: theme.spacing(20),\n    },\n    group1: {\n        float: 'right',\n        marginRight: theme.spacing(3),\n    },\n    name: {\n        fontWeight: 'bold',\n        fontSize: '1.6em',\n        borderBottom: 'none',\n    },\n    textfield: {\n        minWidth: 340,\n    },\n    number: {\n        marginLeft: theme.spacing(3),\n    },\n    number1: {\n        marginLeft: theme.spacing(2),\n    },\n    post: {\n        marginTop: theme.spacing(10),\n        marginLeft: theme.spacing(3),\n    },\n    nothing: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(30),\n    },\n    postIcon: {\n        fontSize: '5em',\n        position: 'relative',\n        marginTop: theme.spacing(10),\n        left: '50%',\n    },\n    forumList: {\n        backgroundColor: '#f0f0f0',\n        borderRadius: 5,\n        margin: theme.spacing(3),\n    },\n    removeLine: {\n        textDecoration: 'none',\n        color: 'black'\n    },\n    followersButton: {\n        marginLeft: theme.spacing(3),\n        fontSize: '1.2em',\n        minWidth: 150,\n    },\n    followingButton: {\n        fontSize: '1.2em',\n        minWidth: 150,\n    },\n    postButton: {\n        fontSize: '1.2em',\n        minWidth: 150,\n        marginRight: theme.spacing(5),\n    },\n    follow: {\n        float: 'right',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n    },\n    unfollow: {\n        float: 'right',\n    },\n    followerdata: {\n        float: 'left',\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        width: '80%',\n        maxHeight: 435,\n    },\n    dialogue_cursor: {\n        cursor: 'move'\n    }\n})\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: deepPurple[800],\n        },\n        secondary: {\n            main: deepPurple[100],\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Poppins',\n            'sans-serif',\n        ].join(','),\n    },\n});\n\n// Code taken from the material-ui website, under draggable dialog\nfunction PaperComponent(props) {\n    return (\n      <Draggable handle=\"#draggable\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n        <Paper {...props} />\n      </Draggable>\n    );\n}\n\n// All the profile information should be fetched from the database\n// that stores the user information\nclass Profile extends React.Component {\n\n    state = {\n        // if false, display edit; if true, display Done\n        followerData: followerData,\n        followingData: followingData,\n        edit: false,\n        logout: false,\n        openFollowers: false,\n        openFollowing: false,\n        followed: false,\n        userLevel: \"\",\n        avatar: \"\",\n        bio: \"An individual that is pursuing one's passions.\",\n        username: \"user\",\n        name: \"User X\",\n        email: \"user@123.com\",\n        occupation: \"student\",\n        birthday: \"2021-03-08\",\n        openNewPost: false,\n        openManagePost: false,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postFilter: \"\",\n        sortOrder: \"\",\n        commenter: \"\",\n        commentContent: \"\",\n        userInfo: {\n            username: \"\",\n            usertype: \"\",\n            userUpvotedPosts: [],\n            userDownvotedPosts: [],\n            userFollows: [],\n        },\n        posts:  \"\",\n    }\n\n    // Check the state of the edit, and changes UI accordingly\n    handleEdit = () => {\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n\n    // Change the state of openFollowers, this is for opening \n    // the dialog\n    handleFollowersOpen = () => {\n        this.state.openFollowers = true;\n        this.setState({\n            openFollowers: this.state.openFollowers,\n        })\n    }\n\n    // Change the state of openFollowers, this is for closing \n    // the dialog\n    handleFollowersClose = () => {\n        this.state.openFollowers = false;\n\n        this.setState({\n            openFollowers: this.state.openFollowers,\n        })\n    }\n\n    // Change the state of openFollowing, this is for opening \n    // the dialog\n    handleFollowingOpen = () => {\n        this.state.openFollowing = true;\n        this.setState({\n            openFollowing: this.state.openFollowing,\n        })\n    }\n\n    // Change the state of openFollowing, this is for closing \n    // the dialog\n    handleFollowingClose = () => {\n        this.state.openFollowing = false;\n        this.setState({\n            openFollowing: this.state.openFollowing,\n        })\n    }\n\n    /********************************************************************************\n    for phase 2, you would be making a server call to check the list of followers\n    and its following state\n    *********************************************************************************/\n    handleFollow = (wantToFollow) => {\n        const index = this.state.followerData.indexOf(wantToFollow);\n        this.state.followingData.push(wantToFollow)\n        this.state.followerData[index][\"following\"] = true;\n        this.setState({\n            followerData: this.state.followerData,\n            followingData: this.state.followingData\n        })\n    }\n\n    /********************************************************************************\n    for phase 2, you would be making a server call to check the list of followers\n    and its following state\n    *********************************************************************************/\n    handleUnfollow = (wantToUnfollow) => {\n        const index = this.state.followerData.indexOf(wantToUnfollow)\n        const keep = this.state.followingData.filter(f => f[\"id\"] != wantToUnfollow[\"id\"])\n        this.state.followingData = keep\n        this.state.followerData[index][\"following\"] = false;\n        this.setState({\n            followerData: this.state.followerData,\n            followingData: this.state.followingData\n        })\n    }\n\n    /********************************************************************************\n    for phase 2, you would be making a server call to check the list of following users\n    and its following state\n    *********************************************************************************/\n    handleFollowing = (wantToFollow) => {\n        const index = this.state.followingData.indexOf(wantToFollow)\n        this.state.followingData[index][\"following\"] = true;\n        this.setState({\n            followingData: this.state.followingData,\n        })\n    }\n\n    /********************************************************************************\n    for phase 2, you would be making a server call to check the list of following users\n    and its following state\n    *********************************************************************************/\n    handleUnfollowing = (wantToUnfollow) => {\n        const index = this.state.followingData.indexOf(wantToUnfollow)\n        const keep = this.state.followingData.filter(f => f != wantToUnfollow)\n        this.state.followingData = keep\n        const changeFollowingStatus = this.state.followerData.filter(f => f[\"id\"] == wantToUnfollow[\"id\"])\n        const indexForChangingFollowingStatus = this.state.followerData.indexOf(changeFollowingStatus[0])\n        if (indexForChangingFollowingStatus != -1) this.state.followerData[indexForChangingFollowingStatus][\"following\"] = false\n        \n        this.setState({\n            followingData: this.state.followingData,\n            followerData: this.state.followerData\n        })\n    }\n\n    handleInputChange = (event) => {\n    \n        // get the value we type in \n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        \n        /********************************************************************************\n        for phase 2, you would be making a server call to get the username of the post\n        author, and update the avatar, author, or commenter accordingly\n        *********************************************************************************/\n        if(name == \"username\") {\n            for(let i = 0; i < this.state.posts.length; i++) {\n                this.state.posts[i].author = value;\n                this.state.posts[i].authorAvatar = value.charAt(0).toUpperCase();\n            }\n            this.state.avatar = value.charAt(0).toUpperCase();\n            this.state.author = value;\n            this.state.commenter = value;\n        }\n        // state is updated and value is also updated in JSX\n        // the square bracket dynamically changes the name \n        this.setState({\n          [name]: value\n        })\n    };\n\n    // These code are taken from ForumList, check ForumList for more details\n    postComment = (target) => {\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        \n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        const targetPostComments = targetPost[0].comments\n    \n        const newComment = {\n          commenter: this.state.commenter,\n          commentContent: target.comment\n        }\n    \n        targetPostComments.push(newComment)\n        targetPost[0].comments = targetPostComments\n        \n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    \n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    \n        this.setState({ posts: otherPosts })\n    }\n\n    // These code are taken from ForumList, check forumList for more details\n    deletePosts = (target) => {\n        const targetPostID = target.postID\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n        if (index !== -1) {\n            userInfo.userUpvotedPosts.splice(index, 1)\n            this.setState({ userInfo: userInfo })\n        }\n    }\n\n    // These code are taken from ForumList, check forumList for more details\n    addUpvote = (target) => {\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        userInfo.userUpvotedPosts.push(targetPostID)\n        this.setState({ userInfo: userInfo })\n    }\n\n    // These code are taken from ForumList, check forumList for more details\n    minusUpvote = (target) => {\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n        if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1)\n        this.setState({ userInfo: userInfo })\n    }\n\n    // These code are taken from ForumList, check forumList for more details\n    addDownvote = (target) => {\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        userInfo.userDownvotedPosts.push(targetPostID)\n        this.setState({ userInfo: userInfo })\n    }\n\n    // These code are taken from ForumList, check forumList for more details\n    minusDownvote = (target) => {\n        const targetPostID = target.postID\n        const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n        const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n        targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1\n        const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n        otherPosts.splice(targetPostIndex, 0, targetPost[0])\n        this.setState({ posts: otherPosts })\n\n        const userInfo = this.state.userInfo\n        const index = userInfo.userDownvotedPosts.indexOf(targetPostID)\n        if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1)\n        this.setState({ userInfo: userInfo })\n    }\n\n    // Mount the current user state passed in from the app.js\n    componentDidMount() {\n        this.changeUserState();\n    }\n\n    // All of these data will not be hardcoded and will be fetched from a database\n    /********************************************************************************\n    for phase 2, you would be making a server call to get the user information and \n    update the state accordingly, will also fetch its corresponded posts\n    *********************************************************************************/\n    changeUserState = () => {\n        if(this.state.userLevel === \"User\") {\n            this.state.avatar = \"U\";\n            this.state.bio = \"An individual that is pursuing one's passions.\";\n            this.state.username = \"user\";\n            this.state.name = \"User X\";\n            this.state.email = \"user@123.com\";\n            this.state.occupation = \"Student\";\n            this.state.birthday = \"2021-03-08\";\n            this.state.commenter = \"User\";\n            this.state.posts = [\n                {author: 'User', \n                authorUsertype: \"RU\",\n                title: 'Welcome to communtiy', \n                content: 'this is the first community thread', \n                authorAvatar: \"U\",\n                category: \"Announcement\",\n                postID: 1,\n                numUpvotes: 5,\n                numDownvotes: 1,\n                comments: [\n                {commenter: \"User2\",\n                    commentContent: \"This is a great post\"},\n                {commenter: \"User3\",\n                    commentContent: \"This is a bad post\"}\n                ]\n                },\n                {author: 'User', \n                authorUsertype: \"RU\",\n                title: 'My second post', \n                content: 'This is the second post ever!!!!!!!', \n                authorAvatar: \"U\",\n                category: \"Opinion\",\n                postID: 2,\n                numUpvotes: 4,\n                numDownvotes: 2,\n                comments: [\n                {commenter: \"Financial Advisor3\",\n                    commentContent: \"You should come to my page to learn about financials\"},\n                {commenter: \"User4\",\n                    commentContent: \"Go buy GME!\"}\n                ]\n                }\n            ];\n            this.setState({\n                avatar: this.state.avatar,\n                bio: this.state.bio,\n                username: this.state.username,\n                name: this.state.name,\n                email: this.state.email,\n                occupation: this.state.occupation,\n                birthday: this.state.birthday,\n                posts: this.state.posts,\n                commenter: this.state.commenter,\n            })\n            \n        } else if(this.state.userLevel === \"Financial Advisor\") {\n            this.state.avatar = \"A\";\n            this.state.bio = \"A certified financial advisor, dedicated to help others\";\n            this.state.username = \"admin\";\n            this.state.name = \"Admin X\";\n            this.state.email = \"admin@123.com\";\n            this.state.occupation = \"Financial advisor\";\n            this.state.birthday = \"2021-03-08\";\n            this.state.commenter = \"Admin\";\n            this.state.posts = [\n                {author: 'Admin', \n                authorUsertype: \"FA\",\n                title: 'Welcome to communtiy', \n                content: 'I am the financial advisor', \n                authorAvatar: \"A\",\n                category: \"Announcement\",\n                postID: 1,\n                numUpvotes: 5,\n                numDownvotes: 1,\n                comments: [\n                {commenter: \"User2\",\n                    commentContent: \"This is a great post\"},\n                {commenter: \"User3\",\n                    commentContent: \"This is a bad post\"}\n                ]\n                },\n                {author: 'Admin', \n                authorUsertype: \"FA\",\n                title: 'My second post', \n                content: 'I am here to provide you guys with some help in financing', \n                authorAvatar: \"A\",\n                category: \"Opinion\",\n                postID: 2,\n                numUpvotes: 4,\n                numDownvotes: 2,\n                comments: [\n                {commenter: \"Financial Advisor3\",\n                    commentContent: \"You should come to my page to learn about financials\"},\n                {commenter: \"User4\",\n                    commentContent: \"Go buy GME!\"}\n                ]\n                }\n            ];\n            this.setState({\n                avatar: this.state.avatar,\n                bio: this.state.bio,\n                username: this.state.username,\n                name: this.state.name,\n                email: this.state.email,\n                occupation: this.state.occupation,\n                birthday: this.state.birthday,\n                posts: this.state.posts,\n                commenter: this.state.commenter,\n            })\n        }\n    }\n\n    render() {\n        const { classes, username, handleLogOut, password, userLevel, loggedIn } = this.props;\n\n        if(userLevel === \"User\") {\n            this.state.userLevel = \"User\"\n        } else if(userLevel === \"Financial Advisor\") {\n            this.state.userLevel = \"Financial Advisor\"\n        }\n\n        return ( \n\n            loggedIn ? \n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    { this.state.userLevel === \"User\" ? \n                        <AppBar color=\"secondary\" position=\"fixed\" className={classes.appBar}>\n                            <Toolbar>\n                                <Typography variant='h6' noWrap>\n                                    Profile\n                                </Typography>\n\n                                <Tabs inkBarStyle={{background: 'black'}} centered>\n                    \n                                    <Link to={'/spendings'} className={classes.tabs, classes.removeLine}>\n                                        <Tab label=\"Spendings\"/>\n                                    </Link>\n\n                                    <Link to={'/investments'}  className={classes.tabs, classes.removeLine}>\n                                        <Tab label=\"Investments\"/>\n                                    </Link>\n                                    \n                                    <Link to={'/community'} className={classes.tabs, classes.removeLine}>\n                                        <Tab label=\"Community\"/>\n                                    </Link>\n\n                                </Tabs>\n                            </Toolbar>\n                        </AppBar>\n                        :\n                        <AppBar color=\"secondary\" position=\"fixed\" className={classes.appBar}>\n                            <Toolbar>\n                                <Typography variant='h6' noWrap>\n                                    Profile\n                                </Typography>\n\n                                <Tabs inkBarStyle={{background: 'black'}} centered>\n                                    <Link to={'/community'} className={classes.tabs, classes.removeLine}>\n                                        <Tab label=\"Community\"/>\n                                    </Link>\n                                </Tabs>\n                            </Toolbar>\n                        </AppBar>\n                    }\n                    <Drawer className={classes.drawer} \n                            variant=\"permanent\"\n                            anchor=\"left\"\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                    >\n                        <Toolbar />\n                        <div className={classes.drawerContainer}>\n                            <Avatar align=\"center\"\n                                    name=\"avatar\"\n                                    value={this.state.avatar}\n                                    className={classes.avatar}>{ this.state.avatar }</Avatar>\n\n                            { this.state.edit ? \n                                <Edit \n                                    handleInputChange={ this.handleInputChange }\n                                    username={ this.state.username }\n                                    name={ this.state.name }\n                                    email={ this.state.email }\n                                    occupation={ this.state.occupation }\n                                    birthday={ this.state.birthday }\n                                    bio={ this.state.bio }\n                                />\n                                :\n                                <Done  \n                                    username={ this.state.username }\n                                    name={ this.state.name }\n                                    email={ this.state.email }\n                                    occupation={ this.state.occupation }\n                                    birthday={ this.state.birthday }\n                                    bio={ this.state.bio } \n                                />    \n                            }\n                            \n                            { this.state.edit ? \n                                <Button onClick={ this.handleEdit }\n                                        color=\"primary\" \n                                        variant=\"contained\" \n                                        className={classes.doneButton}>\n                                    Done\n                                </Button>\n                            :\n                            <div>\n                                <Button onClick={ this.handleEdit }\n                                        color=\"primary\" \n                                        variant=\"contained\" \n                                        className={classes.editButton}>\n                                    Edit Profile\n                                </Button>\n                                <Link to={\"/\"}>\n                                    <Button onClick={ () => handleLogOut() }\n                                            color=\"primary\" \n                                            variant=\"contained\" \n                                            className={classes.logoutButton}>\n                                        Log Out\n                                    </Button>\n                                </Link>\n                            </div>\n                            }\n                        </div>\n                    </Drawer>\n                   \n                    <main className={classes.content}>\n                        <Grid container direction=\"row\" className={classes.numberGroup}>\n                            <div className={classes.group}>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.followersButton} onClick={ this.handleFollowersOpen }>\n                                    Followers\n                                    <br></br>\n                                    { this.state.followerData.length }\n                                </Button>\n                                <Dialog open={ this.state.openFollowers } \n                                        onClose={ this.handleFollowersClose }  \n                                        PaperComponent={PaperComponent}\n                                        aria-labelledby=\"draggable\"\n                                        className={classes.dialog}\n                                        classes={{\n                                            paper: classes.paper,\n                                        }}\n                                        >\n                                    <DialogTitle className={classes.dialogue_cursor} id=\"draggable\">\n                                        Followers\n                                    </DialogTitle>\n                                    \n                                    { this.state.followerData.map((followerData) => (\n                                        <Followers followerData={followerData} handleFollow={ this.handleFollow } handleUnfollow={ this.handleUnfollow } />\n                                    ))}\n                                    \n                                    <HandleClosing handleClose={ this.handleFollowersClose } />\n                                </Dialog>\n                            </div>\n                            <div className={classes.group}>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.followingButton} onClick={ this.handleFollowingOpen }>\n                                    Following\n                                    <br></br>\n                                    { this.state.followingData.length }\n                                </Button>\n                                <Dialog open={ this.state.openFollowing } \n                                        onClose={ this.handleFollowingClose }  \n                                        PaperComponent={ PaperComponent }\n                                        aria-labelledby=\"draggable\"\n                                        classes={{\n                                            paper: classes.paper,\n                                        }}\n                                        >\n                                    <DialogTitle className={classes.dialogue_cursor} id=\"draggable\">\n                                        Following\n                                    </DialogTitle>\n\n                                    { this.state.followingData.map((followingData) => (\n                                        <Following followingData={followingData} handleFollow={ this.handleFollowing } handleUnfollow={ this.handleUnfollowing } />\n                                    ))}\n\n                                    <HandleClosing handleClose={ this.handleFollowingClose } />\n                                </Dialog>\n                            </div>\n                            <div className={classes.group1}>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.postButton}>\n                                    Posts\n                                    <br></br>\n                                    { this.state.posts.length }\n                                </Button>\n                            </div>    \n                        </Grid>\n\n                        <div>\n                            <Typography variant='h5' className={classes.post}>\n                                My posts:\n                            </Typography>\n\n                            { this.state.posts == \"\" ? \n                                <div>\n                                    <PostAddIcon className={classes.postIcon}/>\n                                    <Typography variant='h5' className={classes.nothing}>\n                                        You don't have anything posted yet. Go post something!\n                                    </Typography>\n                                </div>\n                                :\n                                <List className={ classes.forumList }>\n                                    { this.state.posts.map((thread) => {\n                                        if (this.state.openManagePost ? this.state.postFilter === \"\" && thread.author === username : this.state.postFilter === \"\") {\n                                            return (\n                                            <div>\n                                                <ForumListItem postTitle={ thread.title }\n                                                            postAuthor={ thread.author }\n                                                            postAuthorUsertype={ thread.authorUsertype}\n                                                            postTextContent={ thread.content }\n                                                            avatar={ thread.authorAvatar }\n                                                            category={ thread.category }\n                                                            comments={ thread.comments }\n                                                            postID={ thread.postID }\n                                                            openManagePost={ this.state.openManagePost ? true : false }\n                                                            numUpvotes={ thread.numUpvotes }\n                                                            numDownvotes={ thread.numDownvotes }\n                                                            userInfo={ this.state.userInfo }\n                                                            addUpvote={ this.addUpvote }\n                                                            minusUpvote={ this.minusUpvote }\n                                                            addDownvote={ this.addDownvote }\n                                                            minusDownvote={ this.minusDownvote }\n                                                            deletePosts={ this.deletePosts }\n                                                            postComment={ this.postComment }/>\n                                                { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                                            </div>\n                                            )\n                                        }\n                                    })\n                                }\n                                </List>\n                            }\n                            \n                        </div>\n                    </main> \n                </div>\n            </ThemeProvider> : <Redirect to=\"/login\" />\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Profile);"]},"metadata":{},"sourceType":"module"}