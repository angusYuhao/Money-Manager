{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js\";\nimport React from 'react';\nimport Input from './Input';\nimport StockList from './StockList'; // import Canvas from './canvasExample'\n\nimport PieChart from './PieChart';\nimport BarChart from './BarChart';\nimport TableComp from '../Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Investments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost Per Share\", \"Market Value Per Share\", \"Book cost\", \"Gain Lost\", \"Percentage of portfolio\"],\n      transactions_options: [\"Any\", \"Number\", \"Any\", \"Select\"],\n      pieChartSize: 900,\n      pieChartRadius: 200,\n      totalAmountInvested: 100,\n      ticker: 0,\n      quantity: 0,\n      price: 0,\n      avgCost: 0,\n      mktValue: 0,\n      bookCost: 0,\n      gainLoss: 0,\n      percentageOfPortfolio: 0,\n      stockList: [{\n        name: \"FB\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 32.5,\n        mktValue: 1,\n        bookCost: 100,\n        gainLoss: 100,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GOOGL\",\n        quantity: 3,\n        price: 1.0,\n        avgCost: 1523,\n        mktValue: 1,\n        bookCost: 37,\n        gainLoss: 200,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"PDD\",\n        quantity: 8,\n        price: 1.0,\n        avgCost: 170,\n        mktValue: 1,\n        bookCost: 34,\n        gainLoss: 20,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"GME\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 340,\n        mktValue: 1,\n        bookCost: 78,\n        gainLoss: -89,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"MSFT\",\n        quantity: 4,\n        price: 1.0,\n        avgCost: 230,\n        mktValue: 1,\n        bookCost: 45,\n        gainLoss: -201,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"BABA\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 46,\n        gainLoss: 30,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"V\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 50,\n        gainLoss: 67,\n        percentageOfPortfolio: 100\n      }, {\n        name: \"SHOP\",\n        quantity: 20,\n        price: 1.0,\n        avgCost: 220,\n        mktValue: 1,\n        bookCost: 87,\n        gainLoss: 3,\n        percentageOfPortfolio: 100\n      }]\n    };\n\n    this.handleInputStock = () => {\n      console.log(\"Handling input stock\");\n      console.log(this.state.bookCost);\n      console.log(this.state.totalAmountInvested);\n      let a = Number(this.state.quantity) * Number(this.state.price);\n      console.log(Number(this.totalAmountInvested) + Number(a));\n      const stock = {\n        name: this.state.name,\n        //no query selector..\n        quantity: this.state.quantity,\n        price: this.state.price,\n        avgCost: this.state.avgCost,\n        mktValue: this.state.mktValue,\n        bookCost: Number(this.state.quantity) * Number(this.state.price),\n        gainLoss: this.state.gainLoss,\n        percentageOfPortfolio: Number(this.state.bookCost) / (Number(this.state.bookCost) + Number(this.state.totalAmountInvested)) * 100,\n        totalAmountInvested: Number(this.totalAmountInvested) + Number(this.bookCost)\n      };\n      const currList = this.state.stockList;\n      console.log(currList);\n      currList.push(stock);\n      this.setState({\n        stockList: currList\n      });\n      console.log(Number(stock.totalAmountInvested));\n      console.log(currList);\n\n      for (let i = 0; i < this.state.stockList.length; i++) {\n        let allStocks = [...this.state.stockList]; // 2. Make a shallow copy of the item you want to mutate\n\n        let currentStock = { ...allStocks[i]\n        }; // 3. Replace the property you're intested in\n\n        console.log(Number(currentStock.bookCost));\n        console.log(Number(currentStock.totalAmountInvested));\n        currentStock.percentageOfPortfolio = Number(currentStock.bookCost) / Number(currentStock.totalAmountInvested); // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n        allStocks[i] = currentStock; // 5. Set the state to our new copy\n\n        this.setState({\n          allStocks\n        }); // console.log(this.state.stockList[i].percentageOfPortfolio)\n        // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n        // console.log(this.state.stockList[i].percentageOfPortfolio)\n      }\n    };\n\n    this.handleInputChange = event => {\n      //this in this function refers to the app\n      console.log(\"Handle input change\");\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        //this is bound to App class \n        [name]: value //now the name of the input\n        //entire state is updated\n\n      });\n    };\n\n    this.deleteStock = stock => {\n      //make var because not mutating this \n      console.log(\"Delete\");\n      const filteredStock = this.state.stockList.filter(s => {\n        return s !== stock; //the one's we don't want to remove\n      });\n      this.setState({\n        stockList: filteredStock\n      });\n    };\n\n    this.editStock = (stock, valueToEdit) => {\n      console.log(\"Editing stock\");\n      console.log(stock);\n      console.log(\"Value\");\n      console.log(valueToEdit);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        stockList: this.state.stockList,\n        handleInputStock: this.handleInputStock,\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StockList, {\n        stockList: this.state.stockList,\n        deleteStock: this.deleteStock,\n        editStock: this.editStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        listToDisplay: this.state.stockList,\n        pieChartSize: this.state.pieChartSize,\n        pieChartRadius: this.state.pieChartRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        listToDisplay: this.state.stockList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Investments;\n/*  */","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Investments/index.js"],"names":["React","Input","StockList","PieChart","BarChart","TableComp","Investments","Component","state","stockList_headings","transactions_options","pieChartSize","pieChartRadius","totalAmountInvested","ticker","quantity","price","avgCost","mktValue","bookCost","gainLoss","percentageOfPortfolio","stockList","name","handleInputStock","console","log","a","Number","stock","currList","push","setState","i","length","allStocks","currentStock","handleInputChange","event","target","value","deleteStock","filteredStock","filter","s","editStock","valueToEdit","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input'\nimport StockList from './StockList'\n// import Canvas from './canvasExample'\nimport PieChart from './PieChart'\nimport BarChart from './BarChart'\nimport TableComp from '../Table'\n\n\n\nclass Investments extends React.Component {\n\n  state = {\n    stockList_headings: [\"Name\", \"Quantity\", \"Price\", \"Average Cost Per Share\", \"Market Value Per Share\", \"Book cost\", \"Gain Lost\", \"Percentage of portfolio\"],\n    transactions_options: [\"Any\", \"Number\", \"Any\", \"Select\"],\n    \n    \n    \n    \n    pieChartSize: 900,\n    pieChartRadius: 200,\n    totalAmountInvested: 100,\n    ticker: 0,\n    quantity: 0,\n    price: 0,\n    avgCost: 0,\n    mktValue: 0,\n    bookCost: 0,\n    gainLoss: 0,\n    percentageOfPortfolio:0,\n    stockList: [{name: \"FB\", quantity: 20, price: 1.0, avgCost: 32.5, mktValue: 1, bookCost: 100, gainLoss:100, percentageOfPortfolio:100 },\n    {name: \"GOOGL\", quantity: 3, price: 1.0, avgCost: 1523, mktValue: 1, bookCost: 37, gainLoss:200, percentageOfPortfolio:100 },\n    {name: \"PDD\", quantity: 8, price: 1.0, avgCost: 170, mktValue: 1, bookCost: 34, gainLoss:20, percentageOfPortfolio:100 },\n    {name: \"GME\", quantity: 4, price: 1.0, avgCost: 340, mktValue: 1, bookCost: 78, gainLoss:-89, percentageOfPortfolio:100 },\n    {name: \"MSFT\", quantity: 4, price: 1.0, avgCost: 230, mktValue: 1, bookCost: 45, gainLoss:-201, percentageOfPortfolio:100 },\n    {name: \"BABA\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 46, gainLoss:30, percentageOfPortfolio:100 },\n    {name: \"V\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 50, gainLoss:67, percentageOfPortfolio:100 },\n    {name: \"SHOP\", quantity: 20, price: 1.0, avgCost: 220, mktValue: 1, bookCost: 87, gainLoss:3, percentageOfPortfolio:100 }],\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     canvasRef: useCanvas()\n  //   };\n  // }\n\n  handleInputStock = () => {\n    console.log(\"Handling input stock\");\n    console.log(this.state.bookCost)\n    console.log(this.state.totalAmountInvested)\n    let a =Number(this.state.quantity)* Number(this.state.price)\n    console.log(Number(this.totalAmountInvested)+Number(a))\n    const stock = {\n      name:this.state.name,//no query selector..\n      quantity: this.state.quantity,\n      price: this.state.price,\n      avgCost: this.state.avgCost,\n      mktValue: this.state.mktValue,\n      bookCost: Number(this.state.quantity)* Number(this.state.price),\n      gainLoss: this.state.gainLoss,\n      percentageOfPortfolio:(Number(this.state.bookCost)/(Number(this.state.bookCost)+Number(this.state.totalAmountInvested)))*100,\n      totalAmountInvested: Number(this.totalAmountInvested)+Number(this.bookCost)\n    }\n    const currList = this.state.stockList\n    console.log(currList)\n    currList.push(stock)\n    this.setState({\n      stockList:currList\n    })\n\n    console.log(Number(stock.totalAmountInvested))\n\n\n    console.log(currList)\n    for(let i = 0; i < this.state.stockList.length; i++){\n      let allStocks = [...this.state.stockList];\n      // 2. Make a shallow copy of the item you want to mutate\n      let currentStock = {...allStocks[i]};\n      // 3. Replace the property you're intested in\n      console.log(Number(currentStock.bookCost))\n      console.log(Number(currentStock.totalAmountInvested))\n      currentStock.percentageOfPortfolio = Number(currentStock.bookCost)/Number(currentStock.totalAmountInvested);\n      // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n      allStocks[i] = currentStock;\n      // 5. Set the state to our new copy\n      this.setState({allStocks});\n\n\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n      // this.state.stockList[i].percentageOfPortfolio = Number(this.state.stockList[i].bookCost)/Number(this.state.stockList[i].totalAmountInvested)\n      // console.log(this.state.stockList[i].percentageOfPortfolio)\n    }\n\n  }\n\n  handleInputChange = (event) =>{\n    //this in this function refers to the app\n    console.log(\"Handle input change\")\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    this.setState({\n      //this is bound to App class \n      [name]: value //now the name of the input\n      \n      //entire state is updated\n    })\n\n  }\n\n\n    //student is the object to reference\n  deleteStock = (stock) => {\n    //make var because not mutating this \n    console.log(\"Delete\")\n    const filteredStock = this.state.stockList.filter((s) => {\n      return s !== stock  //the one's we don't want to remove\n    })\n\n    this.setState({\n      stockList: filteredStock\n    })\n  }\n\n  editStock = (stock, valueToEdit) => {\n\n    console.log(\"Editing stock\")\n    console.log(stock)\n    console.log(\"Value\")\n    console.log(valueToEdit)\n    \n  }\n\n  render() {\n    return (\n\n      <div>\n \n      <Input stockList={this.state.stockList} \n      handleInputStock = {this.handleInputStock} \n      handleInputChange = {this.handleInputChange}\n      />\n      <StockList stockList={this.state.stockList} deleteStock = {this.deleteStock} editStock = {this.editStock}/>\n      \n   \n      <PieChart listToDisplay = {this.state.stockList} pieChartSize = {this.state.pieChartSize} pieChartRadius = {this.state.pieChartRadius}/>\n      <BarChart listToDisplay = {this.state.stockList}/>\n\n      </div>\n      \n\n    )\n\n  }\n\n}\n\nexport default Investments;\n\n/*  */"]},"metadata":{},"sourceType":"module"}