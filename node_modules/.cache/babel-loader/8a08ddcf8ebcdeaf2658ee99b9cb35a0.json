{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/forumList.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ForumListItem from \"./forumListItem.js\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from '@material-ui/icons/Add'; // define styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: 50\n  },\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: 10\n  },\n  forumTopBar: {\n    backgroundColor: deepPurple[50],\n    borderRadius: 5,\n    spacing: '100'\n  },\n  forumTopChunk: {\n    margin: 10\n  },\n  addPostPanel: {\n    backgroundColor: '#f0f0f0'\n  },\n  filter: {\n    minWidth: 200\n  },\n  forumBarButton: {\n    padding: 10,\n    marginLeft: 10,\n    marginRight: 0\n  },\n  purpleText: {\n    color: deepPurple[500],\n    fontSize: 30\n  }\n}); // define theme\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[800]\n    },\n    secondary: {\n      main: deepPurple[100]\n    }\n  },\n  typography: {\n    fontFamily: ['Poppins', 'sans-serif'].join(',')\n  }\n}); // class defintion\n\nclass ForumList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openNewPost: false,\n      openManagePost: false,\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postFilter: \"\",\n      sortOrder: \"\",\n      commenter: \"\",\n      commentContent: \"\",\n      posts: [{\n        author: 'Angus Wang',\n        authorUsertype: \"FA\",\n        title: 'welcome to communtiy',\n        content: 'this is the first community thread',\n        authorAvatar: null,\n        category: \"Announcement\",\n        postID: 1,\n        numUpvotes: 5,\n        numDownvotes: 1,\n        comments: [{\n          commenter: \"Angus Wang\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"\n        }, {\n          commenter: \"Angus Wang2\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"\n        }]\n      }, {\n        author: 'boogy boy',\n        authorUsertype: \"RU\",\n        title: 'test thread',\n        content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ',\n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 2,\n        numUpvotes: 4,\n        numDownvotes: 2,\n        comments: [{\n          commenter: \"Angus Wang3\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"\n        }, {\n          commenter: \"Dude with an attitude\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"\n        }]\n      }, {\n        author: 'Angela Merkel',\n        authorUsertype: \"FA\",\n        title: 'Best thread ever',\n        content: 'testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again',\n        authorAvatar: null,\n        category: \"Question\",\n        postID: 3,\n        numUpvotes: 30,\n        numDownvotes: 5,\n        comments: [{\n          commenter: \"Angus Wang4\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"\n        }, {\n          commenter: \"Dude with an attitude2\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"\n        }]\n      }, {\n        author: 'dragonslayer420',\n        authorUsertype: \"FA\",\n        title: 'Another awesome thread',\n        content: 'The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying ',\n        authorAvatar: null,\n        category: \"Question\",\n        postID: 4,\n        numUpvotes: 40,\n        numDownvotes: 20,\n        comments: [{\n          commenter: \"Lord of the rings\",\n          commentContent: \"This truly is the greatest post, many thanks!\"\n        }, {\n          commenter: \"Claude Debussy\",\n          commentContent: \"This thread is pure garbage, please don't ever post again.\"\n        }]\n      }, {\n        author: 'Random dude',\n        authorUsertype: \"RU\",\n        title: 'Unpopular Opinions are unpopular for a reason',\n        content: 'The title says it all!',\n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 5,\n        numUpvotes: 1,\n        numDownvotes: 50,\n        comments: [{\n          commenter: \"Unpopular Opinion\",\n          commentContent: \"This is an insult, I will have to report this thread\"\n        }]\n      }]\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        openNewPost: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openNewPost: false,\n        openManagePost: false,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postID: null\n      });\n    };\n\n    this.handleClickManage = () => {\n      this.setState({\n        openManagePost: true\n      });\n    };\n\n    this.handleClickManageDone = () => {\n      this.setState({\n        openManagePost: false\n      });\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFilterInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        postFilter: value\n      });\n    };\n\n    this.handleSortInputChange = event => {\n      const value = event.target.value;\n      this.setState({\n        sortOrder: value\n      }, () => this.sortPosts(value));\n    };\n\n    this.sortPosts = order => {\n      const posts = this.state.posts;\n\n      switch (order) {\n        case \"Oldest\":\n          posts.sort((a, b) => a.postID > b.postID ? 1 : -1);\n          break;\n\n        case \"Newest\":\n          posts.sort((a, b) => a.postID < b.postID ? 1 : -1);\n          break;\n\n        case \"MostUpvotes\":\n          posts.sort((a, b) => a.numUpvotes < b.numUpvotes ? 1 : -1);\n          break;\n\n        case \"BestRated\":\n          posts.sort((a, b) => a.numUpvotes - a.numDownvotes < b.numUpvotes - b.numDownvotes ? 1 : -1);\n      }\n\n      this.setState({\n        posts: posts\n      });\n    };\n\n    this.addPost = username => {\n      const postList = this.state.posts;\n      const maxValue = Math.max.apply(Math, postList.map(function (p) {\n        return p.postID;\n      }));\n      const newID = postList.length === 0 ? 1 : maxValue + 1;\n      const newPost = {\n        author: username,\n        authorUsertype: this.props.userInfo.usertype,\n        title: this.state.title,\n        authorAvatar: null,\n        content: this.state.content,\n        category: this.state.category,\n        postID: newID,\n        numUpvotes: 0,\n        numDownvotes: 0,\n        comments: []\n      };\n      postList.push(newPost);\n      this.setState({\n        posts: postList,\n        author: \"\",\n        title: \"\",\n        authorAvatar: \"\",\n        content: \"\",\n        category: \"\",\n        postID: null\n      });\n      this.handleClose();\n      this.sortPosts(this.state.sortOrder);\n    };\n\n    this.changeCategory = _category => {\n      this.setState({\n        category: _category\n      });\n    };\n\n    this.postComment = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      const targetPostComments = targetPost[0].comments;\n      const newComment = {\n        commenter: this.props.username,\n        commentContent: target.comment\n      };\n      targetPostComments.push(newComment);\n      targetPost[0].comments = targetPostComments;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n    };\n\n    this.deletePosts = target => {\n      const targetPostID = target.postID;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.props.userInfo;\n      const indexu = userInfo.userUpvotedPosts.indexOf(targetPostID);\n      const indexd = userInfo.userDownvotedPosts.indexOf(targetPostID);\n      const indexs = userInfo.userSavedPosts.indexOf(targetPostID);\n\n      if (indexu !== -1) {\n        userInfo.userUpvotedPosts.splice(indexu, 1);\n        this.props.userInfoUpdater(userInfo);\n      }\n\n      if (indexd !== -1) {\n        userInfo.userDownvotedPosts.splice(indexd, 1);\n        this.props.userInfoUpdater(userInfo);\n      }\n\n      if (indexs !== -1) {\n        userInfo.userSavedPosts.splice(indexs, 1);\n        this.props.userInfoUpdater(userInfo);\n      }\n    };\n\n    this.addUpvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.props.userInfo;\n      userInfo.userUpvotedPosts.push(targetPostID);\n      this.props.userInfoUpdater(userInfo);\n    };\n\n    this.minusUpvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.props.userInfo;\n      const index = userInfo.userUpvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1);\n      this.props.userInfoUpdater(userInfo);\n    };\n\n    this.addDownvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.props.userInfo;\n      userInfo.userDownvotedPosts.push(targetPostID);\n      this.props.userInfoUpdater(userInfo);\n    };\n\n    this.minusDownvote = target => {\n      const targetPostID = target.postID;\n      const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID);\n      const targetPost = this.state.posts.filter(p => {\n        return p.postID === targetPostID;\n      });\n      targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1;\n      const otherPosts = this.state.posts.filter(p => {\n        return p.postID !== targetPostID;\n      });\n      otherPosts.splice(targetPostIndex, 0, targetPost[0]);\n      this.setState({\n        posts: otherPosts\n      });\n      const userInfo = this.props.userInfo;\n      const index = userInfo.userDownvotedPosts.indexOf(targetPostID);\n      if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1);\n      this.props.userInfoUpdater(userInfo);\n    };\n  }\n\n  // main render function\n  render() {\n    // pass in props\n    const {\n      userInfo,\n      FAInfo,\n      userInfoUpdater,\n      sidebarToggle\n    } = this.props;\n    const {\n      classes\n    } = this.props; // mainList is the list of posts to display, here we display different versions of the list based on some parameters\n\n    let mainList; // case when the side bar is set to home\n\n    if (sidebarToggle === \"Home\") {\n      mainList = /*#__PURE__*/_jsxDEV(List, {\n        className: classes.forumList,\n        children: this.state.posts.map(thread => {\n          if (this.state.openManagePost ? userInfo.usertype === \"FA\" ? this.state.postFilter === \"\" : this.state.postFilter === \"\" && thread.author === userInfo.username : this.state.postFilter === \"\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                postTitle: thread.title,\n                postAuthor: thread.author,\n                postAuthorUsertype: thread.authorUsertype,\n                postTextContent: thread.content,\n                avatar: thread.authorAvatar,\n                category: thread.category,\n                comments: thread.comments,\n                postID: thread.postID,\n                openManagePost: this.state.openManagePost ? true : false,\n                numUpvotes: thread.numUpvotes,\n                numDownvotes: thread.numDownvotes,\n                userInfo: userInfo,\n                FAInfo: FAInfo,\n                userInfoUpdater: userInfoUpdater,\n                addUpvote: this.addUpvote,\n                minusUpvote: this.minusUpvote,\n                addDownvote: this.addDownvote,\n                minusDownvote: this.minusDownvote,\n                deletePosts: this.deletePosts,\n                postComment: this.postComment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this);\n          } else if (this.state.openManagePost ? userInfo.usertype === \"FA\" ? this.state.postFilter === thread.category : this.state.postFilter === thread.category && thread.author === userInfo.username : this.state.postFilter === thread.category) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                postTitle: thread.title,\n                postAuthor: thread.author,\n                postAuthorUsertype: thread.authorUsertype,\n                postTextContent: thread.content,\n                avatar: thread.authorAvatar,\n                category: thread.category,\n                comments: thread.comments,\n                postID: thread.postID,\n                openManagePost: this.state.openManagePost ? true : false,\n                numUpvotes: thread.numUpvotes,\n                numDownvotes: thread.numDownvotes,\n                userInfo: userInfo,\n                FAInfo: FAInfo,\n                userInfoUpdater: userInfoUpdater,\n                addUpvote: this.addUpvote,\n                minusUpvote: this.minusUpvote,\n                addDownvote: this.addDownvote,\n                minusDownvote: this.minusDownvote,\n                deletePosts: this.deletePosts,\n                postComment: this.postComment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 18\n      }, this);\n    } // case when the side bar is set to Followed Posts\n    else if (sidebarToggle === \"Followed Posts\") {\n        mainList = /*#__PURE__*/_jsxDEV(List, {\n          className: classes.forumList,\n          children: this.state.posts.map(thread => {\n            if (this.state.postFilter === \"\" && userInfo.userFollows.includes(FAInfo.filter(FA => {\n              return FA.FAName === thread.author;\n            })[0])) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postAuthorUsertype: thread.authorUsertype,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postID: thread.postID,\n                  openManagePost: this.state.openManagePost ? true : false,\n                  numUpvotes: thread.numUpvotes,\n                  numDownvotes: thread.numDownvotes,\n                  userInfo: userInfo,\n                  FAInfo: FAInfo,\n                  userInfoUpdater: userInfoUpdater,\n                  addUpvote: this.addUpvote,\n                  minusUpvote: this.minusUpvote,\n                  addDownvote: this.addDownvote,\n                  minusDownvote: this.minusDownvote,\n                  deletePosts: this.deletePosts,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 87\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this);\n            } else if (this.state.postFilter === thread.category && userInfo.userFollows.includes(FAInfo.filter(FA => {\n              return FA.FAName === thread.author;\n            })[0])) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                  postTitle: thread.title,\n                  postAuthor: thread.author,\n                  postAuthorUsertype: thread.authorUsertype,\n                  postTextContent: thread.content,\n                  avatar: thread.authorAvatar,\n                  category: thread.category,\n                  comments: thread.comments,\n                  postID: thread.postID,\n                  openManagePost: this.state.openManagePost ? true : false,\n                  numUpvotes: thread.numUpvotes,\n                  numDownvotes: thread.numDownvotes,\n                  userInfo: userInfo,\n                  FAInfo: FAInfo,\n                  userInfoUpdater: userInfoUpdater,\n                  addUpvote: this.addUpvote,\n                  minusUpvote: this.minusUpvote,\n                  addDownvote: this.addDownvote,\n                  minusDownvote: this.minusDownvote,\n                  deletePosts: this.deletePosts,\n                  postComment: this.postComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 19\n                }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"inset\",\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 87\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 18\n        }, this);\n      } // case when the side bar is set to Liked Posts\n      else if (sidebarToggle === \"Liked Posts\") {\n          mainList = /*#__PURE__*/_jsxDEV(List, {\n            className: classes.forumList,\n            children: this.state.posts.map(thread => {\n              if (this.state.postFilter === \"\" && userInfo.userUpvotedPosts.includes(thread.postID)) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                    postTitle: thread.title,\n                    postAuthor: thread.author,\n                    postAuthorUsertype: thread.authorUsertype,\n                    postTextContent: thread.content,\n                    avatar: thread.authorAvatar,\n                    category: thread.category,\n                    comments: thread.comments,\n                    postID: thread.postID,\n                    openManagePost: this.state.openManagePost ? true : false,\n                    numUpvotes: thread.numUpvotes,\n                    numDownvotes: thread.numDownvotes,\n                    userInfo: userInfo,\n                    FAInfo: FAInfo,\n                    userInfoUpdater: userInfoUpdater,\n                    addUpvote: this.addUpvote,\n                    minusUpvote: this.minusUpvote,\n                    addDownvote: this.addDownvote,\n                    minusDownvote: this.minusDownvote,\n                    deletePosts: this.deletePosts,\n                    postComment: this.postComment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 19\n                  }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                    variant: \"inset\",\n                    component: \"li\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 87\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 17\n                }, this);\n              } else if (this.state.postFilter === thread.category && userInfo.userUpvotedPosts.includes(thread.postID)) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                    postTitle: thread.title,\n                    postAuthor: thread.author,\n                    postAuthorUsertype: thread.authorUsertype,\n                    postTextContent: thread.content,\n                    avatar: thread.authorAvatar,\n                    category: thread.category,\n                    comments: thread.comments,\n                    postID: thread.postID,\n                    openManagePost: this.state.openManagePost ? true : false,\n                    numUpvotes: thread.numUpvotes,\n                    numDownvotes: thread.numDownvotes,\n                    userInfo: userInfo,\n                    FAInfo: FAInfo,\n                    userInfoUpdater: userInfoUpdater,\n                    addUpvote: this.addUpvote,\n                    minusUpvote: this.minusUpvote,\n                    addDownvote: this.addDownvote,\n                    minusDownvote: this.minusDownvote,\n                    deletePosts: this.deletePosts,\n                    postComment: this.postComment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 19\n                  }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                    variant: \"inset\",\n                    component: \"li\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 87\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 17\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 18\n          }, this);\n        } // case when the side bar is set to Saved Posts\n        else if (sidebarToggle === \"Saved Posts\") {\n            mainList = /*#__PURE__*/_jsxDEV(List, {\n              className: classes.forumList,\n              children: this.state.posts.map(thread => {\n                if (this.state.postFilter === \"\" && userInfo.userSavedPosts.includes(thread.postID)) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                      postTitle: thread.title,\n                      postAuthor: thread.author,\n                      postAuthorUsertype: thread.authorUsertype,\n                      postTextContent: thread.content,\n                      avatar: thread.authorAvatar,\n                      category: thread.category,\n                      comments: thread.comments,\n                      postID: thread.postID,\n                      openManagePost: this.state.openManagePost ? true : false,\n                      numUpvotes: thread.numUpvotes,\n                      numDownvotes: thread.numDownvotes,\n                      userInfo: userInfo,\n                      FAInfo: FAInfo,\n                      userInfoUpdater: userInfoUpdater,\n                      addUpvote: this.addUpvote,\n                      minusUpvote: this.minusUpvote,\n                      addDownvote: this.addDownvote,\n                      minusDownvote: this.minusDownvote,\n                      deletePosts: this.deletePosts,\n                      postComment: this.postComment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 19\n                    }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                      variant: \"inset\",\n                      component: \"li\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 666,\n                      columnNumber: 87\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 17\n                  }, this);\n                } else if (this.state.postFilter === thread.category && userInfo.userSavedPosts.includes(thread.postID)) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ForumListItem, {\n                      postTitle: thread.title,\n                      postAuthor: thread.author,\n                      postAuthorUsertype: thread.authorUsertype,\n                      postTextContent: thread.content,\n                      avatar: thread.authorAvatar,\n                      category: thread.category,\n                      comments: thread.comments,\n                      postID: thread.postID,\n                      openManagePost: this.state.openManagePost ? true : false,\n                      numUpvotes: thread.numUpvotes,\n                      numDownvotes: thread.numDownvotes,\n                      userInfo: userInfo,\n                      FAInfo: FAInfo,\n                      userInfoUpdater: userInfoUpdater,\n                      addUpvote: this.addUpvote,\n                      minusUpvote: this.minusUpvote,\n                      addDownvote: this.addDownvote,\n                      minusDownvote: this.minusDownvote,\n                      deletePosts: this.deletePosts,\n                      postComment: this.postComment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 19\n                    }, this), this.state.posts[this.state.posts.length - 1] === thread ? null : /*#__PURE__*/_jsxDEV(Divider, {\n                      variant: \"inset\",\n                      component: \"li\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 87\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 17\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 18\n            }, this);\n          }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.forumTopChunk,\n          children: [/*#__PURE__*/_jsxDEV(CardActions, {\n            className: classes.forumTopBar,\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.purpleText,\n                children: [\" \", sidebarToggle, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.filter,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Filter Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: this.handleFilterInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Announcement\",\n                  children: \"Announcement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Question\",\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Opinion\",\n                  children: \"Opinion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.filter,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Sort By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: this.handleSortInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Oldest\",\n                  children: \"Oldest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Newest\",\n                  children: \"Newest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"MostUpvotes\",\n                  children: \"Most Upvotes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"BestRated\",\n                  children: \"Best Rated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              Container: true,\n              justify: \"flex-end\",\n              children: [this.state.openManagePost === true || this.state.openNewPost === true || sidebarToggle !== \"Home\" ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add Post\",\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: this.handleClickOpen,\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add Post\",\n                children: /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: this.handleClickOpen,\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 21\n              }, this), this.state.openManagePost ? /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forumBarButton,\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: this.handleClickManageDone,\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 21\n              }, this) : sidebarToggle === \"Home\" ? /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forumBarButton,\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: this.handleClickManage,\n                children: \"Manage Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forumBarButton,\n                color: \"primary\",\n                variant: \"contained\",\n                disabled: true,\n                children: \"Manage Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), this.state.openNewPost ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.title,\n                onChange: this.handleInputChange,\n                size: \"small\",\n                variant: \"outlined\",\n                margin: \"dense\",\n                name: \"title\",\n                label: \"Post Title\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                color: \"primary\",\n                \"aria-label\": \"outlined primary button group\",\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Announcement\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Announcement\"),\n                  children: \"Announcement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Question\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Question\"),\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: this.state.category === \"Opinion\" ? \"contained\" : \"outlined\",\n                  onClick: () => this.changeCategory(\"Opinion\"),\n                  children: \"Opinion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.content,\n                onChange: this.handleInputChange,\n                multiline: true,\n                rows: \"5\",\n                variant: \"outlined\",\n                margin: \"dense\",\n                name: \"content\",\n                label: \"Say something here...\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.addPost(userInfo.username),\n                color: \"primary\",\n                disabled: this.state.title !== \"\" && this.state.content !== \"\" && this.state.category !== \"\" ? false : true,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this), mainList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(ForumList);","map":{"version":3,"sources":["/Users/emilyhuang/Documents/CSC309/groupProject/team06/src/components/Community/forumList.js"],"names":["React","List","Divider","Button","ButtonGroup","TextField","Grid","Container","InputLabel","MenuItem","FormControl","Select","Card","CardActions","CardContent","Typography","Fab","Tooltip","ForumListItem","createMuiTheme","deepPurple","withStyles","AddIcon","styles","theme","root","flexGrow","marginLeft","forumList","backgroundColor","borderRadius","margin","forumTopBar","spacing","forumTopChunk","addPostPanel","filter","minWidth","forumBarButton","padding","marginRight","purpleText","color","fontSize","palette","primary","main","secondary","typography","fontFamily","join","ForumList","Component","state","openNewPost","openManagePost","author","title","authorAvatar","content","category","postFilter","sortOrder","commenter","commentContent","posts","authorUsertype","postID","numUpvotes","numDownvotes","comments","handleClickOpen","setState","handleClose","handleClickManage","handleClickManageDone","handleInputChange","event","value","target","name","handleFilterInputChange","handleSortInputChange","sortPosts","order","sort","a","b","addPost","username","postList","maxValue","Math","max","apply","map","p","newID","length","newPost","props","userInfo","usertype","push","changeCategory","_category","postComment","targetPostID","targetPostIndex","findIndex","post","targetPost","targetPostComments","newComment","comment","otherPosts","splice","deletePosts","indexu","userUpvotedPosts","indexOf","indexd","userDownvotedPosts","indexs","userSavedPosts","userInfoUpdater","addUpvote","minusUpvote","index","addDownvote","minusDownvote","render","FAInfo","sidebarToggle","classes","mainList","thread","userFollows","includes","FA","FAName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ForumListItem from \"./forumListItem.js\"\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport AddIcon from '@material-ui/icons/Add';\n\n// define styles\nconst styles =  theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: 50,\n  },\n  forumList: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    margin: 10,\n  },\n  forumTopBar: {\n    backgroundColor: deepPurple[50],\n    borderRadius: 5,\n    spacing: '100',\n  },\n  forumTopChunk: {\n    margin: 10,\n  },\n  addPostPanel: {\n    backgroundColor: '#f0f0f0',\n  },\n  filter: {\n    minWidth: 200,\n  },\n  forumBarButton: {\n    padding: 10,\n    marginLeft: 10,\n    marginRight: 0,\n  },\n  purpleText: {\n    color: deepPurple[500],\n    fontSize: 30\n  }\n});\n\n// define theme\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: deepPurple[800],\n      },\n      secondary: {\n          main: deepPurple[100],\n      }\n  },\n  typography: {\n      fontFamily: [\n          'Poppins',\n          'sans-serif',\n      ].join(','),\n  },\n});\n\n// class defintion\nclass ForumList extends React.Component {\n\n  // ===state===\n  // openNewPost: determines if the newPost drop down is opened\n  // openManagePost: determines if user is managing posts\n  // author: holds the username of the current user if they decide to create a new post\n  // title: holds the new post's title\n  // authorAvatar: the user avatar of the user, currently set to null to display default user icon, later will be fetched from a database\n  // content: holds the new post's content\n  // category: holds the new post's category\n  // postFilter: decides which category of post to display on screen\n  // sortOrder: determines which order the posts are displayed\n  // commenter: holds the username of the current user if they decide to comment on a post\n  // commentContent: holds the new comment's content\n  // posts: stores information about all the posts posted on the website, will be fetched from a database\n  //    author: holds the post's author\n  //    authorUsertype: holds the post's author's user type (regular for financial advisor)\n  //    title: holds the title of the post\n  //    content: holds the content of the post\n  //    authorAvatar: holds the avatar of the post's author, currently null, will be fetched from a database\n  //    category: holds the category of the post\n  //    postID: unique id for the post, used to identify post (IMPORTANT)\n  //    numUpvotes: holds the number of upvotes of the post\n  //    numDownvotes: holds the number of downvotes of the post\n  //    comments: holds the list of comments in the post\n  //        commenter: the username of the commenter\n  //        commentContent: the content of the comment\n  state = {\n    openNewPost: false,\n    openManagePost: false,\n    author: \"\",\n    title: \"\",\n    authorAvatar: \"\",\n    content: \"\",\n    category: \"\",\n    postFilter: \"\",\n    sortOrder: \"\",\n    commenter: \"\",\n    commentContent: \"\",\n    posts: [\n      {author: 'Angus Wang', \n        authorUsertype: \"FA\",\n        title: 'welcome to communtiy', \n        content: 'this is the first community thread', \n        authorAvatar: null,\n        category: \"Announcement\",\n        postID: 1,\n        numUpvotes: 5,\n        numDownvotes: 1,\n        comments: [\n        {commenter: \"Angus Wang\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao\"},\n        {commenter: \"Angus Wang2\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao2\"}\n        ]\n      },\n      {author: 'boogy boy', \n        authorUsertype: \"RU\",\n        title: 'test thread', \n        content: 'another community thread lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao what do you think lmao ', \n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 2,\n        numUpvotes: 4,\n        numDownvotes: 2,\n        comments: [\n        {commenter: \"Angus Wang3\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"},\n        {commenter: \"Dude with an attitude\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"}\n        ]\n      },\n      {author: 'Angela Merkel', \n        authorUsertype: \"FA\",\n        title: 'Best thread ever', \n        content: 'testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again testing again', \n        authorAvatar: null,\n        category: \"Question\",\n        postID: 3,\n        numUpvotes: 30,\n        numDownvotes: 5,\n        comments: [\n        {commenter: \"Angus Wang4\",\n          commentContent: \"It is I, Angus Wang, once again! hohohohoh hohohohohooh lmao3\"},\n        {commenter: \"Dude with an attitude2\",\n          commentContent: \"The Communist Manifesto, originally the Manifesto of the Communist Party (German: Manifest der Kommunistischen Partei), is an 1848 political document by German philosophers Karl Marx and Friedrich Engels. Commissioned by the Communist League and originally published in London just as the Revolutions of 1848 began to erupt, the Manifesto was later recognised as one of the world's most influential political documents. It presents an analytical approach to the class struggle (historical and then-present) and the conflicts of capitalism and the capitalist mode of production, rather than a prediction of communism's potential future forms.\"}\n        ]\n      },\n      {author: 'dragonslayer420', \n        authorUsertype: \"FA\",\n        title: 'Another awesome thread', \n        content: 'The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying The art of dragon slaying ', \n        authorAvatar: null,\n        category: \"Question\",\n        postID: 4,\n        numUpvotes: 40,\n        numDownvotes: 20,\n        comments: [\n        {commenter: \"Lord of the rings\",\n          commentContent: \"This truly is the greatest post, many thanks!\"},\n        {commenter: \"Claude Debussy\",\n          commentContent: \"This thread is pure garbage, please don't ever post again.\"}\n        ]\n      },\n      {author: 'Random dude', \n        authorUsertype: \"RU\",\n        title: 'Unpopular Opinions are unpopular for a reason', \n        content: 'The title says it all!', \n        authorAvatar: null,\n        category: \"Opinion\",\n        postID: 5,\n        numUpvotes: 1,\n        numDownvotes: 50,\n        comments: [\n        {commenter: \"Unpopular Opinion\",\n          commentContent: \"This is an insult, I will have to report this thread\"}\n        ]\n      }\n    ]\n  }\n\n  // called when opening write new post\n  handleClickOpen = () => {\n\n    this.setState({ openNewPost: true })\n  }\n\n  // called when closing write new post\n  handleClose = () => {\n\n    this.setState({\n      openNewPost: false,\n      openManagePost: false,\n\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postID: null\n    })\n  }\n\n  // called when opening manage post\n  handleClickManage = () => {\n\n    this.setState({ openManagePost: true })\n  }\n\n  // called when finished manage post\n  handleClickManageDone = () => {\n\n    this.setState({ openManagePost: false })\n  }\n\n  // called when user types into a textbox\n  handleInputChange = (event) => {\n\n    const value = event.target.value\n    const name = event.target.name\n\n    this.setState({ [name]: value })\n  }\n\n  // called when user chooses a post filter\n  handleFilterInputChange = (event) => {\n\n    const value = event.target.value\n\n    this.setState({ postFilter: value })\n  }\n\n  // called when user chooses a sort by option\n  handleSortInputChange = (event) => {\n\n    const value = event.target.value\n\n    this.setState({ sortOrder: value }, () => this.sortPosts(value))\n  }\n\n  // helper that sort the list of posts\n  sortPosts = (order) => {\n\n    const posts = this.state.posts\n\n    switch(order) {\n      case \"Oldest\":\n        posts.sort((a, b) => a.postID > b.postID ? 1 : -1)\n        break;\n      case \"Newest\":\n        posts.sort((a, b) => a.postID < b.postID ? 1 : -1)\n        break;\n      case \"MostUpvotes\":\n        posts.sort((a, b) => a.numUpvotes < b.numUpvotes ? 1 : -1)\n        break;\n      case \"BestRated\":\n        posts.sort((a, b) => a.numUpvotes-a.numDownvotes < b.numUpvotes-b.numDownvotes ? 1 : -1)\n    }\n\n    this.setState({ posts: posts })\n  }\n\n  // called when a new post is created\n  addPost = (username) => {\n\n    const postList = this.state.posts\n    const maxValue = Math.max.apply(Math, postList.map(function(p) { return p.postID; }))\n    const newID = (postList.length === 0) ? 1 : maxValue + 1\n\n    const newPost = {\n      author: username,\n      authorUsertype: this.props.userInfo.usertype,\n      title: this.state.title,\n      authorAvatar: null,\n      content: this.state.content,\n      category: this.state.category,\n      postID: newID,\n      numUpvotes: 0,\n      numDownvotes: 0,\n      comments: []\n    }\n\n    postList.push(newPost)\n\n    this.setState({\n      posts: postList,\n\n      author: \"\",\n      title: \"\",\n      authorAvatar: \"\",\n      content: \"\",\n      category: \"\",\n      postID: null\n    })\n\n    this.handleClose()\n    this.sortPosts(this.state.sortOrder)\n  }\n\n  // called when user chooses a category for new post\n  changeCategory = (_category) => {\n\n    this.setState({ category: _category })\n  }\n\n  // called when user adds a comment to a post\n  postComment = (target) => {\n\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    const targetPostComments = targetPost[0].comments\n\n    const newComment = {\n      commenter: this.props.username,\n      commentContent: target.comment\n    }\n\n    targetPostComments.push(newComment)\n    targetPost[0].comments = targetPostComments\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n\n    this.setState({ posts: otherPosts })\n  }\n\n  // called when user deletes a post\n  deletePosts = (target) => {\n\n    const targetPostID = target.postID\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.props.userInfo\n    const indexu = userInfo.userUpvotedPosts.indexOf(targetPostID)\n    const indexd = userInfo.userDownvotedPosts.indexOf(targetPostID)\n    const indexs = userInfo.userSavedPosts.indexOf(targetPostID)\n\n    if (indexu !== -1) {\n      userInfo.userUpvotedPosts.splice(indexu, 1)\n      this.props.userInfoUpdater(userInfo)\n    }\n    if (indexd !== -1) {\n      userInfo.userDownvotedPosts.splice(indexd, 1)\n      this.props.userInfoUpdater(userInfo)\n    }\n    if (indexs !== -1) {\n      userInfo.userSavedPosts.splice(indexs, 1)\n      this.props.userInfoUpdater(userInfo)\n    }\n  }\n\n  // called when user upvotes a post\n  addUpvote = (target) => {\n\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numUpvotes = targetPost[0].numUpvotes + 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.props.userInfo\n    userInfo.userUpvotedPosts.push(targetPostID)\n    this.props.userInfoUpdater(userInfo)\n  }\n\n  // called when user deletes their upvote from a post\n  minusUpvote = (target) => {\n\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numUpvotes = targetPost[0].numUpvotes - 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.props.userInfo\n    const index = userInfo.userUpvotedPosts.indexOf(targetPostID)\n    if (index !== -1) userInfo.userUpvotedPosts.splice(index, 1)\n    this.props.userInfoUpdater(userInfo)\n  }\n\n  // called when user downvotes a post\n  addDownvote = (target) => {\n\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numDownvotes = targetPost[0].numDownvotes + 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.props.userInfo\n    userInfo.userDownvotedPosts.push(targetPostID)\n    this.props.userInfoUpdater(userInfo)\n  }\n\n  // called when user deletes a downvote from a post\n  minusDownvote = (target) => {\n\n    const targetPostID = target.postID\n    const targetPostIndex = this.state.posts.findIndex(post => post.postID === targetPostID)\n    const targetPost = this.state.posts.filter((p) => { return p.postID === targetPostID })\n    targetPost[0].numDownvotes = targetPost[0].numDownvotes - 1\n    const otherPosts = this.state.posts.filter((p) => { return p.postID !== targetPostID })\n    otherPosts.splice(targetPostIndex, 0, targetPost[0])\n    this.setState({ posts: otherPosts })\n\n    const userInfo = this.props.userInfo\n    const index = userInfo.userDownvotedPosts.indexOf(targetPostID)\n    if (index !== -1) userInfo.userDownvotedPosts.splice(index, 1)\n    this.props.userInfoUpdater(userInfo)\n  }\n\n  // main render function\n  render() {\n\n    // pass in props\n    const { userInfo, FAInfo, userInfoUpdater, sidebarToggle } = this.props\n    const { classes } = this.props\n\n    // mainList is the list of posts to display, here we display different versions of the list based on some parameters\n    let mainList;\n\n    // case when the side bar is set to home\n    if (sidebarToggle === \"Home\") {\n      mainList = <List className={ classes.forumList }>\n        { this.state.posts.map((thread) => {\n            if (this.state.openManagePost ? (userInfo.usertype === \"FA\" ? this.state.postFilter === \"\" : this.state.postFilter === \"\" && thread.author === userInfo.username) : this.state.postFilter === \"\") {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n            else if (this.state.openManagePost ? (userInfo.usertype === \"FA\" ? this.state.postFilter === thread.category : this.state.postFilter === thread.category && thread.author === userInfo.username) : this.state.postFilter === thread.category) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n          })\n        }\n      </List>\n    }\n\n    // case when the side bar is set to Followed Posts\n    else if (sidebarToggle === \"Followed Posts\") {\n      mainList = <List className={ classes.forumList }>\n        { this.state.posts.map((thread) => {\n            if (this.state.postFilter === \"\" && userInfo.userFollows.includes((FAInfo.filter((FA) => {return FA.FAName === thread.author}))[0])) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n            else if (this.state.postFilter === thread.category && userInfo.userFollows.includes((FAInfo.filter((FA) => {return FA.FAName === thread.author}))[0])) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n          })\n        }\n      </List>\n    }\n\n    // case when the side bar is set to Liked Posts\n    else if (sidebarToggle === \"Liked Posts\") {\n      mainList = <List className={ classes.forumList }>\n        { this.state.posts.map((thread) => {\n            if (this.state.postFilter === \"\" && userInfo.userUpvotedPosts.includes(thread.postID)) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n            else if (this.state.postFilter === thread.category && userInfo.userUpvotedPosts.includes(thread.postID)) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n          })\n        }\n      </List>\n    }\n\n    // case when the side bar is set to Saved Posts\n    else if (sidebarToggle === \"Saved Posts\") {\n      mainList = <List className={ classes.forumList }>\n        { this.state.posts.map((thread) => {\n            if (this.state.postFilter === \"\" && userInfo.userSavedPosts.includes(thread.postID)) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n            else if (this.state.postFilter === thread.category && userInfo.userSavedPosts.includes(thread.postID)) {\n              return (\n                <div>\n                  <ForumListItem postTitle={ thread.title }\n                                postAuthor={ thread.author }\n                                postAuthorUsertype={ thread.authorUsertype}\n                                postTextContent={ thread.content }\n                                avatar={ thread.authorAvatar }\n                                category={ thread.category }\n                                comments={ thread.comments }\n                                postID={ thread.postID }\n                                openManagePost={ this.state.openManagePost ? true : false }\n                                numUpvotes={ thread.numUpvotes }\n                                numDownvotes={ thread.numDownvotes }\n                                userInfo={ userInfo }\n                                FAInfo={ FAInfo }\n                                userInfoUpdater={ userInfoUpdater }\n                                addUpvote={ this.addUpvote }\n                                minusUpvote={ this.minusUpvote }\n                                addDownvote={ this.addDownvote }\n                                minusDownvote={ this.minusDownvote }\n                                deletePosts={ this.deletePosts }\n                                postComment={ this.postComment }/>\n                  { this.state.posts[this.state.posts.length - 1] === thread ? null : <Divider variant=\"inset\" component=\"li\" />}\n                </div>\n              )\n            }\n          })\n        }\n      </List>\n    }\n\n    return (\n        <div className={ classes.root }>\n          <Container maxWidth=\"xl\">\n\n            {/* {top bar of forum list} */}\n            <Card className={ classes.forumTopChunk }>\n\n              <CardActions className={ classes.forumTopBar }>\n\n                {/* {page title} */}\n                <CardContent>\n                  <span className={ classes.purpleText } > { sidebarToggle } </span>\n                </CardContent>\n\n                {/* {drop down to filter posts based on category} */}\n                <FormControl className={ classes.filter }> \n                  <InputLabel>Filter Posts</InputLabel>\n                  <Select onChange={ this.handleFilterInputChange }>\n                    <MenuItem value=\"\">None</MenuItem>\n                    <MenuItem value=\"Announcement\">Announcement</MenuItem>\n                    <MenuItem value=\"Question\">Question</MenuItem>\n                    <MenuItem value=\"Opinion\">Opinion</MenuItem>\n                  </Select>\n                </FormControl>\n\n                {/* {drop down to reorder posts} */}\n                <FormControl className={ classes.filter }>\n                  <InputLabel>Sort By</InputLabel>\n                  <Select onChange={ this.handleSortInputChange }>\n                    <MenuItem value=\"Oldest\">Oldest</MenuItem>\n                    <MenuItem value=\"Newest\">Newest</MenuItem>\n                    <MenuItem value=\"MostUpvotes\">Most Upvotes</MenuItem>\n                    <MenuItem value=\"BestRated\">Best Rated</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Grid Container justify=\"flex-end\">\n\n                  {/* {add post button} */}\n                  { this.state.openManagePost === true || this.state.openNewPost === true || sidebarToggle !== \"Home\" ? \n                    <Tooltip title=\"Add Post\">\n                      <Fab color=\"primary\" size=\"small\" onClick={ this.handleClickOpen } disabled>\n                        <AddIcon fontSize=\"large\"/>\n                      </Fab>\n                    </Tooltip>\n                    :\n                    <Tooltip title=\"Add Post\">\n                      <Fab color=\"primary\" size=\"small\" onClick={ this.handleClickOpen }>\n                        <AddIcon fontSize=\"large\"/>\n                      </Fab>\n                    </Tooltip>\n                  }\n\n                  {/* {manage post button} */}\n                  { this.state.openManagePost ? \n                    <Button className={ classes.forumBarButton } color=\"primary\" variant=\"contained\" onClick={ this.handleClickManageDone }>\n                      Done\n                    </Button> : (sidebarToggle === \"Home\" ? \n                    <Button className={ classes.forumBarButton } color=\"primary\" variant=\"contained\" onClick={ this.handleClickManage }>\n                      Manage Posts\n                    </Button> : \n                    <Button className={ classes.forumBarButton } color=\"primary\" variant=\"contained\" disabled>\n                      Manage Posts\n                    </Button> )\n                  }\n\n                </Grid>\n                \n              </CardActions>\n              \n              {/* {new post drop down entries} */}\n              { this.state.openNewPost ? \n              <React.Fragment>\n\n                <CardContent>\n\n                  {/* {enter post title} */}\n                  <TextField\n                    value={ this.state.title }\n                    onChange={ this.handleInputChange }\n                    size=\"small\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    name=\"title\"\n                    label=\"Post Title\"\n                    fullWidth\n                  />\n\n                  <br></br>\n                  <br></br>\n                  <Typography>Category:</Typography>\n                  <br></br>\n                  \n                  {/* {enter post category} */}\n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" fullWidth>\n                    <Button variant={ this.state.category === \"Announcement\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Announcement\") }>Announcement</Button>\n                    <Button variant={ this.state.category === \"Question\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Question\") }>Question</Button>\n                    <Button variant={ this.state.category === \"Opinion\" ? \"contained\" : \"outlined\"} onClick={ () => this.changeCategory(\"Opinion\") }>Opinion</Button>\n                  </ButtonGroup>\n\n                  <br></br>\n                  <br></br>\n\n                  {/* {enter post contents} */}\n                  <TextField\n                    value={ this.state.content }\n                    onChange={ this.handleInputChange }\n                    multiline\n                    rows=\"5\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    name=\"content\"\n                    label=\"Say something here...\"\n                    fullWidth\n                  />\n\n                </CardContent>\n\n                {/* {cancel and post buttons} */}\n                <CardActions>\n\n                  <Button onClick={ this.handleClose } color=\"primary\">\n                    Cancel\n                  </Button>\n\n                  <Button onClick={ () => this.addPost(userInfo.username) } color=\"primary\" disabled={ this.state.title !== \"\" && this.state.content !== \"\" && this.state.category !== \"\" ? false : true}>\n                    Post\n                  </Button>\n\n                </CardActions>\n\n              </React.Fragment>\n              : null }\n              \n            </Card>\n\n            {/* {list of posts as defined above} */}\n            {mainList}\n              \n          </Container>\n        </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ForumList);"]},"metadata":{},"sourceType":"module"}